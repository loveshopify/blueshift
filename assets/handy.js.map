{"version":3,"file":"handy.js","sources":["node_modules/core-js/modules/_global.js","node_modules/core-js/modules/_has.js","node_modules/core-js/modules/_fails.js","node_modules/core-js/modules/_descriptors.js","node_modules/core-js/modules/_core.js","node_modules/core-js/modules/_is-object.js","node_modules/core-js/modules/_an-object.js","node_modules/core-js/modules/_dom-create.js","node_modules/core-js/modules/_ie8-dom-define.js","node_modules/core-js/modules/_to-primitive.js","node_modules/core-js/modules/_object-dp.js","node_modules/core-js/modules/_property-desc.js","node_modules/core-js/modules/_hide.js","node_modules/core-js/modules/_uid.js","node_modules/core-js/modules/_redefine.js","node_modules/core-js/modules/_a-function.js","node_modules/core-js/modules/_ctx.js","node_modules/core-js/modules/_export.js","node_modules/core-js/modules/_meta.js","node_modules/core-js/modules/_shared.js","node_modules/core-js/modules/_wks.js","node_modules/core-js/modules/_set-to-string-tag.js","node_modules/core-js/modules/_wks-ext.js","node_modules/core-js/modules/_library.js","node_modules/core-js/modules/_wks-define.js","node_modules/core-js/modules/_cof.js","node_modules/core-js/modules/_iobject.js","node_modules/core-js/modules/_defined.js","node_modules/core-js/modules/_to-iobject.js","node_modules/core-js/modules/_to-integer.js","node_modules/core-js/modules/_to-length.js","node_modules/core-js/modules/_to-absolute-index.js","node_modules/core-js/modules/_array-includes.js","node_modules/core-js/modules/_shared-key.js","node_modules/core-js/modules/_object-keys-internal.js","node_modules/core-js/modules/_enum-bug-keys.js","node_modules/core-js/modules/_object-keys.js","node_modules/core-js/modules/_object-gops.js","node_modules/core-js/modules/_object-pie.js","node_modules/core-js/modules/_enum-keys.js","node_modules/core-js/modules/_is-array.js","node_modules/core-js/modules/_object-dps.js","node_modules/core-js/modules/_html.js","node_modules/core-js/modules/_object-create.js","node_modules/core-js/modules/_object-gopn.js","node_modules/core-js/modules/_object-gopn-ext.js","node_modules/core-js/modules/_object-gopd.js","node_modules/core-js/modules/es6.symbol.js","node_modules/core-js/modules/_classof.js","node_modules/core-js/modules/es6.object.to-string.js","node_modules/core-js/modules/_to-object.js","node_modules/core-js/modules/_object-assign.js","node_modules/core-js/modules/es6.object.assign.js","node_modules/core-js/modules/_add-to-unscopables.js","node_modules/core-js/modules/_iter-step.js","node_modules/core-js/modules/_iterators.js","node_modules/core-js/modules/_iter-create.js","node_modules/core-js/modules/_object-gpo.js","node_modules/core-js/modules/_iter-define.js","node_modules/core-js/modules/es6.array.iterator.js","node_modules/jquery/dist/jquery.js","source/scripts/globals/jquery.js","node_modules/jquery-trend/jquery.trend.js","node_modules/jquery-revealer/jquery.revealer.js","node_modules/scriptjs/dist/script.js","node_modules/desandro-classie/classie.js","node_modules/wolfy87-eventemitter/EventEmitter.js","node_modules/eventie/eventie.js","node_modules/desandro-get-style-property/get-style-property.js","node_modules/get-size/get-size.js","node_modules/doc-ready/doc-ready.js","node_modules/desandro-matches-selector/matches-selector.js","node_modules/fizzy-ui-utils/utils.js","node_modules/flickity/js/cell.js","node_modules/flickity/js/animate.js","node_modules/flickity/js/flickity.js","node_modules/unipointer/unipointer.js","node_modules/unidragger/unidragger.js","node_modules/flickity/js/drag.js","node_modules/tap-listener/tap-listener.js","node_modules/flickity/js/prev-next-button.js","node_modules/flickity/js/page-dots.js","node_modules/flickity/js/player.js","node_modules/flickity/js/add-remove-cell.js","node_modules/flickity/js/lazyload.js","node_modules/flickity/js/index.js","source/scripts/globals/flickity-ios-fix.js","node_modules/fitvids/index.js","node_modules/grouped-content/dist/index.js","source/scripts/globals/RTE.js","source/scripts/globals/google-maps.js","source/scripts/templates/Account.js","source/scripts/Layout.js","source/scripts/templates/Index.js","source/scripts/Sections.js","source/scripts/snippets/NavTrigger.js","node_modules/just-debounce/index.js","source/scripts/snippets/Map.js","source/scripts/sections/ContactbarStaticSection.js","node_modules/ev-emitter/ev-emitter.js","node_modules/imagesloaded/imagesloaded.js","node_modules/outlayer/node_modules/get-size/get-size.js","node_modules/outlayer/node_modules/desandro-matches-selector/matches-selector.js","node_modules/outlayer/node_modules/fizzy-ui-utils/utils.js","node_modules/outlayer/item.js","node_modules/outlayer/outlayer.js","node_modules/masonry-layout/node_modules/get-size/get-size.js","node_modules/masonry-layout/masonry.js","node_modules/flickity-imagesloaded/node_modules/imagesloaded/imagesloaded.js","node_modules/flickity-imagesloaded/flickity-imagesloaded.js","source/scripts/snippets/BlogLayout.js","source/scripts/sections/DynamicBlogPosts.js","node_modules/shopify-currency-converter/dist/index.js","source/scripts/ProductOptions.js","source/scripts/VariantHelper.js","source/scripts/Menu.js","source/scripts/snippets/Quantity.js","source/scripts/snippets/ProductForm.js","source/scripts/snippets/ProductMenu.js","source/scripts/snippets/ProductQuickshop.js","source/scripts/snippets/ProductItem.js","source/scripts/snippets/ProductHighlights.js","source/scripts/sections/DynamicFeaturedProducts.js","node_modules/pxu-instagram-squared/index.js","source/scripts/sections/DynamicInstagram.js","source/scripts/sections/DynamicSlideshow.js","node_modules/twitter-fetcher/js/twitterFetcher_min.js","source/scripts/sections/DynamicTwitter.js","source/scripts/sections/GiftCardStaticSection.js","source/scripts/snippets/NavMobile.js","source/scripts/snippets/NavDesktop.js","source/scripts/sections/HeaderStaticSection.js","source/scripts/snippets/MeganavMenu.js","source/scripts/snippets/FadePanel.js","source/scripts/sections/MeganavStaticSection.js","source/scripts/sections/MobileCollectionsDynamicSection.js","source/scripts/sections/SearchStaticSection.js","source/scripts/sections/StaticBlog.js","source/scripts/sections/StaticCart.js","source/scripts/sections/StaticCollection.js","source/scripts/snippets/ProductDetails.js","source/scripts/snippets/ProductZoom.js","source/scripts/sections/StaticProduct.js","source/scripts/Handy.js"],"sourcesContent":["// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var core = module.exports = { version: '2.5.1' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var META = require('./_uid')('meta');\nvar isObject = require('./_is-object');\nvar has = require('./_has');\nvar setDesc = require('./_object-dp').f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !require('./_fails')(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function (it) {\n  setDesc(it, META, { value: {\n    i: 'O' + ++id, // object ID\n    w: {}          // weak collections IDs\n  } });\n};\nvar fastKey = function (it, create) {\n  // return primitive with prefix\n  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMeta(it);\n  // return object ID\n  } return it[META].i;\n};\nvar getWeak = function (it, create) {\n  if (!has(it, META)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMeta(it);\n  // return hash weak collections IDs\n  } return it[META].w;\n};\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n","var global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","exports.f = require('./_wks');\n","module.exports = false;\n","var global = require('./_global');\nvar core = require('./_core');\nvar LIBRARY = require('./_library');\nvar wksExt = require('./_wks-ext');\nvar defineProperty = require('./_object-dp').f;\nmodule.exports = function (name) {\n  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});\n  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });\n};\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","exports.f = Object.getOwnPropertySymbols;\n","exports.f = {}.propertyIsEnumerable;\n","// all enumerable object keys, includes symbols\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nmodule.exports = function (it) {\n  var result = getKeys(it);\n  var getSymbols = gOPS.f;\n  if (getSymbols) {\n    var symbols = getSymbols(it);\n    var isEnum = pIE.f;\n    var i = 0;\n    var key;\n    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);\n  } return result;\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nvar toIObject = require('./_to-iobject');\nvar gOPN = require('./_object-gopn').f;\nvar toString = {}.toString;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return gOPN(it);\n  } catch (e) {\n    return windowNames.slice();\n  }\n};\n\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));\n};\n","var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","'use strict';\n// ECMAScript 6 symbols shim\nvar global = require('./_global');\nvar has = require('./_has');\nvar DESCRIPTORS = require('./_descriptors');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar META = require('./_meta').KEY;\nvar $fails = require('./_fails');\nvar shared = require('./_shared');\nvar setToStringTag = require('./_set-to-string-tag');\nvar uid = require('./_uid');\nvar wks = require('./_wks');\nvar wksExt = require('./_wks-ext');\nvar wksDefine = require('./_wks-define');\nvar enumKeys = require('./_enum-keys');\nvar isArray = require('./_is-array');\nvar anObject = require('./_an-object');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar createDesc = require('./_property-desc');\nvar _create = require('./_object-create');\nvar gOPNExt = require('./_object-gopn-ext');\nvar $GOPD = require('./_object-gopd');\nvar $DP = require('./_object-dp');\nvar $keys = require('./_object-keys');\nvar gOPD = $GOPD.f;\nvar dP = $DP.f;\nvar gOPN = gOPNExt.f;\nvar $Symbol = global.Symbol;\nvar $JSON = global.JSON;\nvar _stringify = $JSON && $JSON.stringify;\nvar PROTOTYPE = 'prototype';\nvar HIDDEN = wks('_hidden');\nvar TO_PRIMITIVE = wks('toPrimitive');\nvar isEnum = {}.propertyIsEnumerable;\nvar SymbolRegistry = shared('symbol-registry');\nvar AllSymbols = shared('symbols');\nvar OPSymbols = shared('op-symbols');\nvar ObjectProto = Object[PROTOTYPE];\nvar USE_NATIVE = typeof $Symbol == 'function';\nvar QObject = global.QObject;\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDesc = DESCRIPTORS && $fails(function () {\n  return _create(dP({}, 'a', {\n    get: function () { return dP(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (it, key, D) {\n  var protoDesc = gOPD(ObjectProto, key);\n  if (protoDesc) delete ObjectProto[key];\n  dP(it, key, D);\n  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);\n} : dP;\n\nvar wrap = function (tag) {\n  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);\n  sym._k = tag;\n  return sym;\n};\n\nvar isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  return it instanceof $Symbol;\n};\n\nvar $defineProperty = function defineProperty(it, key, D) {\n  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);\n  anObject(it);\n  key = toPrimitive(key, true);\n  anObject(D);\n  if (has(AllSymbols, key)) {\n    if (!D.enumerable) {\n      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));\n      it[HIDDEN][key] = true;\n    } else {\n      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;\n      D = _create(D, { enumerable: createDesc(0, false) });\n    } return setSymbolDesc(it, key, D);\n  } return dP(it, key, D);\n};\nvar $defineProperties = function defineProperties(it, P) {\n  anObject(it);\n  var keys = enumKeys(P = toIObject(P));\n  var i = 0;\n  var l = keys.length;\n  var key;\n  while (l > i) $defineProperty(it, key = keys[i++], P[key]);\n  return it;\n};\nvar $create = function create(it, P) {\n  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n};\nvar $propertyIsEnumerable = function propertyIsEnumerable(key) {\n  var E = isEnum.call(this, key = toPrimitive(key, true));\n  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;\n  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;\n};\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {\n  it = toIObject(it);\n  key = toPrimitive(key, true);\n  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;\n  var D = gOPD(it, key);\n  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;\n  return D;\n};\nvar $getOwnPropertyNames = function getOwnPropertyNames(it) {\n  var names = gOPN(toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);\n  } return result;\n};\nvar $getOwnPropertySymbols = function getOwnPropertySymbols(it) {\n  var IS_OP = it === ObjectProto;\n  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));\n  var result = [];\n  var i = 0;\n  var key;\n  while (names.length > i) {\n    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);\n  } return result;\n};\n\n// 19.4.1.1 Symbol([description])\nif (!USE_NATIVE) {\n  $Symbol = function Symbol() {\n    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');\n    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);\n    var $set = function (value) {\n      if (this === ObjectProto) $set.call(OPSymbols, value);\n      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDesc(this, tag, createDesc(1, value));\n    };\n    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });\n    return wrap(tag);\n  };\n  redefine($Symbol[PROTOTYPE], 'toString', function toString() {\n    return this._k;\n  });\n\n  $GOPD.f = $getOwnPropertyDescriptor;\n  $DP.f = $defineProperty;\n  require('./_object-gopn').f = gOPNExt.f = $getOwnPropertyNames;\n  require('./_object-pie').f = $propertyIsEnumerable;\n  require('./_object-gops').f = $getOwnPropertySymbols;\n\n  if (DESCRIPTORS && !require('./_library')) {\n    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n  }\n\n  wksExt.f = function (name) {\n    return wrap(wks(name));\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });\n\nfor (var es6Symbols = (\n  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14\n  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'\n).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);\n\nfor (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);\n\n$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {\n  // 19.4.2.1 Symbol.for(key)\n  'for': function (key) {\n    return has(SymbolRegistry, key += '')\n      ? SymbolRegistry[key]\n      : SymbolRegistry[key] = $Symbol(key);\n  },\n  // 19.4.2.5 Symbol.keyFor(sym)\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');\n    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;\n  },\n  useSetter: function () { setter = true; },\n  useSimple: function () { setter = false; }\n});\n\n$export($export.S + $export.F * !USE_NATIVE, 'Object', {\n  // 19.1.2.2 Object.create(O [, Properties])\n  create: $create,\n  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n  defineProperty: $defineProperty,\n  // 19.1.2.3 Object.defineProperties(O, Properties)\n  defineProperties: $defineProperties,\n  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n  // 19.1.2.7 Object.getOwnPropertyNames(O)\n  getOwnPropertyNames: $getOwnPropertyNames,\n  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n  getOwnPropertySymbols: $getOwnPropertySymbols\n});\n\n// 24.3.2 JSON.stringify(value [, replacer [, space]])\n$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {\n  var S = $Symbol();\n  // MS Edge converts symbol values to JSON as {}\n  // WebKit converts symbol values to JSON as null\n  // V8 throws on boxed symbols\n  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';\n})), 'JSON', {\n  stringify: function stringify(it) {\n    if (it === undefined || isSymbol(it)) return; // IE8 returns string on undefined\n    var args = [it];\n    var i = 1;\n    var replacer, $replacer;\n    while (arguments.length > i) args.push(arguments[i++]);\n    replacer = args[1];\n    if (typeof replacer == 'function') $replacer = replacer;\n    if ($replacer || !isArray(replacer)) replacer = function (key, value) {\n      if ($replacer) value = $replacer.call(this, key, value);\n      if (!isSymbol(value)) return value;\n    };\n    args[1] = replacer;\n    return _stringify.apply($JSON, args);\n  }\n});\n\n// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)\n$Symbol[PROTOTYPE][TO_PRIMITIVE] || require('./_hide')($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);\n// 19.4.3.5 Symbol.prototype[@@toStringTag]\nsetToStringTag($Symbol, 'Symbol');\n// 20.2.1.9 Math[@@toStringTag]\nsetToStringTag(Math, 'Math', true);\n// 24.3.3 JSON[@@toStringTag]\nsetToStringTag(global.JSON, 'JSON', true);\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","'use strict';\n// 19.1.3.6 Object.prototype.toString()\nvar classof = require('./_classof');\nvar test = {};\ntest[require('./_wks')('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  require('./_redefine')(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","'use strict';\n// 19.1.2.1 Object.assign(target, source, ...)\nvar getKeys = require('./_object-keys');\nvar gOPS = require('./_object-gops');\nvar pIE = require('./_object-pie');\nvar toObject = require('./_to-object');\nvar IObject = require('./_iobject');\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = !$assign || require('./_fails')(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./_export');\n\n$export($export.S + $export.F, 'Object', { assign: require('./_object-assign') });\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = {};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","/*!\n * jQuery JavaScript Library v3.2.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2017-03-20T18:59Z\n */\n( function( global, factory ) {\n\n\t\"use strict\";\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\n\t\t// For CommonJS and CommonJS-like environments where a proper `window`\n\t\t// is present, execute the factory and get jQuery.\n\t\t// For environments that do not have a `window` with a `document`\n\t\t// (such as Node.js), expose a factory as module.exports.\n\t\t// This accentuates the need for the creation of a real `window`.\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info.\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n// enough that all such attempts are guarded in a try block.\n\"use strict\";\n\nvar arr = [];\n\nvar document = window.document;\n\nvar getProto = Object.getPrototypeOf;\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar fnToString = hasOwn.toString;\n\nvar ObjectFunctionString = fnToString.call( Object );\n\nvar support = {};\n\n\n\n\tfunction DOMEval( code, doc ) {\n\t\tdoc = doc || document;\n\n\t\tvar script = doc.createElement( \"script\" );\n\n\t\tscript.text = code;\n\t\tdoc.head.appendChild( script ).parentNode.removeChild( script );\n\t}\n/* global Symbol */\n// Defining this global in .eslintrc.json would create a danger of using the global\n// unguarded in another place, it seems safer to define global only for this module\n\n\n\nvar\n\tversion = \"3.2.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android <=4.0 only\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([a-z])/g,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\n\t\t// Return all the elements in a clean array\n\t\tif ( num == null ) {\n\t\t\treturn slice.call( this );\n\t\t}\n\n\t\t// Return just the one element from the set\n\t\treturn num < 0 ? this[ num + this.length ] : this[ num ];\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\teach: function( callback ) {\n\t\treturn jQuery.each( this, callback );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t} ) );\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor();\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[ 0 ] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// Skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction( target ) ) {\n\t\ttarget = {};\n\t}\n\n\t// Extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\n\t\t// Only deal with non-null/undefined values\n\t\tif ( ( options = arguments[ i ] ) != null ) {\n\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\n\t\t\t\t\t( copyIsArray = Array.isArray( copy ) ) ) ) {\n\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && Array.isArray( src ) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject( src ) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend( {\n\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type( obj ) === \"function\";\n\t},\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\n\t\t// As of jQuery 3.0, isNumeric is limited to\n\t\t// strings and numbers (primitives or objects)\n\t\t// that can be coerced to finite numbers (gh-2662)\n\t\tvar type = jQuery.type( obj );\n\t\treturn ( type === \"number\" || type === \"string\" ) &&\n\n\t\t\t// parseFloat NaNs numeric-cast false positives (\"\")\n\t\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t\t// subtraction forces infinities to NaN\n\t\t\t!isNaN( obj - parseFloat( obj ) );\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\tvar proto, Ctor;\n\n\t\t// Detect obvious negatives\n\t\t// Use toString instead of jQuery.type to catch host objects\n\t\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tproto = getProto( obj );\n\n\t\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\n\t\tif ( !proto ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Objects with prototype are plain iff they were constructed by a global Object function\n\t\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\n\t\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\n\t\t/* eslint-disable no-unused-vars */\n\t\t// See https://github.com/eslint/eslint/issues/6125\n\t\tvar name;\n\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\n\t\t// Support: Android <=2.3 only (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call( obj ) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tDOMEval( code );\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Support: IE <=9 - 11, Edge 12 - 13\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\teach: function( obj, callback ) {\n\t\tvar length, i = 0;\n\n\t\tif ( isArrayLike( obj ) ) {\n\t\t\tlength = obj.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( i in obj ) {\n\t\t\t\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android <=4.0 only\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArrayLike( Object( arr ) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t// push.apply(_, arraylike) throws on ancient WebKit\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar length, value,\n\t\t\ti = 0,\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArrayLike( elems ) ) {\n\t\t\tlength = elems.length;\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n} );\n\nif ( typeof Symbol === \"function\" ) {\n\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\n}\n\n// Populate the class2type map\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\nfunction( i, name ) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n} );\n\nfunction isArrayLike( obj ) {\n\n\t// Support: real iOS 8.2 only (not reproducible in simulator)\n\t// `in` check used to prevent JIT error (gh-2145)\n\t// hasOwn isn't used here due to false negatives\n\t// regarding Nodelist length in IE\n\tvar length = !!obj && \"length\" in obj && obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + 1 * new Date(),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf as it's faster than native\n\t// https://jsperf.com/thor-indexof-vs-for/5\n\tindexOf = function( list, elem ) {\n\t\tvar i = 0,\n\t\t\tlen = list.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( list[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\n\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + identifier + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + identifier + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\n\t// CSS escapes\n\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t},\n\n\t// CSS string/identifier serialization\n\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\n\trcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n\tfcssescape = function( ch, asCodePoint ) {\n\t\tif ( asCodePoint ) {\n\n\t\t\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n\t\t\tif ( ch === \"\\0\" ) {\n\t\t\t\treturn \"\\uFFFD\";\n\t\t\t}\n\n\t\t\t// Control characters and (dependent upon position) numbers get escaped as code points\n\t\t\treturn ch.slice( 0, -1 ) + \"\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\n\t\t}\n\n\t\t// Other potentially-special ASCII characters get backslash-escaped\n\t\treturn \"\\\\\" + ch;\n\t},\n\n\t// Used for iframes\n\t// See setDocument()\n\t// Removing the function wrapper causes a \"Permission Denied\"\n\t// error in IE\n\tunloadHandler = function() {\n\t\tsetDocument();\n\t},\n\n\tdisabledAncestor = addCombinator(\n\t\tfunction( elem ) {\n\t\t\treturn elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n\t\t},\n\t\t{ dir: \"parentNode\", next: \"legend\" }\n\t);\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar m, i, elem, nid, match, groups, newSelector,\n\t\tnewContext = context && context.ownerDocument,\n\n\t\t// nodeType defaults to 9, since context defaults to document\n\t\tnodeType = context ? context.nodeType : 9;\n\n\tresults = results || [];\n\n\t// Return early from calls with invalid selector or context\n\tif ( typeof selector !== \"string\" || !selector ||\n\t\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\n\n\t\treturn results;\n\t}\n\n\t// Try to shortcut find operations (as opposed to filters) in HTML documents\n\tif ( !seed ) {\n\n\t\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\t\tsetDocument( context );\n\t\t}\n\t\tcontext = context || document;\n\n\t\tif ( documentIsHTML ) {\n\n\t\t\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n\t\t\t// (excepting DocumentFragment context, where the methods don't exist)\n\t\t\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\n\n\t\t\t\t// ID selector\n\t\t\t\tif ( (m = match[1]) ) {\n\n\t\t\t\t\t// Document context\n\t\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\t\tif ( (elem = context.getElementById( m )) ) {\n\n\t\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t// Element context\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// Support: IE, Opera, Webkit\n\t\t\t\t\t\t// TODO: identify versions\n\t\t\t\t\t\t// getElementById can match elements by name instead of ID\n\t\t\t\t\t\tif ( newContext && (elem = newContext.getElementById( m )) &&\n\t\t\t\t\t\t\tcontains( context, elem ) &&\n\t\t\t\t\t\t\telem.id === m ) {\n\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t// Type selector\n\t\t\t\t} else if ( match[2] ) {\n\t\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\t\treturn results;\n\n\t\t\t\t// Class selector\n\t\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName &&\n\t\t\t\t\tcontext.getElementsByClassName ) {\n\n\t\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\t\treturn results;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Take advantage of querySelectorAll\n\t\t\tif ( support.qsa &&\n\t\t\t\t!compilerCache[ selector + \" \" ] &&\n\t\t\t\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\n\t\t\t\tif ( nodeType !== 1 ) {\n\t\t\t\t\tnewContext = context;\n\t\t\t\t\tnewSelector = selector;\n\n\t\t\t\t// qSA looks outside Element context, which is not what we want\n\t\t\t\t// Thanks to Andrew Dupont for this workaround technique\n\t\t\t\t// Support: IE <=8\n\t\t\t\t// Exclude object elements\n\t\t\t\t} else if ( context.nodeName.toLowerCase() !== \"object\" ) {\n\n\t\t\t\t\t// Capture the context ID, setting it first if necessary\n\t\t\t\t\tif ( (nid = context.getAttribute( \"id\" )) ) {\n\t\t\t\t\t\tnid = nid.replace( rcssescape, fcssescape );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.setAttribute( \"id\", (nid = expando) );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prefix every selector in the list\n\t\t\t\t\tgroups = tokenize( selector );\n\t\t\t\t\ti = groups.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tgroups[i] = \"#\" + nid + \" \" + toSelector( groups[i] );\n\t\t\t\t\t}\n\t\t\t\t\tnewSelector = groups.join( \",\" );\n\n\t\t\t\t\t// Expand context for sibling selectors\n\t\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\n\t\t\t\t\t\tcontext;\n\t\t\t\t}\n\n\t\t\t\tif ( newSelector ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t} catch ( qsaError ) {\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tif ( nid === expando ) {\n\t\t\t\t\t\t\tcontext.removeAttribute( \"id\" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\nfunction assert( fn ) {\n\tvar el = document.createElement(\"fieldset\");\n\n\ttry {\n\t\treturn !!fn( el );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( el.parentNode ) {\n\t\t\tel.parentNode.removeChild( el );\n\t\t}\n\t\t// release memory in IE\n\t\tel = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = arr.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\ta.sourceIndex - b.sourceIndex;\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\nfunction createDisabledPseudo( disabled ) {\n\n\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n\treturn function( elem ) {\n\n\t\t// Only certain elements can match :enabled or :disabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n\t\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n\t\tif ( \"form\" in elem ) {\n\n\t\t\t// Check for inherited disabledness on relevant non-disabled elements:\n\t\t\t// * listed form-associated elements in a disabled fieldset\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n\t\t\t// * option elements in a disabled optgroup\n\t\t\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n\t\t\t// All such elements have a \"form\" property.\n\t\t\tif ( elem.parentNode && elem.disabled === false ) {\n\n\t\t\t\t// Option elements defer to a parent optgroup if present\n\t\t\t\tif ( \"label\" in elem ) {\n\t\t\t\t\tif ( \"label\" in elem.parentNode ) {\n\t\t\t\t\t\treturn elem.parentNode.disabled === disabled;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn elem.disabled === disabled;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Support: IE 6 - 11\n\t\t\t\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\t\t\t\treturn elem.isDisabled === disabled ||\n\n\t\t\t\t\t// Where there is no isDisabled, check manually\n\t\t\t\t\t/* jshint -W018 */\n\t\t\t\t\telem.isDisabled !== !disabled &&\n\t\t\t\t\t\tdisabledAncestor( elem ) === disabled;\n\t\t\t}\n\n\t\t\treturn elem.disabled === disabled;\n\n\t\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\n\t\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n\t\t// even exist on them, let alone have a boolean value.\n\t\t} else if ( \"label\" in elem ) {\n\t\t\treturn elem.disabled === disabled;\n\t\t}\n\n\t\t// Remaining elements are neither :enabled nor :disabled\n\t\treturn false;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare, subWindow,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc;\n\n\t// Return early if doc is invalid or already selected\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Update global variables\n\tdocument = doc;\n\tdocElem = document.documentElement;\n\tdocumentIsHTML = !isXML( document );\n\n\t// Support: IE 9-11, Edge\n\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\tif ( preferredDoc !== document &&\n\t\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\n\n\t\t// Support: IE 11, Edge\n\t\tif ( subWindow.addEventListener ) {\n\t\t\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\n\n\t\t// Support: IE 9 - 10 only\n\t\t} else if ( subWindow.attachEvent ) {\n\t\t\tsubWindow.attachEvent( \"onunload\", unloadHandler );\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties\n\t// (excepting IE8 booleans)\n\tsupport.attributes = assert(function( el ) {\n\t\tel.className = \"i\";\n\t\treturn !el.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( el ) {\n\t\tel.appendChild( document.createComment(\"\") );\n\t\treturn !el.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Support: IE<9\n\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programmatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( el ) {\n\t\tdocElem.appendChild( el ).id = expando;\n\t\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\n\t});\n\n\t// ID filter and find\n\tif ( support.getById ) {\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar elem = context.getElementById( id );\n\t\t\t\treturn elem ? [ elem ] : [];\n\t\t\t}\n\t\t};\n\t} else {\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\n\t\t\t\t\telem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\n\t\t// Support: IE 6 - 7 only\n\t\t// getElementById is not reliable as a find shortcut\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\n\t\t\t\tvar node, i, elems,\n\t\t\t\t\telem = context.getElementById( id );\n\n\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t// Verify the id attribute\n\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Fall back on getElementsByName\n\t\t\t\t\telems = context.getElementsByName( id );\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile ( (elem = elems[i++]) ) {\n\t\t\t\t\t\tnode = elem.getAttributeNode(\"id\");\n\t\t\t\t\t\tif ( node && node.value === id ) {\n\t\t\t\t\t\t\treturn [ elem ];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn [];\n\t\t\t}\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\n\t\t\t// DocumentFragment nodes don't have gEBTN\n\t\t\t} else if ( support.qsa ) {\n\t\t\t\treturn context.querySelectorAll( tag );\n\t\t\t}\n\t\t} :\n\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See https://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( el ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// https://bugs.jquery.com/ticket/12359\n\t\t\tdocElem.appendChild( el ).innerHTML = \"<a id='\" + expando + \"'></a>\" +\n\t\t\t\t\"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" +\n\t\t\t\t\"<option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( el.querySelectorAll(\"[msallowcapture^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !el.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\t\t\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\n\t\t\t\trbuggyQSA.push(\"~=\");\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !el.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\n\t\t\t// Support: Safari 8+, iOS 8+\n\t\t\t// https://bugs.webkit.org/show_bug.cgi?id=136851\n\t\t\t// In-page `selector#id sibling-combinator selector` fails\n\t\t\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\n\t\t\t\trbuggyQSA.push(\".#.+[+~]\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( el ) {\n\t\t\tel.innerHTML = \"<a href='' disabled='disabled'></a>\" +\n\t\t\t\t\"<select disabled='disabled'><option/></select>\";\n\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = document.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( el.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( el.querySelectorAll(\":enabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Support: IE9-11+\n\t\t\t// IE's :disabled selector does not pick up the children of disabled fieldsets\n\t\t\tdocElem.appendChild( el ).disabled = true;\n\t\t\tif ( el.querySelectorAll(\":disabled\").length !== 2 ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tel.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( el ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( el, \"*\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( el, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully self-exclusive\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === document ? -1 :\n\t\t\t\tb === document ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn document;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t!compilerCache[ expr + \" \" ] &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch (e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.escape = function( sel ) {\n\treturn (sel + \"\").replace( rcssescape, fcssescape );\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType,\n\t\t\t\t\t\tdiff = false;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) {\n\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\n\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\tnode = parent;\n\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\tdiff = nodeIndex && cache[ 2 ];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t// ...in a gzip-friendly way\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\tcache = uniqueCache[ type ] || [];\n\t\t\t\t\t\t\t\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\n\t\t\t\t\t\t\t\tdiff = nodeIndex;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// xml :nth-child(...)\n\t\t\t\t\t\t\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t\tif ( diff === false ) {\n\t\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t\tif ( ( ofType ?\n\t\t\t\t\t\t\t\t\t\tnode.nodeName.toLowerCase() === name :\n\t\t\t\t\t\t\t\t\t\tnode.nodeType === 1 ) &&\n\t\t\t\t\t\t\t\t\t\t++diff ) {\n\n\t\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t\touterCache = node[ expando ] || (node[ expando ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache = outerCache[ node.uniqueID ] ||\n\t\t\t\t\t\t\t\t\t\t\t\t(outerCache[ node.uniqueID ] = {});\n\n\t\t\t\t\t\t\t\t\t\t\tuniqueCache[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\t// Don't keep the element (issue #299)\n\t\t\t\t\tinput[0] = null;\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\ttext = text.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": createDisabledPseudo( false ),\n\t\t\"disabled\": createDisabledPseudo( true ),\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tskip = combinator.next,\n\t\tkey = skip || dir,\n\t\tcheckNonElements = base && key === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, uniqueCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\n\t\t\t\t\t\t// Support: IE <9 only\n\t\t\t\t\t\t// Defend against cloned attroperties (jQuery gh-1709)\n\t\t\t\t\t\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\n\n\t\t\t\t\t\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\n\t\t\t\t\t\t\telem = elem[ dir ] || elem;\n\t\t\t\t\t\t} else if ( (oldCache = uniqueCache[ key ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\tuniqueCache[ key ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t\t// Avoid hanging onto element (issue #299)\n\t\t\tcheckContext = null;\n\t\t\treturn ret;\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context === document || context || outermost;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\tif ( !context && elem.ownerDocument !== document ) {\n\t\t\t\t\t\tsetDocument( elem );\n\t\t\t\t\t\txml = !documentIsHTML;\n\t\t\t\t\t}\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context || document, xml) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\n\t\t\t// makes the latter nonnegative.\n\t\t\tmatchedCount += i;\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n\t\t\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n\t\t\t// no element matchers and no seed.\n\t\t\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n\t\t\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n\t\t\t// numerically zero.\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is only one selector in the list and no seed\n\t// (the latter of which guarantees us context)\n\tif ( match.length === 1 ) {\n\n\t\t// Reduce context if the leading compound selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome 14-35+\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( el ) {\n\t// Should return 1, but returns 4 (following)\n\treturn el.compareDocumentPosition( document.createElement(\"fieldset\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( el ) {\n\tel.innerHTML = \"<a href='#'></a>\";\n\treturn el.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( el ) {\n\tel.innerHTML = \"<input/>\";\n\tel.firstChild.setAttribute( \"value\", \"\" );\n\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( el ) {\n\treturn el.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\n\n// Deprecated\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\njQuery.escapeSelector = Sizzle.escape;\n\n\n\n\nvar dir = function( elem, dir, until ) {\n\tvar matched = [],\n\t\ttruncate = until !== undefined;\n\n\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\n\t\tif ( elem.nodeType === 1 ) {\n\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tmatched.push( elem );\n\t\t}\n\t}\n\treturn matched;\n};\n\n\nvar siblings = function( n, elem ) {\n\tvar matched = [];\n\n\tfor ( ; n; n = n.nextSibling ) {\n\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\tmatched.push( n );\n\t\t}\n\t}\n\n\treturn matched;\n};\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\n\n\nfunction nodeName( elem, name ) {\n\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\n};\nvar rsingleTag = ( /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i );\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t} );\n\t}\n\n\t// Single element\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t} );\n\t}\n\n\t// Arraylike of elements (jQuery, arguments, Array)\n\tif ( typeof qualifier !== \"string\" ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\n\t\t} );\n\t}\n\n\t// Simple selector that can be filtered directly, removing non-Elements\n\tif ( risSimple.test( qualifier ) ) {\n\t\treturn jQuery.filter( qualifier, elements, not );\n\t}\n\n\t// Complex selector, compare the two sets, removing non-Elements\n\tqualifier = jQuery.filter( qualifier, elements );\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;\n\t} );\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\tif ( elems.length === 1 && elem.nodeType === 1 ) {\n\t\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\n\t}\n\n\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\treturn elem.nodeType === 1;\n\t} ) );\n};\n\njQuery.fn.extend( {\n\tfind: function( selector ) {\n\t\tvar i, ret,\n\t\t\tlen = this.length,\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter( function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} ) );\n\t\t}\n\n\t\tret = this.pushStack( [] );\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], false ) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow( this, selector || [], true ) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n} );\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\t// Shortcut simple #id case for speed\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n\n\tinit = jQuery.fn.init = function( selector, context, root ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Method init() accepts an alternate rootjQuery\n\t\t// so migrate can support jQuery.sub (gh-2101)\n\t\troot = root || rootjQuery;\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[ 0 ] === \"<\" &&\n\t\t\t\tselector[ selector.length - 1 ] === \">\" &&\n\t\t\t\tselector.length >= 3 ) {\n\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && ( match[ 1 ] || !context ) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[ 1 ] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[ 0 ] : context;\n\n\t\t\t\t\t// Option to run scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[ 1 ],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[ 2 ] );\n\n\t\t\t\t\tif ( elem ) {\n\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis[ 0 ] = elem;\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || root ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis[ 0 ] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn root.ready !== undefined ?\n\t\t\t\troot.ready( selector ) :\n\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\n\t// Methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.fn.extend( {\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter( function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[ i ] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\n\n\t\t// Positional selectors never match, since there's no _selection_ context\n\t\tif ( !rneedsContext.test( selectors ) ) {\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\n\n\t\t\t\t\t// Always skip document fragments\n\t\t\t\t\tif ( cur.nodeType < 11 && ( targets ?\n\t\t\t\t\t\ttargets.index( cur ) > -1 :\n\n\t\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\t\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\n\n\t\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within the set\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// Index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.uniqueSort(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter( selector )\n\t\t);\n\t}\n} );\n\nfunction sibling( cur, dir ) {\n\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each( {\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn siblings( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n        if ( nodeName( elem, \"iframe\" ) ) {\n            return elem.contentDocument;\n        }\n\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n        // Treat the template element as a regular one in browsers that\n        // don't support it.\n        if ( nodeName( elem, \"template\" ) ) {\n            elem = elem.content || elem;\n        }\n\n        return jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.uniqueSort( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n} );\nvar rnothtmlwhite = ( /[^\\x20\\t\\r\\n\\f]+/g );\n\n\n\n// Convert String-formatted options into Object-formatted ones\nfunction createOptions( options ) {\n\tvar object = {};\n\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t} );\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\tcreateOptions( options ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Flag to know if list is currently firing\n\t\tfiring,\n\n\t\t// Last fire value for non-forgettable lists\n\t\tmemory,\n\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\n\t\t// Flag to prevent firing\n\t\tlocked,\n\n\t\t// Actual callback list\n\t\tlist = [],\n\n\t\t// Queue of execution data for repeatable lists\n\t\tqueue = [],\n\n\t\t// Index of currently firing callback (modified by add/remove as needed)\n\t\tfiringIndex = -1,\n\n\t\t// Fire callbacks\n\t\tfire = function() {\n\n\t\t\t// Enforce single-firing\n\t\t\tlocked = locked || options.once;\n\n\t\t\t// Execute callbacks for all pending executions,\n\t\t\t// respecting firingIndex overrides and runtime changes\n\t\t\tfired = firing = true;\n\t\t\tfor ( ; queue.length; firingIndex = -1 ) {\n\t\t\t\tmemory = queue.shift();\n\t\t\t\twhile ( ++firingIndex < list.length ) {\n\n\t\t\t\t\t// Run callback and check for early termination\n\t\t\t\t\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\n\t\t\t\t\t\toptions.stopOnFalse ) {\n\n\t\t\t\t\t\t// Jump to end and forget the data so .add doesn't re-fire\n\t\t\t\t\t\tfiringIndex = list.length;\n\t\t\t\t\t\tmemory = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Forget the data if we're done with it\n\t\t\tif ( !options.memory ) {\n\t\t\t\tmemory = false;\n\t\t\t}\n\n\t\t\tfiring = false;\n\n\t\t\t// Clean up if we're done firing for good\n\t\t\tif ( locked ) {\n\n\t\t\t\t// Keep an empty list if we have data for future add calls\n\t\t\t\tif ( memory ) {\n\t\t\t\t\tlist = [];\n\n\t\t\t\t// Otherwise, this object is spent\n\t\t\t\t} else {\n\t\t\t\t\tlist = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t// Actual Callbacks object\n\t\tself = {\n\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\n\t\t\t\t\t// If we have memory from a past run, we should fire after adding\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfiringIndex = list.length - 1;\n\t\t\t\t\t\tqueue.push( memory );\n\t\t\t\t\t}\n\n\t\t\t\t\t( function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tif ( jQuery.isFunction( arg ) ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && jQuery.type( arg ) !== \"string\" ) {\n\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} );\n\t\t\t\t\t} )( arguments );\n\n\t\t\t\t\tif ( memory && !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\tvar index;\n\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\tlist.splice( index, 1 );\n\n\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ?\n\t\t\t\t\tjQuery.inArray( fn, list ) > -1 :\n\t\t\t\t\tlist.length > 0;\n\t\t\t},\n\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Disable .fire and .add\n\t\t\t// Abort any current/pending executions\n\t\t\t// Clear all callbacks and values\n\t\t\tdisable: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tlist = memory = \"\";\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\n\t\t\t// Disable .fire\n\t\t\t// Also disable .add unless we have memory (since it would have no effect)\n\t\t\t// Abort any pending executions\n\t\t\tlock: function() {\n\t\t\t\tlocked = queue = [];\n\t\t\t\tif ( !memory && !firing ) {\n\t\t\t\t\tlist = memory = \"\";\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\tlocked: function() {\n\t\t\t\treturn !!locked;\n\t\t\t},\n\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( !locked ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tqueue.push( args );\n\t\t\t\t\tif ( !firing ) {\n\t\t\t\t\t\tfire();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\nfunction Identity( v ) {\n\treturn v;\n}\nfunction Thrower( ex ) {\n\tthrow ex;\n}\n\nfunction adoptValue( value, resolve, reject, noValue ) {\n\tvar method;\n\n\ttry {\n\n\t\t// Check for promise aspect first to privilege synchronous behavior\n\t\tif ( value && jQuery.isFunction( ( method = value.promise ) ) ) {\n\t\t\tmethod.call( value ).done( resolve ).fail( reject );\n\n\t\t// Other thenables\n\t\t} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {\n\t\t\tmethod.call( value, resolve, reject );\n\n\t\t// Other non-thenables\n\t\t} else {\n\n\t\t\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n\t\t\t// * false: [ value ].slice( 0 ) => resolve( value )\n\t\t\t// * true: [ value ].slice( 1 ) => resolve()\n\t\t\tresolve.apply( undefined, [ value ].slice( noValue ) );\n\t\t}\n\n\t// For Promises/A+, convert exceptions into rejections\n\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n\t// Deferred#then to conditionally suppress rejection.\n\t} catch ( value ) {\n\n\t\t// Support: Android 4.0 only\n\t\t// Strict mode functions invoked without .call/.apply get global-object context\n\t\treject.apply( undefined, [ value ] );\n\t}\n}\n\njQuery.extend( {\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\n\t\t\t\t// action, add listener, callbacks,\n\t\t\t\t// ... .then handlers, argument index, [final state]\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"memory\" ), 2 ],\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\n\t\t\t\t\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\t\"catch\": function( fn ) {\n\t\t\t\t\treturn promise.then( null, fn );\n\t\t\t\t},\n\n\t\t\t\t// Keep pipe for back-compat\n\t\t\t\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\n\t\t\t\t\t\t\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\n\n\t\t\t\t\t\t\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\n\t\t\t\t\t\t\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\n\t\t\t\t\t\t\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\n\t\t\t\t\t\t\tdeferred[ tuple[ 1 ] ]( function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify )\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ](\n\t\t\t\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\t\t\t\tfn ? [ returned ] : arguments\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} );\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\t\t\t\tthen: function( onFulfilled, onRejected, onProgress ) {\n\t\t\t\t\tvar maxDepth = 0;\n\t\t\t\t\tfunction resolve( depth, deferred, handler, special ) {\n\t\t\t\t\t\treturn function() {\n\t\t\t\t\t\t\tvar that = this,\n\t\t\t\t\t\t\t\targs = arguments,\n\t\t\t\t\t\t\t\tmightThrow = function() {\n\t\t\t\t\t\t\t\t\tvar returned, then;\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.3\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-59\n\t\t\t\t\t\t\t\t\t// Ignore double-resolution attempts\n\t\t\t\t\t\t\t\t\tif ( depth < maxDepth ) {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturned = handler.apply( that, args );\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.1\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-48\n\t\t\t\t\t\t\t\t\tif ( returned === deferred.promise() ) {\n\t\t\t\t\t\t\t\t\t\tthrow new TypeError( \"Thenable self-resolution\" );\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Support: Promises/A+ sections 2.3.3.1, 3.5\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-54\n\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-75\n\t\t\t\t\t\t\t\t\t// Retrieve `then` only once\n\t\t\t\t\t\t\t\t\tthen = returned &&\n\n\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.4\n\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-64\n\t\t\t\t\t\t\t\t\t\t// Only check objects and functions for thenability\n\t\t\t\t\t\t\t\t\t\t( typeof returned === \"object\" ||\n\t\t\t\t\t\t\t\t\t\t\ttypeof returned === \"function\" ) &&\n\t\t\t\t\t\t\t\t\t\treturned.then;\n\n\t\t\t\t\t\t\t\t\t// Handle a returned thenable\n\t\t\t\t\t\t\t\t\tif ( jQuery.isFunction( then ) ) {\n\n\t\t\t\t\t\t\t\t\t\t// Special processors (notify) just wait for resolution\n\t\t\t\t\t\t\t\t\t\tif ( special ) {\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special )\n\t\t\t\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\t\t\t// Normal processors (resolve) also hook into progress\n\t\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t\t// ...and disregard older resolution values\n\t\t\t\t\t\t\t\t\t\t\tmaxDepth++;\n\n\t\t\t\t\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\t\t\t\t\treturned,\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Thrower, special ),\n\t\t\t\t\t\t\t\t\t\t\t\tresolve( maxDepth, deferred, Identity,\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeferred.notifyWith )\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t// Handle all other returned values\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\tif ( handler !== Identity ) {\n\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\targs = [ returned ];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t// Process the value(s)\n\t\t\t\t\t\t\t\t\t\t// Default process is resolve\n\t\t\t\t\t\t\t\t\t\t( special || deferred.resolveWith )( that, args );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\t\t// Only normal processors (resolve) catch and reject exceptions\n\t\t\t\t\t\t\t\tprocess = special ?\n\t\t\t\t\t\t\t\t\tmightThrow :\n\t\t\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\t\tmightThrow();\n\t\t\t\t\t\t\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t\t\t\t\t\t\tif ( jQuery.Deferred.exceptionHook ) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery.Deferred.exceptionHook( e,\n\t\t\t\t\t\t\t\t\t\t\t\t\tprocess.stackTrace );\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.4.1\n\t\t\t\t\t\t\t\t\t\t\t// https://promisesaplus.com/#point-61\n\t\t\t\t\t\t\t\t\t\t\t// Ignore post-resolution exceptions\n\t\t\t\t\t\t\t\t\t\t\tif ( depth + 1 >= maxDepth ) {\n\n\t\t\t\t\t\t\t\t\t\t\t\t// Only substitute handlers pass on context\n\t\t\t\t\t\t\t\t\t\t\t\t// and multiple values (non-spec behavior)\n\t\t\t\t\t\t\t\t\t\t\t\tif ( handler !== Thrower ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthat = undefined;\n\t\t\t\t\t\t\t\t\t\t\t\t\targs = [ e ];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tdeferred.rejectWith( that, args );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Support: Promises/A+ section 2.3.3.3.1\n\t\t\t\t\t\t\t// https://promisesaplus.com/#point-57\n\t\t\t\t\t\t\t// Re-resolve promises immediately to dodge false rejection from\n\t\t\t\t\t\t\t// subsequent errors\n\t\t\t\t\t\t\tif ( depth ) {\n\t\t\t\t\t\t\t\tprocess();\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// Call an optional hook to record the stack, in case of exception\n\t\t\t\t\t\t\t\t// since it's otherwise lost when execution goes async\n\t\t\t\t\t\t\t\tif ( jQuery.Deferred.getStackHook ) {\n\t\t\t\t\t\t\t\t\tprocess.stackTrace = jQuery.Deferred.getStackHook();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\twindow.setTimeout( process );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn jQuery.Deferred( function( newDefer ) {\n\n\t\t\t\t\t\t// progress_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 0 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onProgress ) ?\n\t\t\t\t\t\t\t\t\tonProgress :\n\t\t\t\t\t\t\t\t\tIdentity,\n\t\t\t\t\t\t\t\tnewDefer.notifyWith\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// fulfilled_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 1 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onFulfilled ) ?\n\t\t\t\t\t\t\t\t\tonFulfilled :\n\t\t\t\t\t\t\t\t\tIdentity\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// rejected_handlers.add( ... )\n\t\t\t\t\t\ttuples[ 2 ][ 3 ].add(\n\t\t\t\t\t\t\tresolve(\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\tnewDefer,\n\t\t\t\t\t\t\t\tjQuery.isFunction( onRejected ) ?\n\t\t\t\t\t\t\t\t\tonRejected :\n\t\t\t\t\t\t\t\t\tThrower\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t} ).promise();\n\t\t\t\t},\n\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 5 ];\n\n\t\t\t// promise.progress = list.add\n\t\t\t// promise.done = list.add\n\t\t\t// promise.fail = list.add\n\t\t\tpromise[ tuple[ 1 ] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(\n\t\t\t\t\tfunction() {\n\n\t\t\t\t\t\t// state = \"resolved\" (i.e., fulfilled)\n\t\t\t\t\t\t// state = \"rejected\"\n\t\t\t\t\t\tstate = stateString;\n\t\t\t\t\t},\n\n\t\t\t\t\t// rejected_callbacks.disable\n\t\t\t\t\t// fulfilled_callbacks.disable\n\t\t\t\t\ttuples[ 3 - i ][ 2 ].disable,\n\n\t\t\t\t\t// progress_callbacks.lock\n\t\t\t\t\ttuples[ 0 ][ 2 ].lock\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// progress_handlers.fire\n\t\t\t// fulfilled_handlers.fire\n\t\t\t// rejected_handlers.fire\n\t\t\tlist.add( tuple[ 3 ].fire );\n\n\t\t\t// deferred.notify = function() { deferred.notifyWith(...) }\n\t\t\t// deferred.resolve = function() { deferred.resolveWith(...) }\n\t\t\t// deferred.reject = function() { deferred.rejectWith(...) }\n\t\t\tdeferred[ tuple[ 0 ] ] = function() {\n\t\t\t\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\t// deferred.notifyWith = list.fireWith\n\t\t\t// deferred.resolveWith = list.fireWith\n\t\t\t// deferred.rejectWith = list.fireWith\n\t\t\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\n\t\t} );\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( singleValue ) {\n\t\tvar\n\n\t\t\t// count of uncompleted subordinates\n\t\t\tremaining = arguments.length,\n\n\t\t\t// count of unprocessed arguments\n\t\t\ti = remaining,\n\n\t\t\t// subordinate fulfillment data\n\t\t\tresolveContexts = Array( i ),\n\t\t\tresolveValues = slice.call( arguments ),\n\n\t\t\t// the master Deferred\n\t\t\tmaster = jQuery.Deferred(),\n\n\t\t\t// subordinate callback factory\n\t\t\tupdateFunc = function( i ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tresolveContexts[ i ] = this;\n\t\t\t\t\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( !( --remaining ) ) {\n\t\t\t\t\t\tmaster.resolveWith( resolveContexts, resolveValues );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\n\t\t// Single- and empty arguments are adopted like Promise.resolve\n\t\tif ( remaining <= 1 ) {\n\t\t\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\n\t\t\t\t!remaining );\n\n\t\t\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\n\t\t\tif ( master.state() === \"pending\" ||\n\t\t\t\tjQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\n\n\t\t\t\treturn master.then();\n\t\t\t}\n\t\t}\n\n\t\t// Multiple arguments are aggregated like Promise.all array elements\n\t\twhile ( i-- ) {\n\t\t\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\n\t\t}\n\n\t\treturn master.promise();\n\t}\n} );\n\n\n// These usually indicate a programmer mistake during development,\n// warn about them ASAP rather than swallowing them by default.\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\njQuery.Deferred.exceptionHook = function( error, stack ) {\n\n\t// Support: IE 8 - 9 only\n\t// Console exists when dev tools are open, which can happen at any time\n\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\n\t\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\n\t}\n};\n\n\n\n\njQuery.readyException = function( error ) {\n\twindow.setTimeout( function() {\n\t\tthrow error;\n\t} );\n};\n\n\n\n\n// The deferred used on DOM ready\nvar readyList = jQuery.Deferred();\n\njQuery.fn.ready = function( fn ) {\n\n\treadyList\n\t\t.then( fn )\n\n\t\t// Wrap jQuery.readyException in a function so that the lookup\n\t\t// happens at the time of error handling instead of callback\n\t\t// registration.\n\t\t.catch( function( error ) {\n\t\t\tjQuery.readyException( error );\n\t\t} );\n\n\treturn this;\n};\n\njQuery.extend( {\n\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\t}\n} );\n\njQuery.ready.then = readyList.then;\n\n// The ready event handler and self cleanup method\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\n\twindow.removeEventListener( \"load\", completed );\n\tjQuery.ready();\n}\n\n// Catch cases where $(document).ready() is called\n// after the browser event has already occurred.\n// Support: IE <=9 - 10 only\n// Older IE sometimes signals \"interactive\" too soon\nif ( document.readyState === \"complete\" ||\n\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\n\n\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\twindow.setTimeout( jQuery.ready );\n\n} else {\n\n\t// Use the handy event callback\n\tdocument.addEventListener( \"DOMContentLoaded\", completed );\n\n\t// A fallback to window.onload, that will always work\n\twindow.addEventListener( \"load\", completed );\n}\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn(\n\t\t\t\t\telems[ i ], key, raw ?\n\t\t\t\t\tvalue :\n\t\t\t\t\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( chainable ) {\n\t\treturn elems;\n\t}\n\n\t// Gets\n\tif ( bulk ) {\n\t\treturn fn.call( elems );\n\t}\n\n\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\n};\nvar acceptData = function( owner ) {\n\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\n\n\nfunction Data() {\n\tthis.expando = jQuery.expando + Data.uid++;\n}\n\nData.uid = 1;\n\nData.prototype = {\n\n\tcache: function( owner ) {\n\n\t\t// Check if the owner object already has a cache\n\t\tvar value = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !value ) {\n\t\t\tvalue = {};\n\n\t\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t\t// but we should not, see #8335.\n\t\t\t// Always return an empty object.\n\t\t\tif ( acceptData( owner ) ) {\n\n\t\t\t\t// If it is a node unlikely to be stringify-ed or looped over\n\t\t\t\t// use plain assignment\n\t\t\t\tif ( owner.nodeType ) {\n\t\t\t\t\towner[ this.expando ] = value;\n\n\t\t\t\t// Otherwise secure it in a non-enumerable property\n\t\t\t\t// configurable must be true to allow the property to be\n\t\t\t\t// deleted when data is removed\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty( owner, this.expando, {\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tconfigurable: true\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\tcache = this.cache( owner );\n\n\t\t// Handle: [ owner, key, value ] args\n\t\t// Always use camelCase key (gh-2257)\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ jQuery.camelCase( data ) ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\n\t\t\t// Copy the properties one-by-one to the cache object\n\t\t\tfor ( prop in data ) {\n\t\t\t\tcache[ jQuery.camelCase( prop ) ] = data[ prop ];\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\treturn key === undefined ?\n\t\t\tthis.cache( owner ) :\n\n\t\t\t// Always use camelCase key (gh-2257)\n\t\t\towner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];\n\t},\n\taccess: function( owner, key, value ) {\n\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\n\n\t\t\treturn this.get( owner, key );\n\t\t}\n\n\t\t// When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i,\n\t\t\tcache = owner[ this.expando ];\n\n\t\tif ( cache === undefined ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( key !== undefined ) {\n\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( Array.isArray( key ) ) {\n\n\t\t\t\t// If key is an array of keys...\n\t\t\t\t// We always set camelCase keys, so remove that.\n\t\t\t\tkey = key.map( jQuery.camelCase );\n\t\t\t} else {\n\t\t\t\tkey = jQuery.camelCase( key );\n\n\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\tkey = key in cache ?\n\t\t\t\t\t[ key ] :\n\t\t\t\t\t( key.match( rnothtmlwhite ) || [] );\n\t\t\t}\n\n\t\t\ti = key.length;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ key[ i ] ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if there's no more data\n\t\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\n\n\t\t\t// Support: Chrome <=35 - 45\n\t\t\t// Webkit & Blink performance suffers when deleting properties\n\t\t\t// from DOM nodes, so set to undefined instead\n\t\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n\t\t\tif ( owner.nodeType ) {\n\t\t\t\towner[ this.expando ] = undefined;\n\t\t\t} else {\n\t\t\t\tdelete owner[ this.expando ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\tvar cache = owner[ this.expando ];\n\t\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\n\t}\n};\nvar dataPriv = new Data();\n\nvar dataUser = new Data();\n\n\n\n//\tImplementation Summary\n//\n//\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n//\t2. Improve the module's maintainability by reducing the storage\n//\t\tpaths to a single mechanism.\n//\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n//\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /[A-Z]/g;\n\nfunction getData( data ) {\n\tif ( data === \"true\" ) {\n\t\treturn true;\n\t}\n\n\tif ( data === \"false\" ) {\n\t\treturn false;\n\t}\n\n\tif ( data === \"null\" ) {\n\t\treturn null;\n\t}\n\n\t// Only convert to a number if it doesn't change the string\n\tif ( data === +data + \"\" ) {\n\t\treturn +data;\n\t}\n\n\tif ( rbrace.test( data ) ) {\n\t\treturn JSON.parse( data );\n\t}\n\n\treturn data;\n}\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = getData( data );\n\t\t\t} catch ( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdataUser.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend( {\n\thasData: function( elem ) {\n\t\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn dataUser.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdataUser.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to dataPriv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn dataPriv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdataPriv.remove( elem, name );\n\t}\n} );\n\njQuery.fn.extend( {\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = dataUser.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE 11 only\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice( 5 ) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdataPriv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each( function() {\n\t\t\t\tdataUser.set( this, key );\n\t\t\t} );\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data;\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// The key will always be camelCased in Data\n\t\t\t\tdata = dataUser.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each( function() {\n\n\t\t\t\t// We always store the camelCased key\n\t\t\t\tdataUser.set( this, key, value );\n\t\t\t} );\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each( function() {\n\t\t\tdataUser.remove( this, key );\n\t\t} );\n\t}\n} );\n\n\njQuery.extend( {\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = dataPriv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || Array.isArray( data ) ) {\n\t\t\t\t\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// Clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// Not public - generate a queueHooks object, or return the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\n\t\t\t\tdataPriv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t} )\n\t\t} );\n\t}\n} );\n\njQuery.fn.extend( {\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[ 0 ], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each( function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// Ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t} );\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t} );\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n} );\nvar pnum = ( /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/ ).source;\n\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\n\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHiddenWithinTree = function( elem, el ) {\n\n\t\t// isHiddenWithinTree might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\n\t\t// Inline style trumps all\n\t\treturn elem.style.display === \"none\" ||\n\t\t\telem.style.display === \"\" &&\n\n\t\t\t// Otherwise, check computed style\n\t\t\t// Support: Firefox <=43 - 45\n\t\t\t// Disconnected elements can have computed display: none, so first confirm that elem is\n\t\t\t// in the document.\n\t\t\tjQuery.contains( elem.ownerDocument, elem ) &&\n\n\t\t\tjQuery.css( elem, \"display\" ) === \"none\";\n\t};\n\nvar swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\n\n\nfunction adjustCSS( elem, prop, valueParts, tween ) {\n\tvar adjusted,\n\t\tscale = 1,\n\t\tmaxIterations = 20,\n\t\tcurrentValue = tween ?\n\t\t\tfunction() {\n\t\t\t\treturn tween.cur();\n\t\t\t} :\n\t\t\tfunction() {\n\t\t\t\treturn jQuery.css( elem, prop, \"\" );\n\t\t\t},\n\t\tinitial = currentValue(),\n\t\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t// Starting value computation is required for potential unit mismatches\n\t\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\n\t\t\trcssNum.exec( jQuery.css( elem, prop ) );\n\n\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\n\n\t\t// Trust units reported by jQuery.css\n\t\tunit = unit || initialInUnit[ 3 ];\n\n\t\t// Make sure we update the tween properties later on\n\t\tvalueParts = valueParts || [];\n\n\t\t// Iteratively approximate from a nonzero starting point\n\t\tinitialInUnit = +initial || 1;\n\n\t\tdo {\n\n\t\t\t// If previous iteration zeroed out, double until we get *something*.\n\t\t\t// Use string for doubling so we don't accidentally see scale as unchanged below\n\t\t\tscale = scale || \".5\";\n\n\t\t\t// Adjust and apply\n\t\t\tinitialInUnit = initialInUnit / scale;\n\t\t\tjQuery.style( elem, prop, initialInUnit + unit );\n\n\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\n\t\t} while (\n\t\t\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\n\t\t);\n\t}\n\n\tif ( valueParts ) {\n\t\tinitialInUnit = +initialInUnit || +initial || 0;\n\n\t\t// Apply relative offset (+=/-=) if specified\n\t\tadjusted = valueParts[ 1 ] ?\n\t\t\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\n\t\t\t+valueParts[ 2 ];\n\t\tif ( tween ) {\n\t\t\ttween.unit = unit;\n\t\t\ttween.start = initialInUnit;\n\t\t\ttween.end = adjusted;\n\t\t}\n\t}\n\treturn adjusted;\n}\n\n\nvar defaultDisplayMap = {};\n\nfunction getDefaultDisplay( elem ) {\n\tvar temp,\n\t\tdoc = elem.ownerDocument,\n\t\tnodeName = elem.nodeName,\n\t\tdisplay = defaultDisplayMap[ nodeName ];\n\n\tif ( display ) {\n\t\treturn display;\n\t}\n\n\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\n\tdisplay = jQuery.css( temp, \"display\" );\n\n\ttemp.parentNode.removeChild( temp );\n\n\tif ( display === \"none\" ) {\n\t\tdisplay = \"block\";\n\t}\n\tdefaultDisplayMap[ nodeName ] = display;\n\n\treturn display;\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\t// Determine new display value for elements that need to change\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\n\t\t\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n\t\t\t// check is required in this first loop unless we have a nonempty display value (either\n\t\t\t// inline or about-to-be-restored)\n\t\t\tif ( display === \"none\" ) {\n\t\t\t\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\n\t\t\t\tif ( !values[ index ] ) {\n\t\t\t\t\telem.style.display = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\n\t\t\t\tvalues[ index ] = getDefaultDisplay( elem );\n\t\t\t}\n\t\t} else {\n\t\t\tif ( display !== \"none\" ) {\n\t\t\t\tvalues[ index ] = \"none\";\n\n\t\t\t\t// Remember what we're overwriting\n\t\t\t\tdataPriv.set( elem, \"display\", display );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of the elements in a second loop to avoid constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\tif ( values[ index ] != null ) {\n\t\t\telements[ index ].style.display = values[ index ];\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.fn.extend( {\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tif ( isHiddenWithinTree( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t} );\n\t}\n} );\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\n\nvar rtagName = ( /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i );\n\nvar rscriptType = ( /^$|\\/(?:java|ecma)script/i );\n\n\n\n// We have to close these tags to support XHTML (#13200)\nvar wrapMap = {\n\n\t// Support: IE <=9 only\n\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t// XHTML parsers do not magically insert elements in the\n\t// same way that tag soup parsers do. So we cannot shorten\n\t// this by omitting <tbody> or other required elements.\n\tthead: [ 1, \"<table>\", \"</table>\" ],\n\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t_default: [ 0, \"\", \"\" ]\n};\n\n// Support: IE <=9 only\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n\nfunction getAll( context, tag ) {\n\n\t// Support: IE <=9 - 11 only\n\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\n\tvar ret;\n\n\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\n\t\tret = context.getElementsByTagName( tag || \"*\" );\n\n\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\n\t\tret = context.querySelectorAll( tag || \"*\" );\n\n\t} else {\n\t\tret = [];\n\t}\n\n\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\n\t\treturn jQuery.merge( [ context ], ret );\n\t}\n\n\treturn ret;\n}\n\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdataPriv.set(\n\t\t\telems[ i ],\n\t\t\t\"globalEval\",\n\t\t\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\n\nvar rhtml = /<|&#?\\w+;/;\n\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\n\tvar elem, tmp, tag, wrap, contains, j,\n\t\tfragment = context.createDocumentFragment(),\n\t\tnodes = [],\n\t\ti = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\telem = elems[ i ];\n\n\t\tif ( elem || elem === 0 ) {\n\n\t\t\t// Add nodes directly\n\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t// Convert non-html into a text node\n\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t// Convert html into DOM nodes\n\t\t\t} else {\n\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\n\n\t\t\t\t// Deserialize a standard representation\n\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\n\n\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\tj = wrap[ 0 ];\n\t\t\t\twhile ( j-- ) {\n\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t}\n\n\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t// Remember the top-level container\n\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t// Ensure the created nodes are orphaned (#12392)\n\t\t\t\ttmp.textContent = \"\";\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove wrapper from fragment\n\tfragment.textContent = \"\";\n\n\ti = 0;\n\twhile ( ( elem = nodes[ i++ ] ) ) {\n\n\t\t// Skip elements already in the context collection (trac-4087)\n\t\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\n\t\t\tif ( ignored ) {\n\t\t\t\tignored.push( elem );\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Append to fragment\n\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t// Preserve script evaluation history\n\t\tif ( contains ) {\n\t\t\tsetGlobalEval( tmp );\n\t\t}\n\n\t\t// Capture executables\n\t\tif ( scripts ) {\n\t\t\tj = 0;\n\t\t\twhile ( ( elem = tmp[ j++ ] ) ) {\n\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\tscripts.push( elem );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn fragment;\n}\n\n\n( function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// Support: Android 4.0 - 4.3 only\n\t// Check state lost if the name is set (#11217)\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` must use .setAttribute for WWA (#14901)\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Android <=4.1 only\n\t// Older WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Support: IE <=11 only\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n} )();\nvar documentElement = document.documentElement;\n\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\n// Support: IE <=9 only\n// See #13393 for more info\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\nfunction on( elem, types, selector, data, fn, one ) {\n\tvar origFn, type;\n\n\t// Types can be a map of types/handlers\n\tif ( typeof types === \"object\" ) {\n\n\t\t// ( types-Object, selector, data )\n\t\tif ( typeof selector !== \"string\" ) {\n\n\t\t\t// ( types-Object, data )\n\t\t\tdata = data || selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tfor ( type in types ) {\n\t\t\ton( elem, type, selector, data, types[ type ], one );\n\t\t}\n\t\treturn elem;\n\t}\n\n\tif ( data == null && fn == null ) {\n\n\t\t// ( types, fn )\n\t\tfn = selector;\n\t\tdata = selector = undefined;\n\t} else if ( fn == null ) {\n\t\tif ( typeof selector === \"string\" ) {\n\n\t\t\t// ( types, selector, fn )\n\t\t\tfn = data;\n\t\t\tdata = undefined;\n\t\t} else {\n\n\t\t\t// ( types, data, fn )\n\t\t\tfn = data;\n\t\t\tdata = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t}\n\tif ( fn === false ) {\n\t\tfn = returnFalse;\n\t} else if ( !fn ) {\n\t\treturn elem;\n\t}\n\n\tif ( one === 1 ) {\n\t\torigFn = fn;\n\t\tfn = function( event ) {\n\n\t\t\t// Can use an empty set, since event contains the info\n\t\t\tjQuery().off( event );\n\t\t\treturn origFn.apply( this, arguments );\n\t\t};\n\n\t\t// Use same guid so caller can remove using origFn\n\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t}\n\treturn elem.each( function() {\n\t\tjQuery.event.add( this, types, fn, data, selector );\n\t} );\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Ensure that invalid selectors throw exceptions at attach time\n\t\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\t\tif ( selector ) {\n\t\t\tjQuery.find.matchesSelector( documentElement, selector );\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !( events = elemData.events ) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !( eventHandle = elemData.handle ) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend( {\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join( \".\" )\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !( handlers = events[ type ] ) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup ||\n\t\t\t\t\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\n\n\t\tif ( !elemData || !( events = elemData.events ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[ t ] ) || [];\n\t\t\ttype = origType = tmp[ 1 ];\n\t\t\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[ 2 ] &&\n\t\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector ||\n\t\t\t\t\t\tselector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown ||\n\t\t\t\t\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove data and the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdataPriv.remove( elem, \"handle events\" );\n\t\t}\n\t},\n\n\tdispatch: function( nativeEvent ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tvar event = jQuery.event.fix( nativeEvent );\n\n\t\tvar i, j, ret, matched, handleObj, handlerQueue,\n\t\t\targs = new Array( arguments.length ),\n\t\t\thandlers = ( dataPriv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[ 0 ] = event;\n\n\t\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\t\targs[ i ] = arguments[ i ];\n\t\t}\n\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\n\t\t\t\t!event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\n\t\t\t\t// a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\n\t\t\t\t\t\thandleObj.handler ).apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( ( event.result = ret ) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\tif ( delegateCount &&\n\n\t\t\t// Support: IE <=9\n\t\t\t// Black-hole SVG <use> instance trees (trac-13180)\n\t\t\tcur.nodeType &&\n\n\t\t\t// Support: Firefox <=42\n\t\t\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n\t\t\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n\t\t\t// Support: IE 11 only\n\t\t\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n\t\t\t!( event.type === \"click\" && event.button >= 1 ) ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't check non-elements (#13208)\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\n\t\t\t\t\tmatchedHandlers = [];\n\t\t\t\t\tmatchedSelectors = {};\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatchedSelectors[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) > -1 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matchedSelectors[ sel ] ) {\n\t\t\t\t\t\t\tmatchedHandlers.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matchedHandlers.length ) {\n\t\t\t\t\t\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tcur = this;\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\taddProp: function( name, hook ) {\n\t\tObject.defineProperty( jQuery.Event.prototype, name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\n\t\t\tget: jQuery.isFunction( hook ) ?\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn hook( this.originalEvent );\n\t\t\t\t\t}\n\t\t\t\t} :\n\t\t\t\tfunction() {\n\t\t\t\t\tif ( this.originalEvent ) {\n\t\t\t\t\t\t\treturn this.originalEvent[ name ];\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\tset: function( value ) {\n\t\t\t\tObject.defineProperty( this, name, {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tvalue: value\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t},\n\n\tfix: function( originalEvent ) {\n\t\treturn originalEvent[ jQuery.expando ] ?\n\t\t\toriginalEvent :\n\t\t\tnew jQuery.Event( originalEvent );\n\t},\n\n\tspecial: {\n\t\tload: {\n\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\n\t// This \"if\" is needed for plain objects\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\n\t// Allow instantiation without the 'new' keyword\n\tif ( !( this instanceof jQuery.Event ) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\n\t\t\t\t// Support: Android <=2.3 only\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t\t// Create target properties\n\t\t// Support: Safari <=6 - 7 only\n\t\t// Target should not be a text node (#504, #13143)\n\t\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\n\t\t\tsrc.target.parentNode :\n\t\t\tsrc.target;\n\n\t\tthis.currentTarget = src.currentTarget;\n\t\tthis.relatedTarget = src.relatedTarget;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tconstructor: jQuery.Event,\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\tisSimulated: false,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && !this.isSimulated ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Includes all common event props including KeyEvent and MouseEvent specific props\njQuery.each( {\n\taltKey: true,\n\tbubbles: true,\n\tcancelable: true,\n\tchangedTouches: true,\n\tctrlKey: true,\n\tdetail: true,\n\teventPhase: true,\n\tmetaKey: true,\n\tpageX: true,\n\tpageY: true,\n\tshiftKey: true,\n\tview: true,\n\t\"char\": true,\n\tcharCode: true,\n\tkey: true,\n\tkeyCode: true,\n\tbutton: true,\n\tbuttons: true,\n\tclientX: true,\n\tclientY: true,\n\toffsetX: true,\n\toffsetY: true,\n\tpointerId: true,\n\tpointerType: true,\n\tscreenX: true,\n\tscreenY: true,\n\ttargetTouches: true,\n\ttoElement: true,\n\ttouches: true,\n\n\twhich: function( event ) {\n\t\tvar button = event.button;\n\n\t\t// Add which for key events\n\t\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\n\t\t\treturn event.charCode != null ? event.charCode : event.keyCode;\n\t\t}\n\n\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\n\t\t\tif ( button & 1 ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\tif ( button & 2 ) {\n\t\t\t\treturn 3;\n\t\t\t}\n\n\t\t\tif ( button & 4 ) {\n\t\t\t\treturn 2;\n\t\t\t}\n\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn event.which;\n\t}\n}, jQuery.event.addProp );\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// so that event delegation works in jQuery.\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\n//\n// Support: Safari 7 only\n// Safari sends mouseenter too often; see:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n// for the description of the bug (it existed in older Chrome versions as well).\njQuery.each( {\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mouseenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n} );\n\njQuery.fn.extend( {\n\n\ton: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn );\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn on( this, types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ?\n\t\t\t\t\thandleObj.origType + \".\" + handleObj.namespace :\n\t\t\t\t\thandleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t} );\n\t}\n} );\n\n\nvar\n\n\t/* eslint-disable max-len */\n\n\t// See https://github.com/eslint/eslint/issues/3229\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n\t/* eslint-enable */\n\n\t// Support: IE <=10 - 11, Edge 12 - 13\n\t// In IE/Edge using regex groups here causes severe slowdowns.\n\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\n\trnoInnerhtml = /<script|<style|<link/i,\n\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n\n// Prefer a tbody over its parent table for containing new rows\nfunction manipulationTarget( elem, content ) {\n\tif ( nodeName( elem, \"table\" ) &&\n\t\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\n\n\t\treturn jQuery( \">tbody\", elem )[ 0 ] || elem;\n\t}\n\n\treturn elem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute( \"type\" );\n\t}\n\n\treturn elem;\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( dataPriv.hasData( src ) ) {\n\t\tpdataOld = dataPriv.access( src );\n\t\tpdataCur = dataPriv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( dataUser.hasData( src ) ) {\n\t\tudataOld = dataUser.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdataUser.set( dest, udataCur );\n\t}\n}\n\n// Fix IE bugs, see support tests\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\nfunction domManip( collection, args, callback, ignored ) {\n\n\t// Flatten any nested arrays\n\targs = concat.apply( [], args );\n\n\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\ti = 0,\n\t\tl = collection.length,\n\t\tiNoClone = l - 1,\n\t\tvalue = args[ 0 ],\n\t\tisFunction = jQuery.isFunction( value );\n\n\t// We can't cloneNode fragments that contain checked, in WebKit\n\tif ( isFunction ||\n\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\treturn collection.each( function( index ) {\n\t\t\tvar self = collection.eq( index );\n\t\t\tif ( isFunction ) {\n\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t}\n\t\t\tdomManip( self, args, callback, ignored );\n\t\t} );\n\t}\n\n\tif ( l ) {\n\t\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\n\t\tfirst = fragment.firstChild;\n\n\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\tfragment = first;\n\t\t}\n\n\t\t// Require either new content or an interest in ignored elements to invoke the callback\n\t\tif ( first || ignored ) {\n\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\thasScripts = scripts.length;\n\n\t\t\t// Use the original fragment for the last item\n\t\t\t// instead of the first because it can end up\n\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tnode = fragment;\n\n\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\tif ( hasScripts ) {\n\n\t\t\t\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t\t\t\t// push.apply(_, arraylike) throws on ancient WebKit\n\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcallback.call( collection[ i ], node, i );\n\t\t\t}\n\n\t\t\tif ( hasScripts ) {\n\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t// Reenable scripts\n\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t!dataPriv.access( node, \"globalEval\" ) &&\n\t\t\t\t\t\tjQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\tif ( node.src ) {\n\n\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), doc );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn collection;\n}\n\nfunction remove( elem, selector, keepData ) {\n\tvar node,\n\t\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\n\t\ti = 0;\n\n\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\n\t\tif ( !keepData && node.nodeType === 1 ) {\n\t\t\tjQuery.cleanData( getAll( node ) );\n\t\t}\n\n\t\tif ( node.parentNode ) {\n\t\t\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\n\t\t\t\tsetGlobalEval( getAll( node, \"script\" ) );\n\t\t\t}\n\t\t\tnode.parentNode.removeChild( node );\n\t\t}\n\t}\n\n\treturn elem;\n}\n\njQuery.extend( {\n\thtmlPrefilter: function( html ) {\n\t\treturn html.replace( rxhtmlTag, \"<$1></$2>\" );\n\t},\n\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Fix IE cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\n\t\t\tif ( acceptData( elem ) ) {\n\t\t\t\tif ( ( data = elem[ dataPriv.expando ] ) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataPriv.expando ] = undefined;\n\t\t\t\t}\n\t\t\t\tif ( elem[ dataUser.expando ] ) {\n\n\t\t\t\t\t// Support: Chrome <=35 - 45+\n\t\t\t\t\t// Assign undefined instead of using delete, see Data#remove\n\t\t\t\t\telem[ dataUser.expando ] = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n} );\n\njQuery.fn.extend( {\n\tdetach: function( selector ) {\n\t\treturn remove( this, selector, true );\n\t},\n\n\tremove: function( selector ) {\n\t\treturn remove( this, selector );\n\t},\n\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each( function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t} );\n\t},\n\n\tprepend: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t} );\n\t},\n\n\tbefore: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t} );\n\t},\n\n\tafter: function() {\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t} );\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map( function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t} );\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = jQuery.htmlPrefilter( value );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch ( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar ignored = [];\n\n\t\t// Make the changes, replacing each non-ignored context element with the new content\n\t\treturn domManip( this, arguments, function( elem ) {\n\t\t\tvar parent = this.parentNode;\n\n\t\t\tif ( jQuery.inArray( this, ignored ) < 0 ) {\n\t\t\t\tjQuery.cleanData( getAll( this ) );\n\t\t\t\tif ( parent ) {\n\t\t\t\t\tparent.replaceChild( elem, this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Force callback invocation\n\t\t}, ignored );\n\t}\n} );\n\njQuery.each( {\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: Android <=4.0 only, PhantomJS 1 only\n\t\t\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n} );\nvar rmargin = ( /^margin/ );\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\n\t\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n\t\t// IE throws on elements created in popups\n\t\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n\t\tvar view = elem.ownerDocument.defaultView;\n\n\t\tif ( !view || !view.opener ) {\n\t\t\tview = window;\n\t\t}\n\n\t\treturn view.getComputedStyle( elem );\n\t};\n\n\n\n( function() {\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computeStyleTests() {\n\n\t\t// This is a singleton, we need to execute it only once\n\t\tif ( !div ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdiv.style.cssText =\n\t\t\t\"box-sizing:border-box;\" +\n\t\t\t\"position:relative;display:block;\" +\n\t\t\t\"margin:auto;border:1px;padding:1px;\" +\n\t\t\t\"top:1%;width:50%\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocumentElement.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\n\t\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\t\treliableMarginLeftVal = divStyle.marginLeft === \"2px\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\t// Support: Android 4.0 - 4.3 only\n\t\t// Some styles come back with percentage values, even though they shouldn't\n\t\tdiv.style.marginRight = \"50%\";\n\t\tpixelMarginRightVal = divStyle.marginRight === \"4px\";\n\n\t\tdocumentElement.removeChild( container );\n\n\t\t// Nullify the div so it wouldn't be stored in the memory and\n\t\t// it will also be a sign that checks already performed\n\t\tdiv = null;\n\t}\n\n\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\t// Finish early in limited (non-browser) environments\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\t// Support: IE <=9 - 11 only\n\t// Style of cloned element affects source element cloned (#8908)\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:8px;height:0;top:0;left:-9999px;\" +\n\t\t\"padding:0;margin-top:1px;position:absolute\";\n\tcontainer.appendChild( div );\n\n\tjQuery.extend( support, {\n\t\tpixelPosition: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelPositionVal;\n\t\t},\n\t\tboxSizingReliable: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn boxSizingReliableVal;\n\t\t},\n\t\tpixelMarginRight: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn pixelMarginRightVal;\n\t\t},\n\t\treliableMarginLeft: function() {\n\t\t\tcomputeStyleTests();\n\t\t\treturn reliableMarginLeftVal;\n\t\t}\n\t} );\n} )();\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\n\t\t// Support: Firefox 51+\n\t\t// Retrieving style before computed somehow\n\t\t// fixes an issue with getting wrong values\n\t\t// on detached elements\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// getPropertyValue is needed for:\n\t//   .css('filter') (IE 9 only, #12537)\n\t//   .css('--customProperty) (#3144)\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// Android Browser returns percentage for some values,\n\t\t// but width seems to be reliably pixels.\n\t\t// This is against the CSSOM draft spec:\n\t\t// https://drafts.csswg.org/cssom/#resolved-values\n\t\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\n\t\t// Support: IE <=9 - 11 only\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\n\t\t\t\t// Hook not needed (or it's not possible to use it due\n\t\t\t\t// to missing dependency), remove it.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\t\t\treturn ( this.get = hookFn ).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\nvar\n\n\t// Swappable if display is none or starts with table\n\t// except \"table\", \"table-cell\", or \"table-caption\"\n\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trcustomProp = /^--/,\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\n\temptyStyle = document.createElement( \"div\" ).style;\n\n// Return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( name ) {\n\n\t// Shortcut for names that are not vendor prefixed\n\tif ( name in emptyStyle ) {\n\t\treturn name;\n\t}\n\n\t// Check for vendor prefixed names\n\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in emptyStyle ) {\n\t\t\treturn name;\n\t\t}\n\t}\n}\n\n// Return a property mapped along what jQuery.cssProps suggests or to\n// a vendor prefixed property.\nfunction finalPropName( name ) {\n\tvar ret = jQuery.cssProps[ name ];\n\tif ( !ret ) {\n\t\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\n\t}\n\treturn ret;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\n\t// Any relative (+/-) values have already been\n\t// normalized at this point\n\tvar matches = rcssNum.exec( value );\n\treturn matches ?\n\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i,\n\t\tval = 0;\n\n\t// If we already have the right measurement, avoid augmentation\n\tif ( extra === ( isBorderBox ? \"border\" : \"content\" ) ) {\n\t\ti = 4;\n\n\t// Otherwise initialize for horizontal or vertical properties\n\t} else {\n\t\ti = name === \"width\" ? 1 : 0;\n\t}\n\n\tfor ( ; i < 4; i += 2 ) {\n\n\t\t// Both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// At this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// At this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// At this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with computed style\n\tvar valueIsBorderBox,\n\t\tstyles = getStyles( elem ),\n\t\tval = curCSS( elem, name, styles ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// Computed unit is not pixels. Stop here and return.\n\tif ( rnumnonpx.test( val ) ) {\n\t\treturn val;\n\t}\n\n\t// Check for style in case a browser which returns unreliable values\n\t// for getComputedStyle silently falls back to the reliable elem.style\n\tvalueIsBorderBox = isBorderBox &&\n\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t// Fall back to offsetWidth/Height when value is \"auto\"\n\t// This happens for inline elements with no explicit setting (gh-3571)\n\tif ( val === \"auto\" ) {\n\t\tval = elem[ \"offset\" + name[ 0 ].toUpperCase() + name.slice( 1 ) ];\n\t}\n\n\t// Normalize \"\", auto, and prepare for extra\n\tval = parseFloat( val ) || 0;\n\n\t// Use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\njQuery.extend( {\n\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"animationIterationCount\": true,\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name ),\n\t\t\tstyle = elem.style;\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to query the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Gets hook for the prefixed version, then unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\t\t\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\n\t\t\t\tvalue = adjustCSS( elem, name, ret );\n\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set (#7116)\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add the unit (except for certain CSS properties)\n\t\t\tif ( type === \"number\" ) {\n\t\t\t\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\n\t\t\t}\n\n\t\t\t// background-* props affect original clone's values\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !( \"set\" in hooks ) ||\n\t\t\t\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\n\n\t\t\t\tif ( isCustomProp ) {\n\t\t\t\t\tstyle.setProperty( name, value );\n\t\t\t\t} else {\n\t\t\t\t\tstyle[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks &&\n\t\t\t\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\n\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tisCustomProp = rcustomProp.test( name );\n\n\t\t// Make sure that we're working with the right name. We don't\n\t\t// want to modify the value if it is a CSS custom property\n\t\t// since they are user-defined.\n\t\tif ( !isCustomProp ) {\n\t\t\tname = finalPropName( origName );\n\t\t}\n\n\t\t// Try prefixed name followed by the unprefixed name\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t// Convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Make numeric if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || isFinite( num ) ? num || 0 : val;\n\t\t}\n\n\t\treturn val;\n\t}\n} );\n\njQuery.each( [ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\n\t\t\t\t// Certain elements can have dimension info if we invisibly show them\n\t\t\t\t// but it must have a current display style that would benefit\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\n\n\t\t\t\t\t// Support: Safari 8+\n\t\t\t\t\t// Table columns in Safari have non-zero offsetWidth & zero\n\t\t\t\t\t// getBoundingClientRect().width unless display is changed.\n\t\t\t\t\t// Support: IE <=11 only\n\t\t\t\t\t// Running getBoundingClientRect on a disconnected node\n\t\t\t\t\t// in IE throws an error.\n\t\t\t\t\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\n\t\t\t\t\t\tswap( elem, cssShow, function() {\n\t\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t\t} ) :\n\t\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar matches,\n\t\t\t\tstyles = extra && getStyles( elem ),\n\t\t\t\tsubtract = extra && augmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t);\n\n\t\t\t// Convert to pixels if value adjustment is needed\n\t\t\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\n\t\t\t\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\n\n\t\t\t\telem.style[ name ] = value;\n\t\t\t\tvalue = jQuery.css( elem, name );\n\t\t\t}\n\n\t\t\treturn setPositiveNumber( elem, value, subtract );\n\t\t}\n\t};\n} );\n\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\n\t\t\t\telem.getBoundingClientRect().left -\n\t\t\t\t\tswap( elem, { marginLeft: 0 }, function() {\n\t\t\t\t\t\treturn elem.getBoundingClientRect().left;\n\t\t\t\t\t} )\n\t\t\t\t) + \"px\";\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each( {\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// Assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n} );\n\njQuery.fn.extend( {\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t}\n} );\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || jQuery.easing._default;\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\t// Use a property on the element directly when it is not a DOM element,\n\t\t\t// or when there is no matching style property that exists.\n\t\t\tif ( tween.elem.nodeType !== 1 ||\n\t\t\t\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// Passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails.\n\t\t\t// Simple values such as \"10px\" are parsed to Float;\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as-is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\n\t\t\t// Use step hook for back compat.\n\t\t\t// Use cssHook if its there.\n\t\t\t// Use .style if available and use plain properties where available.\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.nodeType === 1 &&\n\t\t\t\t( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||\n\t\t\t\t\tjQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE <=9 only\n// Panic based approach to setting things on disconnected nodes\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t},\n\t_default: \"swing\"\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, inProgress,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trrun = /queueHooks$/;\n\nfunction schedule() {\n\tif ( inProgress ) {\n\t\tif ( document.hidden === false && window.requestAnimationFrame ) {\n\t\t\twindow.requestAnimationFrame( schedule );\n\t\t} else {\n\t\t\twindow.setTimeout( schedule, jQuery.fx.interval );\n\t\t}\n\n\t\tjQuery.fx.tick();\n\t}\n}\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\twindow.setTimeout( function() {\n\t\tfxNow = undefined;\n\t} );\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// If we include width, step value is 1 to do all cssExpand values,\n\t// otherwise step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\n\n\t\t\t// We're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\n\t\tisBox = \"width\" in props || \"height\" in props,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHiddenWithinTree( elem ),\n\t\tdataShow = dataPriv.get( elem, \"fxshow\" );\n\n\t// Queue-skipping animations hijack the fx hooks\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always( function() {\n\n\t\t\t// Ensure the complete handler is called before this completes\n\t\t\tanim.always( function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n\n\t// Detect show/hide animations\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.test( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// Pretend to be hidden if this is a \"show\" and\n\t\t\t\t// there is still data from a stopped show/hide\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\n\t\t\t\t// Ignore all other no-op show/hide data\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\t\t}\n\t}\n\n\t// Bail out if this is a no-op like .hide().hide()\n\tpropTween = !jQuery.isEmptyObject( props );\n\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\n\t\treturn;\n\t}\n\n\t// Restrict \"overflow\" and \"display\" styles during box animations\n\tif ( isBox && elem.nodeType === 1 ) {\n\n\t\t// Support: IE <=9 - 11, Edge 12 - 13\n\t\t// Record all 3 overflow attributes because IE does not infer the shorthand\n\t\t// from identically-valued overflowX and overflowY\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Identify a display type, preferring old show/hide data over the CSS cascade\n\t\trestoreDisplay = dataShow && dataShow.display;\n\t\tif ( restoreDisplay == null ) {\n\t\t\trestoreDisplay = dataPriv.get( elem, \"display\" );\n\t\t}\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\tif ( display === \"none\" ) {\n\t\t\tif ( restoreDisplay ) {\n\t\t\t\tdisplay = restoreDisplay;\n\t\t\t} else {\n\n\t\t\t\t// Get nonempty value(s) by temporarily forcing visibility\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t\trestoreDisplay = elem.style.display || restoreDisplay;\n\t\t\t\tdisplay = jQuery.css( elem, \"display\" );\n\t\t\t\tshowHide( [ elem ] );\n\t\t\t}\n\t\t}\n\n\t\t// Animate inline elements as inline-block\n\t\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\n\t\t\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\n\n\t\t\t\t// Restore the original display value at the end of pure show/hide animations\n\t\t\t\tif ( !propTween ) {\n\t\t\t\t\tanim.done( function() {\n\t\t\t\t\t\tstyle.display = restoreDisplay;\n\t\t\t\t\t} );\n\t\t\t\t\tif ( restoreDisplay == null ) {\n\t\t\t\t\t\tdisplay = style.display;\n\t\t\t\t\t\trestoreDisplay = display === \"none\" ? \"\" : display;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstyle.display = \"inline-block\";\n\t\t\t}\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always( function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t} );\n\t}\n\n\t// Implement show/hide animations\n\tpropTween = false;\n\tfor ( prop in orig ) {\n\n\t\t// General show/hide setup for this element animation\n\t\tif ( !propTween ) {\n\t\t\tif ( dataShow ) {\n\t\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\t\thidden = dataShow.hidden;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\n\t\t\t}\n\n\t\t\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\t\t\tif ( toggle ) {\n\t\t\t\tdataShow.hidden = !hidden;\n\t\t\t}\n\n\t\t\t// Show elements before animating them\n\t\t\tif ( hidden ) {\n\t\t\t\tshowHide( [ elem ], true );\n\t\t\t}\n\n\t\t\t/* eslint-disable no-loop-func */\n\n\t\t\tanim.done( function() {\n\n\t\t\t/* eslint-enable no-loop-func */\n\n\t\t\t\t// The final step of a \"hide\" animation is actually hiding the element\n\t\t\t\tif ( !hidden ) {\n\t\t\t\t\tshowHide( [ elem ] );\n\t\t\t\t}\n\t\t\t\tdataPriv.remove( elem, \"fxshow\" );\n\t\t\t\tfor ( prop in orig ) {\n\t\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Per-property setup\n\t\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\t\tif ( !( prop in dataShow ) ) {\n\t\t\tdataShow[ prop ] = propTween.start;\n\t\t\tif ( hidden ) {\n\t\t\t\tpropTween.end = propTween.start;\n\t\t\t\tpropTween.start = 0;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( Array.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// Not quite $.extend, this won't overwrite existing keys.\n\t\t\t// Reusing 'index' because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = Animation.prefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\n\t\t\t// Don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t} ),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\n\t\t\t\t// Support: Android 2.3 only\n\t\t\t\t// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\n\n\t\t\t// If there's more to do, yield\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t}\n\n\t\t\t// If this was an empty animation, synthesize a final progress notification\n\t\t\tif ( !length ) {\n\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t}\n\n\t\t\t// Resolve the animation and report its conclusion\n\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\treturn false;\n\t\t},\n\t\tanimation = deferred.promise( {\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, {\n\t\t\t\tspecialEasing: {},\n\t\t\t\teasing: jQuery.easing._default\n\t\t\t}, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\n\t\t\t\t\t// If we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// Resolve when we played the last frame; otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} ),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length; index++ ) {\n\t\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\tif ( jQuery.isFunction( result.stop ) ) {\n\t\t\t\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\n\t\t\t\t\tjQuery.proxy( result.stop, result );\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\t// Attach callbacks from options\n\tanimation\n\t\t.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t} )\n\t);\n\n\treturn animation;\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweeners: {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value );\n\t\t\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\n\t\t\treturn tween;\n\t\t} ]\n\t},\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.match( rnothtmlwhite );\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\n\t\t\tAnimation.tweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilters: [ defaultPrefilter ],\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tAnimation.prefilters.unshift( callback );\n\t\t} else {\n\t\t\tAnimation.prefilters.push( callback );\n\t\t}\n\t}\n} );\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\t// Go to the end state if fx are off\n\tif ( jQuery.fx.off ) {\n\t\topt.duration = 0;\n\n\t} else {\n\t\tif ( typeof opt.duration !== \"number\" ) {\n\t\t\tif ( opt.duration in jQuery.fx.speeds ) {\n\t\t\t\topt.duration = jQuery.fx.speeds[ opt.duration ];\n\n\t\t\t} else {\n\t\t\t\topt.duration = jQuery.fx.speeds._default;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend( {\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// Show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\n\n\t\t\t// Animate to the value specified\n\t\t\t.end().animate( { opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = dataPriv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this &&\n\t\t\t\t\t( type == null || timers[ index ].queue === type ) ) {\n\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start the next in the queue if the last step wasn't forced.\n\t\t\t// Timers currently will call their complete callbacks, which\n\t\t\t// will dequeue but only if they were gotoEnd.\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t} );\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tvar index,\n\t\t\t\tdata = dataPriv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// Enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// Empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// Look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t} );\n\t}\n} );\n\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n} );\n\n// Generate shortcuts for custom animations\njQuery.each( {\n\tslideDown: genFx( \"show\" ),\n\tslideUp: genFx( \"hide\" ),\n\tslideToggle: genFx( \"toggle\" ),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n} );\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\n\t\t// Run the timer and safely remove it when done (allowing for external removal)\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tjQuery.fx.start();\n};\n\njQuery.fx.interval = 13;\njQuery.fx.start = function() {\n\tif ( inProgress ) {\n\t\treturn;\n\t}\n\n\tinProgress = true;\n\tschedule();\n};\n\njQuery.fx.stop = function() {\n\tinProgress = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = window.setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\twindow.clearTimeout( timeout );\n\t\t};\n\t} );\n};\n\n\n( function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: Android <=4.3 only\n\t// Default value for a checkbox should be \"on\"\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Support: IE <=11 only\n\t// Must access selectedIndex to make default options select\n\tsupport.optSelected = opt.selected;\n\n\t// Support: IE <=11 only\n\t// An input loses its value after becoming a radio\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n} )();\n\n\nvar boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend( {\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tattr: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set attributes on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === \"undefined\" ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// Attribute hooks are determined by the lowercase version\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tret = jQuery.find.attr( elem, name );\n\n\t\t// Non-existent attributes return null, we normalize to undefined\n\t\treturn ret == null ? undefined : ret;\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tnodeName( elem, \"input\" ) ) {\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name,\n\t\t\ti = 0,\n\n\t\t\t// Attribute names can contain non-HTML whitespace characters\n\t\t\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n\t\t\tattrNames = value && value.match( rnothtmlwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( ( name = attrNames[ i++ ] ) ) {\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\n\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle,\n\t\t\tlowercaseName = name.toLowerCase();\n\n\t\tif ( !isXML ) {\n\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ lowercaseName ];\n\t\t\tattrHandle[ lowercaseName ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tlowercaseName :\n\t\t\t\tnull;\n\t\t\tattrHandle[ lowercaseName ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n} );\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\n\trclickable = /^(?:a|area)$/i;\n\njQuery.fn.extend( {\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each( function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks,\n\t\t\tnType = elem.nodeType;\n\n\t\t// Don't get/set properties on text, comment and attribute nodes\n\t\tif ( nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\tif ( hooks && \"set\" in hooks &&\n\t\t\t\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\treturn ( elem[ name ] = value );\n\t\t}\n\n\t\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\n\t\t\treturn ret;\n\t\t}\n\n\t\treturn elem[ name ];\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\t// Support: IE <=9 - 11 only\n\t\t\t\t// elem.tabIndex doesn't always return the\n\t\t\t\t// correct value when it hasn't been explicitly set\n\t\t\t\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n\t\t\t\t// Use proper attribute retrieval(#12072)\n\t\t\t\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\n\n\t\t\t\tif ( tabindex ) {\n\t\t\t\t\treturn parseInt( tabindex, 10 );\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\trfocusable.test( elem.nodeName ) ||\n\t\t\t\t\trclickable.test( elem.nodeName ) &&\n\t\t\t\t\telem.href\n\t\t\t\t) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t},\n\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t}\n} );\n\n// Support: IE <=11 only\n// Accessing the selectedIndex property\n// forces the browser to respect setting selected\n// on the option\n// The getter ensures a default option is selected\n// when in an optgroup\n// eslint rule \"no-unused-expressions\" is disabled for this code\n// since it considers such accessions noop\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tset: function( elem ) {\n\n\t\t\t/* eslint no-unused-expressions: \"off\" */\n\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent ) {\n\t\t\t\tparent.selectedIndex;\n\n\t\t\t\tif ( parent.parentNode ) {\n\t\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\njQuery.each( [\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n} );\n\n\n\n\n\t// Strip and collapse whitespace according to HTML spec\n\t// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\n\tfunction stripAndCollapse( value ) {\n\t\tvar tokens = value.match( rnothtmlwhite ) || [];\n\t\treturn tokens.join( \" \" );\n\t}\n\n\nfunction getClass( elem ) {\n\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\n}\n\njQuery.fn.extend( {\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnothtmlwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, curValue, clazz, j, finalValue,\n\t\t\ti = 0;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\n\t\t\t} );\n\t\t}\n\n\t\tif ( !arguments.length ) {\n\t\t\treturn this.attr( \"class\", \"\" );\n\t\t}\n\n\t\tif ( typeof value === \"string\" && value ) {\n\t\t\tclasses = value.match( rnothtmlwhite ) || [];\n\n\t\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\t\tcurValue = getClass( elem );\n\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( ( clazz = classes[ j++ ] ) ) {\n\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = stripAndCollapse( cur );\n\t\t\t\t\tif ( curValue !== finalValue ) {\n\t\t\t\t\t\telem.setAttribute( \"class\", finalValue );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).toggleClass(\n\t\t\t\t\tvalue.call( this, i, getClass( this ), stateVal ),\n\t\t\t\t\tstateVal\n\t\t\t\t);\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar className, i, self, classNames;\n\n\t\t\tif ( type === \"string\" ) {\n\n\t\t\t\t// Toggle individual class names\n\t\t\t\ti = 0;\n\t\t\t\tself = jQuery( this );\n\t\t\t\tclassNames = value.match( rnothtmlwhite ) || [];\n\n\t\t\t\twhile ( ( className = classNames[ i++ ] ) ) {\n\n\t\t\t\t\t// Check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( value === undefined || type === \"boolean\" ) {\n\t\t\t\tclassName = getClass( this );\n\t\t\t\tif ( className ) {\n\n\t\t\t\t\t// Store className if set\n\t\t\t\t\tdataPriv.set( this, \"__className__\", className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed `false`,\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tif ( this.setAttribute ) {\n\t\t\t\t\tthis.setAttribute( \"class\",\n\t\t\t\t\t\tclassName || value === false ?\n\t\t\t\t\t\t\"\" :\n\t\t\t\t\t\tdataPriv.get( this, \"__className__\" ) || \"\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className, elem,\n\t\t\ti = 0;\n\n\t\tclassName = \" \" + selector + \" \";\n\t\twhile ( ( elem = this[ i++ ] ) ) {\n\t\t\tif ( elem.nodeType === 1 &&\n\t\t\t\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n} );\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend( {\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] ||\n\t\t\t\t\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks &&\n\t\t\t\t\t\"get\" in hooks &&\n\t\t\t\t\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\n\t\t\t\t) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\t// Handle most common string cases\n\t\t\t\tif ( typeof ret === \"string\" ) {\n\t\t\t\t\treturn ret.replace( rreturn, \"\" );\n\t\t\t\t}\n\n\t\t\t\t// Handle cases where value is null/undef or number\n\t\t\t\treturn ret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each( function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( Array.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t} );\n\t}\n} );\n\njQuery.extend( {\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\n\t\t\t\t\t// Support: IE <=10 - 11 only\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\t// Strip and collapse whitespace\n\t\t\t\t\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n\t\t\t\t\tstripAndCollapse( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option, i,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\",\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length;\n\n\t\t\t\tif ( index < 0 ) {\n\t\t\t\t\ti = max;\n\n\t\t\t\t} else {\n\t\t\t\t\ti = one ? index : 0;\n\t\t\t\t}\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t// IE8-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t!option.disabled &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled ||\n\t\t\t\t\t\t\t\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t/* eslint-disable no-cond-assign */\n\n\t\t\t\t\tif ( option.selected =\n\t\t\t\t\t\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\n\t\t\t\t\t) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t/* eslint-enable no-cond-assign */\n\t\t\t\t}\n\n\t\t\t\t// Force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n} );\n\n// Radios and checkboxes getter/setter\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( Array.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\n\t\t};\n\t}\n} );\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n\njQuery.extend( jQuery.event, {\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf( \".\" ) > -1 ) {\n\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split( \".\" );\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join( \".\" );\n\t\tevent.rnamespace = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join( \"\\\\.(?:.*\\\\.|)\" ) + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === ( elem.ownerDocument || document ) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( dataPriv.get( cur, \"events\" ) || {} )[ event.type ] &&\n\t\t\t\tdataPriv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( ( !special._default ||\n\t\t\t\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\n\t\t\t\tacceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\t// Piggyback on a donor event to simulate a different one\n\t// Used only for `focus(in | out)` events\n\tsimulate: function( type, elem, event ) {\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true\n\t\t\t}\n\t\t);\n\n\t\tjQuery.event.trigger( e, null, elem );\n\t}\n\n} );\n\njQuery.fn.extend( {\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t} );\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[ 0 ];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n} );\n\n\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\n\tfunction( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n} );\n\njQuery.fn.extend( {\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t}\n} );\n\n\n\n\nsupport.focusin = \"onfocusin\" in window;\n\n\n// Support: Firefox <=44\n// Firefox doesn't have focus(in | out) events\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n//\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n// focus(in | out) events fire after focus & blur events,\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\nif ( !support.focusin ) {\n\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\n\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = dataPriv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdataPriv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdataPriv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t} );\n}\nvar location = window.location;\n\nvar nonce = jQuery.now();\n\nvar rquery = ( /\\?/ );\n\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE 9 - 11 only\n\t// IE throws on parseFromString with invalid input.\n\ttry {\n\t\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( Array.isArray( obj ) ) {\n\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams(\n\t\t\t\t\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\n\t\t\t\t\tv,\n\t\t\t\t\ttraditional,\n\t\t\t\t\tadd\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, valueOrFunction ) {\n\n\t\t\t// If value is a function, invoke it and use its return value\n\t\t\tvar value = jQuery.isFunction( valueOrFunction ) ?\n\t\t\t\tvalueOrFunction() :\n\t\t\t\tvalueOrFunction;\n\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\n\t\t\t\tencodeURIComponent( value == null ? \"\" : value );\n\t\t};\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t} );\n\n\t} else {\n\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" );\n};\n\njQuery.fn.extend( {\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map( function() {\n\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t} )\n\t\t.filter( function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t} )\n\t\t.map( function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\tif ( val == null ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\treturn jQuery.map( val, function( val ) {\n\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t} ).get();\n\t}\n} );\n\n\nvar\n\tr20 = /%20/g,\n\trhash = /#.*$/,\n\trantiCache = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat( \"*\" ),\n\n\t// Anchor tag for parsing the document origin\n\toriginAnchor = document.createElement( \"a\" );\n\toriginAnchor.href = location.href;\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\n\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[ 0 ] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" &&\n\t\t\t\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t} );\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s.throws ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstate: \"parsererror\",\n\t\t\t\t\t\t\t\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend( {\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: location.href,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( location.protocol ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /\\bxml\\b/,\n\t\t\thtml: /\\bhtml/,\n\t\t\tjson: /\\bjson\\b/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": JSON.parse,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\n\t\t\t// Url cleanup var\n\t\t\turlAnchor,\n\n\t\t\t// Request state (becomes false upon send and true upon completion)\n\t\t\tcompleted,\n\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\n\t\t\t// Loop variable\n\t\t\ti,\n\n\t\t\t// uncached part of the url\n\t\t\tuncached,\n\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context &&\n\t\t\t\t( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\t\tjQuery.event,\n\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\n\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( completed ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn completed ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\tname = requestHeadersNames[ name.toLowerCase() ] =\n\t\t\t\t\t\t\trequestHeadersNames[ name.toLowerCase() ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( completed == null ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( completed ) {\n\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// Lazy-add the new callbacks in a way that preserves old ones\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR );\n\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || location.href ) + \"\" )\n\t\t\t.replace( rprotocol, location.protocol + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when the origin doesn't match the current origin.\n\t\tif ( s.crossDomain == null ) {\n\t\t\turlAnchor = document.createElement( \"a\" );\n\n\t\t\t// Support: IE <=8 - 11, Edge 12 - 13\n\t\t\t// IE throws exception on accessing the href property if url is malformed,\n\t\t\t// e.g. http://example.com:80x/\n\t\t\ttry {\n\t\t\t\turlAnchor.href = s.url;\n\n\t\t\t\t// Support: IE <=8 - 11 only\n\t\t\t\t// Anchor's host property isn't correctly set when s.url is relative\n\t\t\t\turlAnchor.href = urlAnchor.href;\n\t\t\t\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\n\t\t\t\t\turlAnchor.protocol + \"//\" + urlAnchor.host;\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// If there is an error parsing the URL, assume it is crossDomain,\n\t\t\t\t// it can be rejected by the transport if it is invalid\n\t\t\t\ts.crossDomain = true;\n\t\t\t}\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( completed ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\t// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\t\tfireGlobals = jQuery.event && s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger( \"ajaxStart\" );\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\t// Remove hash to simplify url manipulation\n\t\tcacheURL = s.url.replace( rhash, \"\" );\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// Remember the hash so we can put it back\n\t\t\tuncached = s.url.slice( cacheURL.length );\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\n\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add or update anti-cache param if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\n\t\t\t\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce++ ) + uncached;\n\t\t\t}\n\n\t\t\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\n\t\t\ts.url = cacheURL + uncached;\n\n\t\t// Change '%20' to '+' if this is encoded form body content (gh-2658)\n\t\t} else if ( s.data && s.processData &&\n\t\t\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\n\t\t\ts.data = s.data.replace( r20, \"+\" );\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[ 0 ] ] +\n\t\t\t\t\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend &&\n\t\t\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\n\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// Aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tcompleteDeferred.add( s.complete );\n\t\tjqXHR.done( s.success );\n\t\tjqXHR.fail( s.error );\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\n\t\t\t// If request was aborted inside ajaxSend, stop there\n\t\t\tif ( completed ) {\n\t\t\t\treturn jqXHR;\n\t\t\t}\n\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = window.setTimeout( function() {\n\t\t\t\t\tjqXHR.abort( \"timeout\" );\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tcompleted = false;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\n\t\t\t\t// Rethrow post-completion exceptions\n\t\t\t\tif ( completed ) {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\n\t\t\t\t// Propagate others as results\n\t\t\t\tdone( -1, e );\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Ignore repeat invocations\n\t\t\tif ( completed ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcompleted = true;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\twindow.clearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader( \"etag\" );\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Extract error from statusText and normalize for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger( \"ajaxStop\" );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n} );\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\n\t\t// Shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\t// The url can be an options object (which then must have .url)\n\t\treturn jQuery.ajax( jQuery.extend( {\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t}, jQuery.isPlainObject( url ) && url ) );\n\t};\n} );\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax( {\n\t\turl: url,\n\n\t\t// Make this explicit, since user can override this through ajaxSetup (#11264)\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tcache: true,\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t} );\n};\n\n\njQuery.fn.extend( {\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( this[ 0 ] ) {\n\t\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\t\thtml = html.call( this[ 0 ] );\n\t\t\t}\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map( function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t} ).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each( function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call( this, i ) );\n\t\t\t} );\n\t\t}\n\n\t\treturn this.each( function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t} );\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each( function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\n\t\t} );\n\t},\n\n\tunwrap: function( selector ) {\n\t\tthis.parent( selector ).not( \"body\" ).each( function() {\n\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t} );\n\t\treturn this;\n\t}\n} );\n\n\njQuery.expr.pseudos.hidden = function( elem ) {\n\treturn !jQuery.expr.pseudos.visible( elem );\n};\njQuery.expr.pseudos.visible = function( elem ) {\n\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\n};\n\n\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new window.XMLHttpRequest();\n\t} catch ( e ) {}\n};\n\nvar xhrSuccessStatus = {\n\n\t\t// File protocol always yields status code 0, assume 200\n\t\t0: 200,\n\n\t\t// Support: IE <=9 only\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport( function( options ) {\n\tvar callback, errorCallback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr();\n\n\t\t\t\txhr.open(\n\t\t\t\t\toptions.type,\n\t\t\t\t\toptions.url,\n\t\t\t\t\toptions.async,\n\t\t\t\t\toptions.username,\n\t\t\t\t\toptions.password\n\t\t\t\t);\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\n\t\t\t\t\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tcallback = errorCallback = xhr.onload =\n\t\t\t\t\t\t\t\txhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\n\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t// On a manual native abort, IE9 throws\n\t\t\t\t\t\t\t\t// errors on any property access that is not readyState\n\t\t\t\t\t\t\t\tif ( typeof xhr.status !== \"number\" ) {\n\t\t\t\t\t\t\t\t\tcomplete( 0, \"error\" );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcomplete(\n\n\t\t\t\t\t\t\t\t\t\t// File: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\n\t\t\t\t\t\t\t\t\t// Support: IE <=9 only\n\t\t\t\t\t\t\t\t\t// IE9 has no XHR2 but throws on binary (trac-11426)\n\t\t\t\t\t\t\t\t\t// For XHR2 non-text, let the caller handle it (gh-2498)\n\t\t\t\t\t\t\t\t\t( xhr.responseType || \"text\" ) !== \"text\"  ||\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText !== \"string\" ?\n\t\t\t\t\t\t\t\t\t\t{ binary: xhr.response } :\n\t\t\t\t\t\t\t\t\t\t{ text: xhr.responseText },\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\terrorCallback = xhr.onerror = callback( \"error\" );\n\n\t\t\t\t// Support: IE 9 only\n\t\t\t\t// Use onreadystatechange to replace onabort\n\t\t\t\t// to handle uncaught aborts\n\t\t\t\tif ( xhr.onabort !== undefined ) {\n\t\t\t\t\txhr.onabort = errorCallback;\n\t\t\t\t} else {\n\t\t\t\t\txhr.onreadystatechange = function() {\n\n\t\t\t\t\t\t// Check readyState before timeout as it changes\n\t\t\t\t\t\tif ( xhr.readyState === 4 ) {\n\n\t\t\t\t\t\t\t// Allow onerror to be called first,\n\t\t\t\t\t\t\t// but that will not handle a native abort\n\t\t\t\t\t\t\t// Also, save errorCallback to a variable\n\t\t\t\t\t\t\t// as xhr.onerror cannot be accessed\n\t\t\t\t\t\t\twindow.setTimeout( function() {\n\t\t\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = callback( \"abort\" );\n\n\t\t\t\ttry {\n\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\njQuery.ajaxPrefilter( function( s ) {\n\tif ( s.crossDomain ) {\n\t\ts.contents.script = false;\n\t}\n} );\n\n// Install script dataType\njQuery.ajaxSetup( {\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, \" +\n\t\t\t\"application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /\\b(?:java|ecma)script\\b/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n} );\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n} );\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery( \"<script>\" ).prop( {\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t} ).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\t// Use native DOM manipulation to avoid our domManip AJAX trickery\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n} );\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup( {\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n} );\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" &&\n\t\t\t\t( s.contentType || \"\" )\n\t\t\t\t\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\n\t\t\t\trjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[ \"script json\" ] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// Force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always( function() {\n\n\t\t\t// If previous value didn't exist - remove it\n\t\t\tif ( overwritten === undefined ) {\n\t\t\t\tjQuery( window ).removeProp( callbackName );\n\n\t\t\t// Otherwise restore preexisting value\n\t\t\t} else {\n\t\t\t\twindow[ callbackName ] = overwritten;\n\t\t\t}\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\n\t\t\t\t// Make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// Save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t} );\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n} );\n\n\n\n\n// Support: Safari 8 only\n// In Safari 8 documents created via document.implementation.createHTMLDocument\n// collapse sibling forms: the second one becomes a child of the first one.\n// Because of that, this security measure has to be disabled in Safari 8.\n// https://bugs.webkit.org/show_bug.cgi?id=137337\nsupport.createHTMLDocument = ( function() {\n\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\n\tbody.innerHTML = \"<form></form><form></form>\";\n\treturn body.childNodes.length === 2;\n} )();\n\n\n// Argument \"data\" should be string of html\n// context (optional): If specified, the fragment will be created in this context,\n// defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( typeof data !== \"string\" ) {\n\t\treturn [];\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\n\tvar base, parsed, scripts;\n\n\tif ( !context ) {\n\n\t\t// Stop scripts or inline event handlers from being executed immediately\n\t\t// by using document.implementation\n\t\tif ( support.createHTMLDocument ) {\n\t\t\tcontext = document.implementation.createHTMLDocument( \"\" );\n\n\t\t\t// Set the base href for the created document\n\t\t\t// so any parsed elements with URLs\n\t\t\t// are based on the document's URL (gh-2965)\n\t\t\tbase = context.createElement( \"base\" );\n\t\t\tbase.href = document.location.href;\n\t\t\tcontext.head.appendChild( base );\n\t\t} else {\n\t\t\tcontext = document;\n\t\t}\n\t}\n\n\tparsed = rsingleTag.exec( data );\n\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[ 1 ] ) ];\n\t}\n\n\tparsed = buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf( \" \" );\n\n\tif ( off > -1 ) {\n\t\tselector = stripAndCollapse( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax( {\n\t\t\turl: url,\n\n\t\t\t// If \"type\" variable is undefined, then \"GET\" method will be used.\n\t\t\t// Make value of this field explicit since\n\t\t\t// user can override it through ajaxSetup method\n\t\t\ttype: type || \"GET\",\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t} ).done( function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n\t\t// but they are ignored because response was set above.\n\t\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n\t\t} ).always( callback && function( jqXHR, status ) {\n\t\t\tself.each( function() {\n\t\t\t\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t\t} );\n\t\t} );\n\t}\n\n\treturn this;\n};\n\n\n\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [\n\t\"ajaxStart\",\n\t\"ajaxStop\",\n\t\"ajaxComplete\",\n\t\"ajaxError\",\n\t\"ajaxSuccess\",\n\t\"ajaxSend\"\n], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n} );\n\n\n\n\njQuery.expr.pseudos.animated = function( elem ) {\n\treturn jQuery.grep( jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t} ).length;\n};\n\n\n\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\n\n\t\t// Need to be able to calculate position if either\n\t\t// top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\n\t\t\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n\t\t\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend( {\n\toffset: function( options ) {\n\n\t\t// Preserve chaining for setter\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each( function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t} );\n\t\t}\n\n\t\tvar doc, docElem, rect, win,\n\t\t\telem = this[ 0 ];\n\n\t\tif ( !elem ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n\t\t// Support: IE <=11 only\n\t\t// Running getBoundingClientRect on a\n\t\t// disconnected node in IE throws an error\n\t\tif ( !elem.getClientRects().length ) {\n\t\t\treturn { top: 0, left: 0 };\n\t\t}\n\n\t\trect = elem.getBoundingClientRect();\n\n\t\tdoc = elem.ownerDocument;\n\t\tdocElem = doc.documentElement;\n\t\twin = doc.defaultView;\n\n\t\treturn {\n\t\t\ttop: rect.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: rect.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n\t\t// because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\n\t\t\t// Assume getBoundingClientRect is there when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset = {\n\t\t\t\ttop: parentOffset.top + jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true ),\n\t\t\t\tleft: parentOffset.left + jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true )\n\t\t\t};\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\t// This method will return documentElement in the following cases:\n\t// 1) For the element inside the iframe without offsetParent, this method will return\n\t//    documentElement of the parent window\n\t// 2) For the hidden or detached element\n\t// 3) For body or html element, i.e. in case of the html node - it will return itself\n\t//\n\t// but those exceptions were never presented as a real life use-cases\n\t// and might be considered as more preferable results.\n\t//\n\t// This logic, however, is not guaranteed and can change at any point in the future\n\toffsetParent: function() {\n\t\treturn this.map( function() {\n\t\t\tvar offsetParent = this.offsetParent;\n\n\t\t\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || documentElement;\n\t\t} );\n\t}\n} );\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\n\t\t\t// Coalesce documents and windows\n\t\t\tvar win;\n\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\twin = elem;\n\t\t\t} else if ( elem.nodeType === 9 ) {\n\t\t\t\twin = elem.defaultView;\n\t\t\t}\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : win.pageXOffset,\n\t\t\t\t\ttop ? val : win.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length );\n\t};\n} );\n\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n// getComputedStyle returns percent when specified for top/left/bottom/right;\n// rather than make the css module depend on the offset module, just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\n\t\t\t\t// If curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n} );\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\n\t\tfunction( defaultExtra, funcName ) {\n\n\t\t// Margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n\t\t\t\t\treturn funcName.indexOf( \"outer\" ) === 0 ?\n\t\t\t\t\t\telem[ \"inner\" + name ] :\n\t\t\t\t\t\telem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable );\n\t\t};\n\t} );\n} );\n\n\njQuery.fn.extend( {\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ?\n\t\t\tthis.off( selector, \"**\" ) :\n\t\t\tthis.off( types, selector || \"**\", fn );\n\t}\n} );\n\njQuery.holdReady = function( hold ) {\n\tif ( hold ) {\n\t\tjQuery.readyWait++;\n\t} else {\n\t\tjQuery.ready( true );\n\t}\n};\njQuery.isArray = Array.isArray;\njQuery.parseJSON = JSON.parse;\njQuery.nodeName = nodeName;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t} );\n}\n\n\n\n\nvar\n\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in AMD\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( !noGlobal ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n} );\n","// jQuery plugins expect to find a global `jQuery` object, so we\n// need to attach it to the window.\n//\n// This is in its own file because we have to attach it before any\n// other imports happen, but with ES6 modules, all `import`s have\n// to be at the top.\nimport $ from 'jquery';\nwindow.jQuery = $;\nwindow.$ = $;\n","/*!\n * Trend 0.2.0\n *\n * Fail-safe TransitionEnd event for jQuery.\n *\n * Adds a new \"trend\" event that can be used in browsers that don't\n * support \"transitionend\".\n *\n * NOTE: Only supports being bound with \"jQuery.one\".\n *\n * Copyright 2014, Pixel Union - http://pixelunion.net\n * Released under the MIT license\n */\n;(function($){\n\n  // Prefixed transitionend event names\n  var transitionEndEvents =\n    \"webkitTransitionEnd \" +\n    \"otransitionend \" +\n    \"oTransitionEnd \" +\n    \"msTransitionEnd \" +\n    \"transitionend\";\n\n  // Prefixed transition duration property names\n  var transitionDurationProperties = [\n    \"transition-duration\",\n    \"-moz-transition-duration\",\n    \"-webkit-transition-duration\",\n    \"-ms-transition-duration\",\n    \"-o-transition-duration\",\n    \"-khtml-transition-duration\"\n  ];\n\n  // Prefixed transition delay property names\n  var transitionDelayProperties = [\n    \"transition-delay\",\n    \"-moz-transition-delay\",\n    \"-webkit-transition-delay\",\n    \"-ms-transition-delay\",\n    \"-o-transition-delay\",\n    \"-khtml-transition-delay\"\n  ];\n\n  // Parses a CSS time value into milliseconds.\n  var parseTime = function(s) {\n    s = s.replace(/\\s/, \"\");\n    var v = window.parseFloat(s);\n\n    return s.match(/[^m]s$/i)\n      ? v * 1000\n      : v;\n  };\n\n  // Parses the longest time unit found in a series of CSS properties.\n  // Returns a value in milliseconds.\n  var parseProperties = function(el, properties) {\n    var duration = 0;\n\n    for (var i = 0; i < properties.length; i++) {\n      // Get raw CSS value\n      var value = el.css(properties[i]);\n      if (!value) continue;\n\n      // Multiple transitions--pick the longest\n      if (value.indexOf(\",\") !== -1) {\n        var values = value.split(\",\");\n        var durations = (function(){\n          var results = [];\n          for (var i = 0; i < values.length; i++) {\n            var duration = parseTime(values[i]);\n            results.push(duration);\n          }\n          return results;\n        })();\n\n        duration = Math.max.apply(Math, durations);\n      }\n\n      // Single transition\n      else {\n        duration = parseTime(value);\n      }\n\n      // Accept first vaue\n      break;\n    }\n\n    return duration;\n  };\n\n  $.event.special.trend = {\n    // Triggers an event handler when an element is done transitioning.\n    //\n    // Handles browsers that don't support transitionend by adding a\n    // timeout with the transition duration.\n    add: function(handleObj) {\n      var el = $(this);\n      var fired = false;\n\n      // Mark element as being in transition\n      el.data(\"trend\", true);\n\n      // Calculate a fallback duration. + 20 because some browsers fire\n      // timeouts faster than transitionend.\n      var time =\n        parseProperties(el, transitionDurationProperties) +\n        parseProperties(el, transitionDelayProperties) +\n        20;\n\n      var cb = function(e) {\n        // transitionend events can be sent for each property. Let's just\n        // skip all but the first. Also handles the timeout callback.\n        if (fired) return;\n\n        // Child elements that also have transitions can be fired before we\n        // complete. This will catch and ignore those. Unfortunately, we'll\n        // have to rely on the timeout in these cases.\n        if (e && e.srcElement !== el[0]) return;\n\n        // Mark element has not being in transition\n        el.data(\"trend\", false);\n\n        // Callback\n        fired = true;\n        if (handleObj.handler) handleObj.handler();\n      };\n\n      el.one(transitionEndEvents, cb);\n      el.data(\"trend-timeout\", window.setTimeout(cb, time));\n    },\n\n    remove: function(handleObj) {\n      var el = $(this);\n      el.off(transitionEndEvents);\n      window.clearTimeout(el.data(\"trend-timeout\"));\n    }\n  };\n\n})(jQuery);\n","/*!\n * Revealer 2.0.1\n *\n * Copyright 2015, Pixel Union - http://pixelunion.net\n * Released under the MIT license\n */\n(function($){\n  // check for trend event (make sure jquery.trend is included)\n  if (typeof $.event.special.trend !== \"object\") {\n    console.warn(\"Please make sure jquery.trend is included! Otherwise revealer won't work.\");\n  }\n\n  // Simple requestAnimationFrame polyfill\n  var raf = window.requestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    function(fn) { window.setTimeout(fn, 1000/60); }\n\n\n  // Public API\n  var methods = {\n    isVisible: function(el) {\n      return !!el.data(\"revealer-visible\");\n    },\n\n    show: function(el, force) {\n      // Check state\n      if (methods.isVisible(el)) {\n        el.removeClass(\"animating animating-in\");\n        el.off(\"revealer-animating revealer-show\");\n        return;\n      }\n\n      // Remove previous event listeners\n      el.data(\"revealer-visible\", true);\n      el.off(\"trend\");\n\n      if (force) {\n        el.addClass(\"visible\");\n        raf(function(){\n          el.trigger(\"revealer-animating\");\n          el.trigger(\"revealer-show\");\n        });\n        return;\n      }\n\n      raf(function(){\n        // Start animation state transition\n        el.addClass(\"animating animating-in\");\n        el.trigger(\"revealer-animating\");\n\n        raf(function(){\n          el.addClass(\"visible\");\n\n          el.one(\"trend\", function(){\n            el.removeClass(\"animating animating-in\");\n            el.trigger(\"revealer-show\");\n          });\n        });\n      });\n    },\n\n    hide: function(el, force) {\n      // Check state\n      if (!methods.isVisible(el)) {\n        el.removeClass(\"animating animating-out visible\");\n        el.off(\"revealer-animating revealer-hide\");\n        return;\n      }\n\n      // Remove previous event listeners\n      el.data(\"revealer-visible\", false);\n      el.off(\"trend\");\n\n      if (force) {\n        el.removeClass(\"visible\");\n        raf(function(){\n          el.trigger(\"revealer-animating\");\n          el.trigger(\"revealer-hide\");\n        });\n        return;\n      }\n\n      raf(function(){\n        el.addClass(\"animating animating-out\");\n        el.trigger(\"revealer-animating\");\n\n        raf(function(){\n          el.removeClass(\"visible\");\n\n          el.one(\"trend\", function(){\n            el.removeClass(\"animating animating-in animating-out\");\n            el.trigger(\"revealer-hide\");\n          });\n        });\n      });\n    },\n\n    toggle: function(el, force) {\n      if (methods.isVisible(el)) {\n        methods.hide(el, force);\n      } else {\n        methods.show(el, force);\n      }\n    }\n  };\n\n  // jQuery plugin\n  $.fn.revealer = function(method, force) {\n    // Get action\n    var action = methods[method || \"toggle\"];\n    if (!action) return this;\n\n    // Run action\n    if (method === \"isVisible\") {\n      return action(this);\n    }\n\n    return this.each(function(){\n      action($(this), force);\n    });\n  };\n})(jQuery);\n","/*!\n  * $script.js JS loader & dependency manager\n  * https://github.com/ded/script.js\n  * (c) Dustin Diaz 2014 | License MIT\n  */\n\n(function (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define == 'function' && define.amd) define(definition)\n  else this[name] = definition()\n})('$script', function () {\n  var doc = document\n    , head = doc.getElementsByTagName('head')[0]\n    , s = 'string'\n    , f = false\n    , push = 'push'\n    , readyState = 'readyState'\n    , onreadystatechange = 'onreadystatechange'\n    , list = {}\n    , ids = {}\n    , delay = {}\n    , scripts = {}\n    , scriptpath\n    , urlArgs\n\n  function every(ar, fn) {\n    for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f\n    return 1\n  }\n  function each(ar, fn) {\n    every(ar, function (el) {\n      return !fn(el)\n    })\n  }\n\n  function $script(paths, idOrDone, optDone) {\n    paths = paths[push] ? paths : [paths]\n    var idOrDoneIsDone = idOrDone && idOrDone.call\n      , done = idOrDoneIsDone ? idOrDone : optDone\n      , id = idOrDoneIsDone ? paths.join('') : idOrDone\n      , queue = paths.length\n    function loopFn(item) {\n      return item.call ? item() : list[item]\n    }\n    function callback() {\n      if (!--queue) {\n        list[id] = 1\n        done && done()\n        for (var dset in delay) {\n          every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])\n        }\n      }\n    }\n    setTimeout(function () {\n      each(paths, function loading(path, force) {\n        if (path === null) return callback()\n        \n        if (!force && !/^https?:\\/\\//.test(path) && scriptpath) {\n          path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;\n        }\n        \n        if (scripts[path]) {\n          if (id) ids[id] = 1\n          return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)\n        }\n\n        scripts[path] = 1\n        if (id) ids[id] = 1\n        create(path, callback)\n      })\n    }, 0)\n    return $script\n  }\n\n  function create(path, fn) {\n    var el = doc.createElement('script'), loaded\n    el.onload = el.onerror = el[onreadystatechange] = function () {\n      if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;\n      el.onload = el[onreadystatechange] = null\n      loaded = 1\n      scripts[path] = 2\n      fn()\n    }\n    el.async = 1\n    el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;\n    head.insertBefore(el, head.lastChild)\n  }\n\n  $script.get = create\n\n  $script.order = function (scripts, id, done) {\n    (function callback(s) {\n      s = scripts.shift()\n      !scripts.length ? $script(s, id, done) : $script(s, callback)\n    }())\n  }\n\n  $script.path = function (p) {\n    scriptpath = p\n  }\n  $script.urlArgs = function (str) {\n    urlArgs = str;\n  }\n  $script.ready = function (deps, ready, req) {\n    deps = deps[push] ? deps : [deps]\n    var missing = [];\n    !each(deps, function (dep) {\n      list[dep] || missing[push](dep);\n    }) && every(deps, function (dep) {return list[dep]}) ?\n      ready() : !function (key) {\n      delay[key] = delay[key] || []\n      delay[key][push](ready)\n      req && req(missing)\n    }(deps.join('|'))\n    return $script\n  }\n\n  $script.done = function (idOrDone) {\n    $script([null], idOrDone)\n  }\n\n  return $script\n});\n","/*!\n * classie v1.0.1\n * class helper functions\n * from bonzo https://github.com/ded/bonzo\n * MIT license\n * \n * classie.has( elem, 'my-class' ) -> true/false\n * classie.add( elem, 'my-new-class' )\n * classie.remove( elem, 'my-unwanted-class' )\n * classie.toggle( elem, 'my-class' )\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n/*global define: false, module: false */\n\n( function( window ) {\n\n'use strict';\n\n// class helper functions from bonzo https://github.com/ded/bonzo\n\nfunction classReg( className ) {\n  return new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\");\n}\n\n// classList support for class management\n// altho to be fair, the api sucks because it won't accept multiple classes at once\nvar hasClass, addClass, removeClass;\n\nif ( 'classList' in document.documentElement ) {\n  hasClass = function( elem, c ) {\n    return elem.classList.contains( c );\n  };\n  addClass = function( elem, c ) {\n    elem.classList.add( c );\n  };\n  removeClass = function( elem, c ) {\n    elem.classList.remove( c );\n  };\n}\nelse {\n  hasClass = function( elem, c ) {\n    return classReg( c ).test( elem.className );\n  };\n  addClass = function( elem, c ) {\n    if ( !hasClass( elem, c ) ) {\n      elem.className = elem.className + ' ' + c;\n    }\n  };\n  removeClass = function( elem, c ) {\n    elem.className = elem.className.replace( classReg( c ), ' ' );\n  };\n}\n\nfunction toggleClass( elem, c ) {\n  var fn = hasClass( elem, c ) ? removeClass : addClass;\n  fn( elem, c );\n}\n\nvar classie = {\n  // full names\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  // short names\n  has: hasClass,\n  add: addClass,\n  remove: removeClass,\n  toggle: toggleClass\n};\n\n// transport\nif ( typeof define === 'function' && define.amd ) {\n  // AMD\n  define( classie );\n} else if ( typeof exports === 'object' ) {\n  // CommonJS\n  module.exports = classie;\n} else {\n  // browser global\n  window.classie = classie;\n}\n\n})( window );\n","/*!\n * EventEmitter v4.2.11 - git.io/ee\n * Unlicense - http://unlicense.org/\n * Oliver Caldwell - http://oli.me.uk/\n * @preserve\n */\n\n;(function () {\n    'use strict';\n\n    /**\n     * Class for managing events.\n     * Can be extended to provide event functionality in other classes.\n     *\n     * @class EventEmitter Manages event registering and emitting.\n     */\n    function EventEmitter() {}\n\n    // Shortcuts to improve speed and size\n    var proto = EventEmitter.prototype;\n    var exports = this;\n    var originalGlobalValue = exports.EventEmitter;\n\n    /**\n     * Finds the index of the listener for the event in its storage array.\n     *\n     * @param {Function[]} listeners Array of listeners to search through.\n     * @param {Function} listener Method to look for.\n     * @return {Number} Index of the specified listener, -1 if not found\n     * @api private\n     */\n    function indexOfListener(listeners, listener) {\n        var i = listeners.length;\n        while (i--) {\n            if (listeners[i].listener === listener) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Alias a method while keeping the context correct, to allow for overwriting of target method.\n     *\n     * @param {String} name The name of the target method.\n     * @return {Function} The aliased method\n     * @api private\n     */\n    function alias(name) {\n        return function aliasClosure() {\n            return this[name].apply(this, arguments);\n        };\n    }\n\n    /**\n     * Returns the listener array for the specified event.\n     * Will initialise the event object and listener arrays if required.\n     * Will return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\n     * Each property in the object response is an array of listener functions.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Function[]|Object} All listener functions for the event.\n     */\n    proto.getListeners = function getListeners(evt) {\n        var events = this._getEvents();\n        var response;\n        var key;\n\n        // Return a concatenated array of all matching events if\n        // the selector is a regular expression.\n        if (evt instanceof RegExp) {\n            response = {};\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    response[key] = events[key];\n                }\n            }\n        }\n        else {\n            response = events[evt] || (events[evt] = []);\n        }\n\n        return response;\n    };\n\n    /**\n     * Takes a list of listener objects and flattens it into a list of listener functions.\n     *\n     * @param {Object[]} listeners Raw listener objects.\n     * @return {Function[]} Just the listener functions.\n     */\n    proto.flattenListeners = function flattenListeners(listeners) {\n        var flatListeners = [];\n        var i;\n\n        for (i = 0; i < listeners.length; i += 1) {\n            flatListeners.push(listeners[i].listener);\n        }\n\n        return flatListeners;\n    };\n\n    /**\n     * Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.\n     *\n     * @param {String|RegExp} evt Name of the event to return the listeners from.\n     * @return {Object} All listener functions for an event in an object.\n     */\n    proto.getListenersAsObject = function getListenersAsObject(evt) {\n        var listeners = this.getListeners(evt);\n        var response;\n\n        if (listeners instanceof Array) {\n            response = {};\n            response[evt] = listeners;\n        }\n\n        return response || listeners;\n    };\n\n    /**\n     * Adds a listener function to the specified event.\n     * The listener will not be added if it is a duplicate.\n     * If the listener returns true then it will be removed after it is called.\n     * If you pass a regular expression as the event name then the listener will be added to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListener = function addListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var listenerIsWrapped = typeof listener === 'object';\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key) && indexOfListener(listeners[key], listener) === -1) {\n                listeners[key].push(listenerIsWrapped ? listener : {\n                    listener: listener,\n                    once: false\n                });\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of addListener\n     */\n    proto.on = alias('addListener');\n\n    /**\n     * Semi-alias of addListener. It will add a listener that will be\n     * automatically removed after its first execution.\n     *\n     * @param {String|RegExp} evt Name of the event to attach the listener to.\n     * @param {Function} listener Method to be called when the event is emitted. If the function returns true then it will be removed after calling.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addOnceListener = function addOnceListener(evt, listener) {\n        return this.addListener(evt, {\n            listener: listener,\n            once: true\n        });\n    };\n\n    /**\n     * Alias of addOnceListener.\n     */\n    proto.once = alias('addOnceListener');\n\n    /**\n     * Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\n     * You need to tell it what event names should be matched by a regex.\n     *\n     * @param {String} evt Name of the event to create.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvent = function defineEvent(evt) {\n        this.getListeners(evt);\n        return this;\n    };\n\n    /**\n     * Uses defineEvent to define multiple events.\n     *\n     * @param {String[]} evts An array of event names to define.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.defineEvents = function defineEvents(evts) {\n        for (var i = 0; i < evts.length; i += 1) {\n            this.defineEvent(evts[i]);\n        }\n        return this;\n    };\n\n    /**\n     * Removes a listener function from the specified event.\n     * When passed a regular expression as the event name, it will remove the listener from all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to remove the listener from.\n     * @param {Function} listener Method to remove from the event.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListener = function removeListener(evt, listener) {\n        var listeners = this.getListenersAsObject(evt);\n        var index;\n        var key;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                index = indexOfListener(listeners[key], listener);\n\n                if (index !== -1) {\n                    listeners[key].splice(index, 1);\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeListener\n     */\n    proto.off = alias('removeListener');\n\n    /**\n     * Adds listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\n     * You can also pass it a regular expression to add the array of listeners to all events that match it.\n     * Yeah, this function does quite a bit. That's probably a bad thing.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.addListeners = function addListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(false, evt, listeners);\n    };\n\n    /**\n     * Removes listeners in bulk using the manipulateListeners method.\n     * If you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be removed.\n     * You can also pass it a regular expression to remove the listeners from all events that match it.\n     *\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeListeners = function removeListeners(evt, listeners) {\n        // Pass through to manipulateListeners\n        return this.manipulateListeners(true, evt, listeners);\n    };\n\n    /**\n     * Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\n     * The first argument will determine if the listeners are removed (true) or added (false).\n     * If you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\n     * You can also pass it an event name and an array of listeners to be added/removed.\n     * You can also pass it a regular expression to manipulate the listeners of all events that match it.\n     *\n     * @param {Boolean} remove True if you want to remove listeners, false if you want to add.\n     * @param {String|Object|RegExp} evt An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.\n     * @param {Function[]} [listeners] An optional array of listener functions to add/remove.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.manipulateListeners = function manipulateListeners(remove, evt, listeners) {\n        var i;\n        var value;\n        var single = remove ? this.removeListener : this.addListener;\n        var multiple = remove ? this.removeListeners : this.addListeners;\n\n        // If evt is an object then pass each of its properties to this method\n        if (typeof evt === 'object' && !(evt instanceof RegExp)) {\n            for (i in evt) {\n                if (evt.hasOwnProperty(i) && (value = evt[i])) {\n                    // Pass the single listener straight through to the singular method\n                    if (typeof value === 'function') {\n                        single.call(this, i, value);\n                    }\n                    else {\n                        // Otherwise pass back to the multiple function\n                        multiple.call(this, i, value);\n                    }\n                }\n            }\n        }\n        else {\n            // So evt must be a string\n            // And listeners must be an array of listeners\n            // Loop over it and pass each one to the multiple method\n            i = listeners.length;\n            while (i--) {\n                single.call(this, evt, listeners[i]);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Removes all listeners from a specified event.\n     * If you do not specify an event then all listeners will be removed.\n     * That means every event will be emptied.\n     * You can also pass a regex to remove all events that match it.\n     *\n     * @param {String|RegExp} [evt] Optional name of the event to remove all listeners for. Will remove from every event if not passed.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.removeEvent = function removeEvent(evt) {\n        var type = typeof evt;\n        var events = this._getEvents();\n        var key;\n\n        // Remove different things depending on the state of evt\n        if (type === 'string') {\n            // Remove all listeners for the specified event\n            delete events[evt];\n        }\n        else if (evt instanceof RegExp) {\n            // Remove all events matching the regex.\n            for (key in events) {\n                if (events.hasOwnProperty(key) && evt.test(key)) {\n                    delete events[key];\n                }\n            }\n        }\n        else {\n            // Remove all listeners in all events\n            delete this._events;\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of removeEvent.\n     *\n     * Added to mirror the node API.\n     */\n    proto.removeAllListeners = alias('removeEvent');\n\n    /**\n     * Emits an event of your choice.\n     * When emitted, every listener attached to that event will be executed.\n     * If you pass the optional argument array then those arguments will be passed to every listener upon execution.\n     * Because it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\n     * So they will not arrive within the array on the other side, they will be separate.\n     * You can also pass a regular expression to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {Array} [args] Optional array of arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emitEvent = function emitEvent(evt, args) {\n        var listeners = this.getListenersAsObject(evt);\n        var listener;\n        var i;\n        var key;\n        var response;\n\n        for (key in listeners) {\n            if (listeners.hasOwnProperty(key)) {\n                i = listeners[key].length;\n\n                while (i--) {\n                    // If the listener returns true then it shall be removed from the event\n                    // The function is executed either with a basic call or an apply if there is an args array\n                    listener = listeners[key][i];\n\n                    if (listener.once === true) {\n                        this.removeListener(evt, listener.listener);\n                    }\n\n                    response = listener.listener.apply(this, args || []);\n\n                    if (response === this._getOnceReturnValue()) {\n                        this.removeListener(evt, listener.listener);\n                    }\n                }\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Alias of emitEvent\n     */\n    proto.trigger = alias('emitEvent');\n\n    /**\n     * Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\n     * As with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.\n     *\n     * @param {String|RegExp} evt Name of the event to emit and execute listeners for.\n     * @param {...*} Optional additional arguments to be passed to each listener.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.emit = function emit(evt) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return this.emitEvent(evt, args);\n    };\n\n    /**\n     * Sets the current value to check against when executing listeners. If a\n     * listeners return value matches the one set here then it will be removed\n     * after execution. This value defaults to true.\n     *\n     * @param {*} value The new value to check for when executing listeners.\n     * @return {Object} Current instance of EventEmitter for chaining.\n     */\n    proto.setOnceReturnValue = function setOnceReturnValue(value) {\n        this._onceReturnValue = value;\n        return this;\n    };\n\n    /**\n     * Fetches the current value to check against when executing listeners. If\n     * the listeners return value matches this one then it should be removed\n     * automatically. It will return true by default.\n     *\n     * @return {*|Boolean} The current value to check for or the default, true.\n     * @api private\n     */\n    proto._getOnceReturnValue = function _getOnceReturnValue() {\n        if (this.hasOwnProperty('_onceReturnValue')) {\n            return this._onceReturnValue;\n        }\n        else {\n            return true;\n        }\n    };\n\n    /**\n     * Fetches the events object and creates one if required.\n     *\n     * @return {Object} The events storage object.\n     * @api private\n     */\n    proto._getEvents = function _getEvents() {\n        return this._events || (this._events = {});\n    };\n\n    /**\n     * Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.\n     *\n     * @return {Function} Non conflicting EventEmitter class.\n     */\n    EventEmitter.noConflict = function noConflict() {\n        exports.EventEmitter = originalGlobalValue;\n        return EventEmitter;\n    };\n\n    // Expose the class either via AMD, CommonJS or the global object\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return EventEmitter;\n        });\n    }\n    else if (typeof module === 'object' && module.exports){\n        module.exports = EventEmitter;\n    }\n    else {\n        exports.EventEmitter = EventEmitter;\n    }\n}.call(this));\n","/*!\n * eventie v1.0.6\n * event binding helper\n *   eventie.bind( elem, 'click', myFn )\n *   eventie.unbind( elem, 'click', myFn )\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true */\n/*global define: false, module: false */\n\n( function( window ) {\n\n'use strict';\n\nvar docElem = document.documentElement;\n\nvar bind = function() {};\n\nfunction getIEEvent( obj ) {\n  var event = window.event;\n  // add event.target\n  event.target = event.target || event.srcElement || obj;\n  return event;\n}\n\nif ( docElem.addEventListener ) {\n  bind = function( obj, type, fn ) {\n    obj.addEventListener( type, fn, false );\n  };\n} else if ( docElem.attachEvent ) {\n  bind = function( obj, type, fn ) {\n    obj[ type + fn ] = fn.handleEvent ?\n      function() {\n        var event = getIEEvent( obj );\n        fn.handleEvent.call( fn, event );\n      } :\n      function() {\n        var event = getIEEvent( obj );\n        fn.call( obj, event );\n      };\n    obj.attachEvent( \"on\" + type, obj[ type + fn ] );\n  };\n}\n\nvar unbind = function() {};\n\nif ( docElem.removeEventListener ) {\n  unbind = function( obj, type, fn ) {\n    obj.removeEventListener( type, fn, false );\n  };\n} else if ( docElem.detachEvent ) {\n  unbind = function( obj, type, fn ) {\n    obj.detachEvent( \"on\" + type, obj[ type + fn ] );\n    try {\n      delete obj[ type + fn ];\n    } catch ( err ) {\n      // can't delete window object properties\n      obj[ type + fn ] = undefined;\n    }\n  };\n}\n\nvar eventie = {\n  bind: bind,\n  unbind: unbind\n};\n\n// ----- module definition ----- //\n\nif ( typeof define === 'function' && define.amd ) {\n  // AMD\n  define( eventie );\n} else if ( typeof exports === 'object' ) {\n  // CommonJS\n  module.exports = eventie;\n} else {\n  // browser global\n  window.eventie = eventie;\n}\n\n})( window );\n","/*!\n * getStyleProperty v1.0.4\n * original by kangax\n * http://perfectionkills.com/feature-testing-css-properties/\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true */\n/*global define: false, exports: false, module: false */\n\n( function( window ) {\n\n'use strict';\n\nvar prefixes = 'Webkit Moz ms Ms O'.split(' ');\nvar docElemStyle = document.documentElement.style;\n\nfunction getStyleProperty( propName ) {\n  if ( !propName ) {\n    return;\n  }\n\n  // test standard property first\n  if ( typeof docElemStyle[ propName ] === 'string' ) {\n    return propName;\n  }\n\n  // capitalize\n  propName = propName.charAt(0).toUpperCase() + propName.slice(1);\n\n  // test vendor specific properties\n  var prefixed;\n  for ( var i=0, len = prefixes.length; i < len; i++ ) {\n    prefixed = prefixes[i] + propName;\n    if ( typeof docElemStyle[ prefixed ] === 'string' ) {\n      return prefixed;\n    }\n  }\n}\n\n// transport\nif ( typeof define === 'function' && define.amd ) {\n  // AMD\n  define( function() {\n    return getStyleProperty;\n  });\n} else if ( typeof exports === 'object' ) {\n  // CommonJS for Component\n  module.exports = getStyleProperty;\n} else {\n  // browser global\n  window.getStyleProperty = getStyleProperty;\n}\n\n})( window );\n","/*!\n * getSize v1.2.2\n * measure size of elements\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n/*global define: false, exports: false, require: false, module: false, console: false */\n\n( function( window, undefined ) {\n\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') === -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console === 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0, len = measurements.length; i < len; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n\n\nfunction defineGetSize( getStyleProperty ) {\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar getStyle, boxSizingProp, isBoxSizeOuter;\n\n/**\n * setup vars and functions\n * do it on initial getSize(), rather than on script load\n * For Firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  var getComputedStyle = window.getComputedStyle;\n  getStyle = ( function() {\n    var getStyleFn = getComputedStyle ?\n      function( elem ) {\n        return getComputedStyle( elem, null );\n      } :\n      function( elem ) {\n        return elem.currentStyle;\n      };\n\n      return function getStyle( elem ) {\n        var style = getStyleFn( elem );\n        if ( !style ) {\n          logError( 'Style returned ' + style +\n            '. Are you running this code in a hidden iframe on Firefox? ' +\n            'See http://bit.ly/getsizebug1' );\n        }\n        return style;\n      };\n  })();\n\n  // -------------------------- box sizing -------------------------- //\n\n  boxSizingProp = getStyleProperty('boxSizing');\n\n  /**\n   * WebKit measures the outer-width on style.width on border-box elems\n   * IE & Firefox measures the inner-width\n   */\n  if ( boxSizingProp ) {\n    var div = document.createElement('div');\n    div.style.width = '200px';\n    div.style.padding = '1px 2px 3px 4px';\n    div.style.borderStyle = 'solid';\n    div.style.borderWidth = '1px 2px 3px 4px';\n    div.style[ boxSizingProp ] = 'border-box';\n\n    var body = document.body || document.documentElement;\n    body.appendChild( div );\n    var style = getStyle( div );\n\n    isBoxSizeOuter = getStyleSize( style.width ) === 200;\n    body.removeChild( div );\n  }\n\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem === 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem !== 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display === 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = !!( boxSizingProp &&\n    style[ boxSizingProp ] && style[ boxSizingProp ] === 'border-box' );\n\n  // get all measurements\n  for ( var i=0, len = measurements.length; i < len; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    value = mungeNonPixel( elem, value );\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\n// IE8 returns percent values, not pixels\n// taken from jQuery's curCSS\nfunction mungeNonPixel( elem, value ) {\n  // IE8 and has percent value\n  if ( window.getComputedStyle || value.indexOf('%') === -1 ) {\n    return value;\n  }\n  var style = elem.style;\n  // Remember the original values\n  var left = style.left;\n  var rs = elem.runtimeStyle;\n  var rsLeft = rs && rs.left;\n\n  // Put in the new values to get a computed value out\n  if ( rsLeft ) {\n    rs.left = elem.currentStyle.left;\n  }\n  style.left = value;\n  value = style.pixelLeft;\n\n  // Revert the changed values\n  style.left = left;\n  if ( rsLeft ) {\n    rs.left = rsLeft;\n  }\n\n  return value;\n}\n\nreturn getSize;\n\n}\n\n// transport\nif ( typeof define === 'function' && define.amd ) {\n  // AMD for RequireJS\n  define( [ 'get-style-property/get-style-property' ], defineGetSize );\n} else if ( typeof exports === 'object' ) {\n  // CommonJS for Component\n  module.exports = defineGetSize( require('desandro-get-style-property') );\n} else {\n  // browser global\n  window.getSize = defineGetSize( window.getStyleProperty );\n}\n\n})( window );\n","/*!\n * docReady v1.0.4\n * Cross browser DOMContentLoaded event emitter\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true*/\n/*global define: false, require: false, module: false */\n\n( function( window ) {\n\n'use strict';\n\nvar document = window.document;\n// collection of functions to be triggered on ready\nvar queue = [];\n\nfunction docReady( fn ) {\n  // throw out non-functions\n  if ( typeof fn !== 'function' ) {\n    return;\n  }\n\n  if ( docReady.isReady ) {\n    // ready now, hit it\n    fn();\n  } else {\n    // queue function when ready\n    queue.push( fn );\n  }\n}\n\ndocReady.isReady = false;\n\n// triggered on various doc ready events\nfunction onReady( event ) {\n  // bail if already triggered or IE8 document is not ready just yet\n  var isIE8NotReady = event.type === 'readystatechange' && document.readyState !== 'complete';\n  if ( docReady.isReady || isIE8NotReady ) {\n    return;\n  }\n\n  trigger();\n}\n\nfunction trigger() {\n  docReady.isReady = true;\n  // process queue\n  for ( var i=0, len = queue.length; i < len; i++ ) {\n    var fn = queue[i];\n    fn();\n  }\n}\n\nfunction defineDocReady( eventie ) {\n  // trigger ready if page is ready\n  if ( document.readyState === 'complete' ) {\n    trigger();\n  } else {\n    // listen for events\n    eventie.bind( document, 'DOMContentLoaded', onReady );\n    eventie.bind( document, 'readystatechange', onReady );\n    eventie.bind( window, 'load', onReady );\n  }\n\n  return docReady;\n}\n\n// transport\nif ( typeof define === 'function' && define.amd ) {\n  // AMD\n  define( [ 'eventie/eventie' ], defineDocReady );\n} else if ( typeof exports === 'object' ) {\n  module.exports = defineDocReady( require('eventie') );\n} else {\n  // browser global\n  window.docReady = defineDocReady( window.eventie );\n}\n\n})( window );\n","/**\n * matchesSelector v1.0.3\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n/*global define: false, module: false */\n\n( function( ElemProto ) {\n\n  'use strict';\n\n  var matchesMethod = ( function() {\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0, len = prefixes.length; i < len; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  // ----- match ----- //\n\n  function match( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  }\n\n  // ----- appendToFragment ----- //\n\n  function checkParent( elem ) {\n    // not needed if already has parent\n    if ( elem.parentNode ) {\n      return;\n    }\n    var fragment = document.createDocumentFragment();\n    fragment.appendChild( elem );\n  }\n\n  // ----- query ----- //\n\n  // fall back to using QSA\n  // thx @jonathantneal https://gist.github.com/3062955\n  function query( elem, selector ) {\n    // append to fragment if no parent\n    checkParent( elem );\n\n    // match elem with all selected elems of parent\n    var elems = elem.parentNode.querySelectorAll( selector );\n    for ( var i=0, len = elems.length; i < len; i++ ) {\n      // return true if match\n      if ( elems[i] === elem ) {\n        return true;\n      }\n    }\n    // otherwise return false\n    return false;\n  }\n\n  // ----- matchChild ----- //\n\n  function matchChild( elem, selector ) {\n    checkParent( elem );\n    return match( elem, selector );\n  }\n\n  // ----- matchesSelector ----- //\n\n  var matchesSelector;\n\n  if ( matchesMethod ) {\n    // IE9 supports matchesSelector, but doesn't work on orphaned elems\n    // check for that\n    var div = document.createElement('div');\n    var supportsOrphans = match( div, 'div' );\n    matchesSelector = supportsOrphans ? match : matchChild;\n  } else {\n    matchesSelector = query;\n  }\n\n  // transport\n  if ( typeof define === 'function' && define.amd ) {\n    // AMD\n    define( function() {\n      return matchesSelector;\n    });\n  } else if ( typeof exports === 'object' ) {\n    module.exports = matchesSelector;\n  }\n  else {\n    // browser global\n    window.matchesSelector = matchesSelector;\n  }\n\n})( Element.prototype );\n","/**\n * Fizzy UI utils v1.0.1\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false, require: false */\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'doc-ready/doc-ready',\n      'matches-selector/matches-selector'\n    ], function( docReady, matchesSelector ) {\n      return factory( window, docReady, matchesSelector );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('doc-ready'),\n      require('desandro-matches-selector')\n    );\n  } else {\n    // browser global\n    window.fizzyUIUtils = factory(\n      window,\n      window.docReady,\n      window.matchesSelector\n    );\n  }\n\n}( window, function factory( window, docReady, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- isArray ----- //\n  \nvar objToString = Object.prototype.toString;\nutils.isArray = function( obj ) {\n  return objToString.call( obj ) == '[object Array]';\n};\n\n// ----- makeArray ----- //\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  var ary = [];\n  if ( utils.isArray( obj ) ) {\n    // use object if already an array\n    ary = obj;\n  } else if ( obj && typeof obj.length == 'number' ) {\n    // convert nodeList to array\n    for ( var i=0, len = obj.length; i < len; i++ ) {\n      ary.push( obj[i] );\n    }\n  } else {\n    // array of single index\n    ary.push( obj );\n  }\n  return ary;\n};\n\n// ----- indexOf ----- //\n\n// index of helper cause IE8\nutils.indexOf = Array.prototype.indexOf ? function( ary, obj ) {\n    return ary.indexOf( obj );\n  } : function( ary, obj ) {\n    for ( var i=0, len = ary.length; i < len; i++ ) {\n      if ( ary[i] === obj ) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = utils.indexOf( ary, obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- isElement ----- //\n\n// http://stackoverflow.com/a/384380/182183\nutils.isElement = ( typeof HTMLElement == 'function' || typeof HTMLElement == 'object' ) ?\n  function isElementDOM2( obj ) {\n    return obj instanceof HTMLElement;\n  } :\n  function isElementQuirky( obj ) {\n    return obj && typeof obj == 'object' &&\n      obj.nodeType == 1 && typeof obj.nodeName == 'string';\n  };\n\n// ----- setText ----- //\n\nutils.setText = ( function() {\n  var setTextProperty;\n  function setText( elem, text ) {\n    // only check setTextProperty once\n    setTextProperty = setTextProperty || ( document.documentElement.textContent !== undefined ? 'textContent' : 'innerText' );\n    elem[ setTextProperty ] = text;\n  }\n  return setText;\n})();\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  for ( var i=0, len = elems.length; i < len; i++ ) {\n    var elem = elems[i];\n    // check that elem is an actual element\n    if ( !utils.isElement( elem ) ) {\n      continue;\n    }\n    // filter & find items if we have a selector\n    if ( selector ) {\n      // filter siblings\n      if ( matchesSelector( elem, selector ) ) {\n        ffElems.push( elem );\n      }\n      // find children\n      var childElems = elem.querySelectorAll( selector );\n      // concat childElems to filterFound array\n      for ( var j=0, jLen = childElems.length; j < jLen; j++ ) {\n        ffElems.push( childElems[j] );\n      }\n    } else {\n      ffElems.push( elem );\n    }\n  }\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    if ( timeout ) {\n      clearTimeout( timeout );\n    }\n    var args = arguments;\n\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold || 100 );\n  };\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-option attribute\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var elems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var dataAttr = 'data-' + dashedNamespace + '-options';\n\n    for ( var i=0, len = elems.length; i < len; i++ ) {\n      var elem = elems[i];\n      var attr = elem.getAttribute( dataAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' +\n            elem.nodeName.toLowerCase() + ( elem.id ? '#' + elem.id : '' ) + ': ' +\n            error );\n        }\n        continue;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('layoutname')\n      var jQuery = window.jQuery;\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    }\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n","( function( window, factory ) {\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'get-size/get-size'\n    ], function( getSize ) {\n      return factory( window, getSize );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Cell = factory(\n      window,\n      window.getSize\n    );\n  }\n\n}( window, function factory( window, getSize ) {\n\n'use strict';\n\nfunction Cell( elem, parent ) {\n  this.element = elem;\n  this.parent = parent;\n\n  this.create();\n}\n\nvar isIE8 = 'attachEvent' in window;\n\nCell.prototype.create = function() {\n  this.element.style.position = 'absolute';\n  // IE8 prevent child from changing focus http://stackoverflow.com/a/17525223/182183\n  if ( isIE8 ) {\n    this.element.setAttribute( 'unselectable', 'on' );\n  }\n  this.x = 0;\n  this.shift = 0;\n};\n\nCell.prototype.destroy = function() {\n  // reset style\n  this.element.style.position = '';\n  var side = this.parent.originSide;\n  this.element.style[ side ] = '';\n};\n\nCell.prototype.getSize = function() {\n  this.size = getSize( this.element );\n};\n\nCell.prototype.setPosition = function( x ) {\n  this.x = x;\n  this.setDefaultTarget();\n  this.renderPosition( x );\n};\n\nCell.prototype.setDefaultTarget = function() {\n  var marginProperty = this.parent.originSide == 'left' ? 'marginLeft' : 'marginRight';\n  this.target = this.x + this.size[ marginProperty ] +\n    this.size.width * this.parent.cellAlign;\n};\n\nCell.prototype.renderPosition = function( x ) {\n  // render position of cell with in slider\n  var side = this.parent.originSide;\n  this.element.style[ side ] = this.parent.getPositionValue( x );\n};\n\n/**\n * @param {Integer} factor - 0, 1, or -1\n**/\nCell.prototype.wrapShift = function( shift ) {\n  this.shift = shift;\n  this.renderPosition( this.x + this.parent.slideableWidth * shift );\n};\n\nCell.prototype.remove = function() {\n  this.element.parentNode.removeChild( this.element );\n};\n\nreturn Cell;\n\n}));\n","( function( window, factory ) {\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'get-style-property/get-style-property',\n      'fizzy-ui-utils/utils'\n    ], function( getStyleProperty, utils ) {\n      return factory( window, getStyleProperty, utils );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-get-style-property'),\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.animatePrototype = factory(\n      window,\n      window.getStyleProperty,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, getStyleProperty, utils ) {\n\n'use strict';\n\n// -------------------------- requestAnimationFrame -------------------------- //\n\n// https://gist.github.com/1866474\n\nvar lastTime = 0;\nvar prefixes = 'webkit moz ms o'.split(' ');\n// get unprefixed rAF and cAF, if present\nvar requestAnimationFrame = window.requestAnimationFrame;\nvar cancelAnimationFrame = window.cancelAnimationFrame;\n// loop through vendor prefixes and get prefixed rAF and cAF\nvar prefix;\nfor( var i = 0; i < prefixes.length; i++ ) {\n  if ( requestAnimationFrame && cancelAnimationFrame ) {\n    break;\n  }\n  prefix = prefixes[i];\n  requestAnimationFrame = requestAnimationFrame || window[ prefix + 'RequestAnimationFrame' ];\n  cancelAnimationFrame  = cancelAnimationFrame  || window[ prefix + 'CancelAnimationFrame' ] ||\n                            window[ prefix + 'CancelRequestAnimationFrame' ];\n}\n\n// fallback to setTimeout and clearTimeout if either request/cancel is not supported\nif ( !requestAnimationFrame || !cancelAnimationFrame )  {\n  requestAnimationFrame = function( callback ) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\n    var id = window.setTimeout( function() {\n      callback( currTime + timeToCall );\n    }, timeToCall );\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n\n  cancelAnimationFrame = function( id ) {\n    window.clearTimeout( id );\n  };\n}\n\n// -------------------------- animate -------------------------- //\n\nvar proto = {};\n\nproto.startAnimation = function() {\n  if ( this.isAnimating ) {\n    return;\n  }\n\n  this.isAnimating = true;\n  this.restingFrames = 0;\n  this.animate();\n};\n\nproto.animate = function() {\n  this.applyDragForce();\n  this.applySelectedAttraction();\n\n  var previousX = this.x;\n\n  this.integratePhysics();\n  this.positionSlider();\n  this.settle( previousX );\n  // animate next frame\n  if ( this.isAnimating ) {\n    var _this = this;\n    requestAnimationFrame( function animateFrame() {\n      _this.animate();\n    });\n  }\n\n  /** /\n  // log animation frame rate\n  var now = new Date();\n  if ( this.then ) {\n    console.log( ~~( 1000 / (now-this.then)) + 'fps' )\n  }\n  this.then = now;\n  /**/\n};\n\n\nvar transformProperty = getStyleProperty('transform');\nvar is3d = !!getStyleProperty('perspective');\n\nproto.positionSlider = function() {\n  var x = this.x;\n  // wrap position around\n  if ( this.options.wrapAround && this.cells.length > 1 ) {\n    x = utils.modulo( x, this.slideableWidth );\n    x = x - this.slideableWidth;\n    this.shiftWrapCells( x );\n  }\n\n  x = x + this.cursorPosition;\n\n  // reverse if right-to-left and using transform\n  x = this.options.rightToLeft && transformProperty ? -x : x;\n\n  var value = this.getPositionValue( x );\n\n  if ( transformProperty ) {\n    // use 3D tranforms for hardware acceleration on iOS\n    // but use 2D when settled, for better font-rendering\n    this.slider.style[ transformProperty ] = is3d && this.isAnimating ?\n      'translate3d(' + value + ',0,0)' : 'translateX(' + value + ')';\n  } else {\n    this.slider.style[ this.originSide ] = value;\n  }\n};\n\nproto.positionSliderAtSelected = function() {\n  if ( !this.cells.length ) {\n    return;\n  }\n  var selectedCell = this.cells[ this.selectedIndex ];\n  this.x = -selectedCell.target;\n  this.positionSlider();\n};\n\nproto.getPositionValue = function( position ) {\n  if ( this.options.percentPosition ) {\n    // percent position, round to 2 digits, like 12.34%\n    return ( Math.round( ( position / this.size.innerWidth ) * 10000 ) * 0.01 )+ '%';\n  } else {\n    // pixel positioning\n    return Math.round( position ) + 'px';\n  }\n};\n\nproto.settle = function( previousX ) {\n  // keep track of frames where x hasn't moved\n  if ( !this.isPointerDown && Math.round( this.x * 100 ) == Math.round( previousX * 100 ) ) {\n    this.restingFrames++;\n  }\n  // stop animating if resting for 3 or more frames\n  if ( this.restingFrames > 2 ) {\n    this.isAnimating = false;\n    delete this.isFreeScrolling;\n    // render position with translateX when settled\n    if ( is3d ) {\n      this.positionSlider();\n    }\n    this.dispatchEvent('settle');\n  }\n};\n\nproto.shiftWrapCells = function( x ) {\n  // shift before cells\n  var beforeGap = this.cursorPosition + x;\n  this._shiftCells( this.beforeShiftCells, beforeGap, -1 );\n  // shift after cells\n  var afterGap = this.size.innerWidth - ( x + this.slideableWidth + this.cursorPosition );\n  this._shiftCells( this.afterShiftCells, afterGap, 1 );\n};\n\nproto._shiftCells = function( cells, gap, shift ) {\n  for ( var i=0, len = cells.length; i < len; i++ ) {\n    var cell = cells[i];\n    var cellShift = gap > 0 ? shift : 0;\n    cell.wrapShift( cellShift );\n    gap -= cell.size.outerWidth;\n  }\n};\n\nproto._unshiftCells = function( cells ) {\n  if ( !cells || !cells.length ) {\n    return;\n  }\n  for ( var i=0, len = cells.length; i < len; i++ ) {\n    cells[i].wrapShift( 0 );\n  }\n};\n\n// -------------------------- physics -------------------------- //\n\nproto.integratePhysics = function() {\n  this.velocity += this.accel;\n  this.x += this.velocity;\n  this.velocity *= this.getFrictionFactor();\n  // reset acceleration\n  this.accel = 0;\n};\n\nproto.applyForce = function( force ) {\n  this.accel += force;\n};\n\nproto.getFrictionFactor = function() {\n  return 1 - this.options[ this.isFreeScrolling ? 'freeScrollFriction' : 'friction' ];\n};\n\n\nproto.getRestingPosition = function() {\n  // my thanks to Steven Wittens, who simplified this math greatly\n  return this.x + this.velocity / ( 1 - this.getFrictionFactor() );\n};\n\nproto.applyDragForce = function() {\n  if ( !this.isPointerDown ) {\n    return;\n  }\n  // change the position to drag position by applying force\n  var dragVelocity = this.dragX - this.x;\n  var dragForce = dragVelocity - this.velocity;\n  this.applyForce( dragForce );\n};\n\nproto.applySelectedAttraction = function() {\n  // do not attract if pointer down or no cells\n  var len = this.cells.length;\n  if ( this.isPointerDown || this.isFreeScrolling || !len ) {\n    return;\n  }\n  var cell = this.cells[ this.selectedIndex ];\n  var wrap = this.options.wrapAround && len > 1 ?\n    this.slideableWidth * Math.floor( this.selectedIndex / len ) : 0;\n  var distance = ( cell.target + wrap ) * -1 - this.x;\n  var force = distance * this.options.selectedAttraction;\n  this.applyForce( force );\n};\n\nreturn proto;\n\n}));\n","/**\n * Flickity main\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'classie/classie',\n      'eventEmitter/EventEmitter',\n      'eventie/eventie',\n      'get-size/get-size',\n      'fizzy-ui-utils/utils',\n      './cell',\n      './animate'\n    ], function( classie, EventEmitter, eventie, getSize, utils, Cell, animatePrototype ) {\n      return factory( window, classie, EventEmitter, eventie, getSize, utils, Cell, animatePrototype );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-classie'),\n      require('wolfy87-eventemitter'),\n      require('eventie'),\n      require('get-size'),\n      require('fizzy-ui-utils'),\n      require('./cell'),\n      require('./animate')\n    );\n  } else {\n    // browser global\n    var _Flickity = window.Flickity;\n\n    window.Flickity = factory(\n      window,\n      window.classie,\n      window.EventEmitter,\n      window.eventie,\n      window.getSize,\n      window.fizzyUIUtils,\n      _Flickity.Cell,\n      _Flickity.animatePrototype\n    );\n  }\n\n}( window, function factory( window, classie, EventEmitter, eventie, getSize,\n  utils, Cell, animatePrototype ) {\n\n'use strict';\n\n// vars\nvar jQuery = window.jQuery;\nvar getComputedStyle = window.getComputedStyle;\nvar console = window.console;\n\nfunction moveElements( elems, toElem ) {\n  elems = utils.makeArray( elems );\n  while ( elems.length ) {\n    toElem.appendChild( elems.shift() );\n  }\n}\n\n// -------------------------- Flickity -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Flickity intances\nvar instances = {};\n\nfunction Flickity( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for Flickity: ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // kick things off\n  this._create();\n}\n\nFlickity.defaults = {\n  accessibility: true,\n  cellAlign: 'center',\n  // cellSelector: undefined,\n  // contain: false,\n  freeScrollFriction: 0.075, // friction when free-scrolling\n  friction: 0.28, // friction when selecting\n  // initialIndex: 0,\n  percentPosition: true,\n  resize: true,\n  selectedAttraction: 0.025,\n  setGallerySize: true\n  // watchCSS: false,\n  // wrapAround: false\n};\n\n// hash of methods triggered on _create()\nFlickity.createMethods = [];\n\n// inherit EventEmitter\nutils.extend( Flickity.prototype, EventEmitter.prototype );\n\nFlickity.prototype._create = function() {\n  // add id for Flickity.data\n  var id = this.guid = ++GUID;\n  this.element.flickityGUID = id; // expando\n  instances[ id ] = this; // associate via id\n  // initial properties\n  this.selectedIndex = 0;\n  // how many frames slider has been in same position\n  this.restingFrames = 0;\n  // initial physics properties\n  this.x = 0;\n  this.velocity = 0;\n  this.accel = 0;\n  this.originSide = this.options.rightToLeft ? 'right' : 'left';\n  // create viewport & slider\n  this.viewport = document.createElement('div');\n  this.viewport.className = 'flickity-viewport';\n  Flickity.setUnselectable( this.viewport );\n  this._createSlider();\n\n  if ( this.options.resize || this.options.watchCSS ) {\n    eventie.bind( window, 'resize', this );\n    this.isResizeBound = true;\n  }\n\n  for ( var i=0, len = Flickity.createMethods.length; i < len; i++ ) {\n    var method = Flickity.createMethods[i];\n    this[ method ]();\n  }\n\n  if ( this.options.watchCSS ) {\n    this.watchCSS();\n  } else {\n    this.activate();\n  }\n\n};\n\n/**\n * set options\n * @param {Object} opts\n */\nFlickity.prototype.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\nFlickity.prototype.activate = function() {\n  if ( this.isActive ) {\n    return;\n  }\n  this.isActive = true;\n  classie.add( this.element, 'flickity-enabled' );\n  if ( this.options.rightToLeft ) {\n    classie.add( this.element, 'flickity-rtl' );\n  }\n\n  this.getSize();\n  // move initial cell elements so they can be loaded as cells\n  var cellElems = this._filterFindCellElements( this.element.children );\n  moveElements( cellElems, this.slider );\n  this.viewport.appendChild( this.slider );\n  this.element.appendChild( this.viewport );\n  // get cells from children\n  this.reloadCells();\n\n  if ( this.options.accessibility ) {\n    // allow element to focusable\n    this.element.tabIndex = 0;\n    // listen for key presses\n    eventie.bind( this.element, 'keydown', this );\n  }\n\n  this.emit('activate');\n\n  var index;\n  var initialIndex = this.options.initialIndex;\n  if ( this.isInitActivated ) {\n    index = this.selectedIndex;\n  } else if ( initialIndex !== undefined ) {\n    index = this.cells[ initialIndex ] ? initialIndex : 0;\n  } else {\n    index = 0;\n  }\n  // select instantly\n  this.select( index, false, true );\n  // flag for initial activation, for using initialIndex\n  this.isInitActivated = true;\n};\n\n// slider positions the cells\nFlickity.prototype._createSlider = function() {\n  // slider element does all the positioning\n  var slider = document.createElement('div');\n  slider.className = 'flickity-slider';\n  slider.style[ this.originSide ] = 0;\n  this.slider = slider;\n};\n\nFlickity.prototype._filterFindCellElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.cellSelector );\n};\n\n// goes through all children\nFlickity.prototype.reloadCells = function() {\n  // collection of item elements\n  this.cells = this._makeCells( this.slider.children );\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n};\n\n/**\n * turn elements into Flickity.Cells\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Flickity Cells\n */\nFlickity.prototype._makeCells = function( elems ) {\n  var cellElems = this._filterFindCellElements( elems );\n\n  // create new Flickity for collection\n  var cells = [];\n  for ( var i=0, len = cellElems.length; i < len; i++ ) {\n    var elem = cellElems[i];\n    var cell = new Cell( elem, this );\n    cells.push( cell );\n  }\n\n  return cells;\n};\n\nFlickity.prototype.getLastCell = function() {\n  return this.cells[ this.cells.length - 1 ];\n};\n\n// positions all cells\nFlickity.prototype.positionCells = function() {\n  // size all cells\n  this._sizeCells( this.cells );\n  // position all cells\n  this._positionCells( 0 );\n};\n\n/**\n * position certain cells\n * @param {Integer} index - which cell to start with\n */\nFlickity.prototype._positionCells = function( index ) {\n  index = index || 0;\n  // also measure maxCellHeight\n  // start 0 if positioning all cells\n  this.maxCellHeight = index ? this.maxCellHeight || 0 : 0;\n  var cellX = 0;\n  // get cellX\n  if ( index > 0 ) {\n    var startCell = this.cells[ index - 1 ];\n    cellX = startCell.x + startCell.size.outerWidth;\n  }\n  var cell;\n  for ( var len = this.cells.length, i=index; i < len; i++ ) {\n    cell = this.cells[i];\n    cell.setPosition( cellX );\n    cellX += cell.size.outerWidth;\n    this.maxCellHeight = Math.max( cell.size.outerHeight, this.maxCellHeight );\n  }\n  // keep track of cellX for wrap-around\n  this.slideableWidth = cellX;\n  // contain cell target\n  this._containCells();\n};\n\n/**\n * cell.getSize() on multiple cells\n * @param {Array} cells\n */\nFlickity.prototype._sizeCells = function( cells ) {\n  for ( var i=0, len = cells.length; i < len; i++ ) {\n    var cell = cells[i];\n    cell.getSize();\n  }\n};\n\n// alias _init for jQuery plugin .flickity()\nFlickity.prototype._init =\nFlickity.prototype.reposition = function() {\n  this.positionCells();\n  this.positionSliderAtSelected();\n};\n\nFlickity.prototype.getSize = function() {\n  this.size = getSize( this.element );\n  this.setCellAlign();\n  this.cursorPosition = this.size.innerWidth * this.cellAlign;\n};\n\nvar cellAlignShorthands = {\n  // cell align, then based on origin side\n  center: {\n    left: 0.5,\n    right: 0.5\n  },\n  left: {\n    left: 0,\n    right: 1\n  },\n  right: {\n    right: 0,\n    left: 1\n  }\n};\n\nFlickity.prototype.setCellAlign = function() {\n  var shorthand = cellAlignShorthands[ this.options.cellAlign ];\n  this.cellAlign = shorthand ? shorthand[ this.originSide ] : this.options.cellAlign;\n};\n\nFlickity.prototype.setGallerySize = function() {\n  if ( this.options.setGallerySize ) {\n    this.viewport.style.height = this.maxCellHeight + 'px';\n  }\n};\n\nFlickity.prototype._getWrapShiftCells = function() {\n  // only for wrap-around\n  if ( !this.options.wrapAround ) {\n    return;\n  }\n  // unshift previous cells\n  this._unshiftCells( this.beforeShiftCells );\n  this._unshiftCells( this.afterShiftCells );\n  // get before cells\n  // initial gap\n  var gapX = this.cursorPosition;\n  var cellIndex = this.cells.length - 1;\n  this.beforeShiftCells = this._getGapCells( gapX, cellIndex, -1 );\n  // get after cells\n  // ending gap between last cell and end of gallery viewport\n  gapX = this.size.innerWidth - this.cursorPosition;\n  // start cloning at first cell, working forwards\n  this.afterShiftCells = this._getGapCells( gapX, 0, 1 );\n};\n\nFlickity.prototype._getGapCells = function( gapX, cellIndex, increment ) {\n  // keep adding cells until the cover the initial gap\n  var cells = [];\n  while ( gapX > 0 ) {\n    var cell = this.cells[ cellIndex ];\n    if ( !cell ) {\n      break;\n    }\n    cells.push( cell );\n    cellIndex += increment;\n    gapX -= cell.size.outerWidth;\n  }\n  return cells;\n};\n\n// ----- contain ----- //\n\n// contain cell targets so no excess sliding\nFlickity.prototype._containCells = function() {\n  if ( !this.options.contain || this.options.wrapAround || !this.cells.length ) {\n    return;\n  }\n  var startMargin = this.options.rightToLeft ? 'marginRight' : 'marginLeft';\n  var endMargin = this.options.rightToLeft ? 'marginLeft' : 'marginRight';\n  var firstCellStartMargin = this.cells[0].size[ startMargin ];\n  var lastCell = this.getLastCell();\n  var contentWidth = this.slideableWidth - lastCell.size[ endMargin ];\n  var endLimit = contentWidth - this.size.innerWidth * ( 1 - this.cellAlign );\n  // content is less than gallery size\n  var isContentSmaller = contentWidth < this.size.innerWidth;\n  // contain each cell target\n  for ( var i=0, len = this.cells.length; i < len; i++ ) {\n    var cell = this.cells[i];\n    // reset default target\n    cell.setDefaultTarget();\n    if ( isContentSmaller ) {\n      // all cells fit inside gallery\n      cell.target = contentWidth * this.cellAlign;\n    } else {\n      // contain to bounds\n      cell.target = Math.max( cell.target, this.cursorPosition + firstCellStartMargin );\n      cell.target = Math.min( cell.target, endLimit );\n    }\n  }\n};\n\n// -----  ----- //\n\n/**\n * emits events via eventEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nFlickity.prototype.dispatchEvent = function( type, event, args ) {\n  var emitArgs = [ event ].concat( args );\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery && this.$element ) {\n    if ( event ) {\n      // create jQuery event\n      var $event = jQuery.Event( event );\n      $event.type = type;\n      this.$element.trigger( $event, args );\n    } else {\n      // just trigger with type if no event available\n      this.$element.trigger( type, args );\n    }\n  }\n};\n\n// -------------------------- select -------------------------- //\n\n/**\n * @param {Integer} index - index of the cell\n * @param {Boolean} isWrap - will wrap-around to last/first if at the end\n * @param {Boolean} isInstant - will immediately set position at selected cell\n */\nFlickity.prototype.select = function( index, isWrap, isInstant ) {\n  if ( !this.isActive ) {\n    return;\n  }\n  index = parseInt( index, 10 );\n  // wrap position so slider is within normal area\n  var len = this.cells.length;\n  if ( this.options.wrapAround && len > 1 ) {\n    if ( index < 0 ) {\n      this.x -= this.slideableWidth;\n    } else if ( index >= len ) {\n      this.x += this.slideableWidth;\n    }\n  }\n\n  if ( this.options.wrapAround || isWrap ) {\n    index = utils.modulo( index, len );\n  }\n  // bail if invalid index\n  if ( !this.cells[ index ] ) {\n    return;\n  }\n  this.selectedIndex = index;\n  this.setSelectedCell();\n  if ( isInstant ) {\n    this.positionSliderAtSelected();\n  } else {\n    this.startAnimation();\n  }\n  this.dispatchEvent('cellSelect');\n};\n\nFlickity.prototype.previous = function( isWrap ) {\n  this.select( this.selectedIndex - 1, isWrap );\n};\n\nFlickity.prototype.next = function( isWrap ) {\n  this.select( this.selectedIndex + 1, isWrap );\n};\n\nFlickity.prototype.setSelectedCell = function() {\n  this._removeSelectedCellClass();\n  this.selectedCell = this.cells[ this.selectedIndex ];\n  this.selectedElement = this.selectedCell.element;\n  classie.add( this.selectedElement, 'is-selected' );\n};\n\nFlickity.prototype._removeSelectedCellClass = function() {\n  if ( this.selectedCell ) {\n    classie.remove( this.selectedCell.element, 'is-selected' );\n  }\n};\n\n// -------------------------- get cells -------------------------- //\n\n/**\n * get Flickity.Cell, given an Element\n * @param {Element} elem\n * @returns {Flickity.Cell} item\n */\nFlickity.prototype.getCell = function( elem ) {\n  // loop through cells to get the one that matches\n  for ( var i=0, len = this.cells.length; i < len; i++ ) {\n    var cell = this.cells[i];\n    if ( cell.element == elem ) {\n      return cell;\n    }\n  }\n};\n\n/**\n * get collection of Flickity.Cells, given Elements\n * @param {Element, Array, NodeList} elems\n * @returns {Array} cells - Flickity.Cells\n */\nFlickity.prototype.getCells = function( elems ) {\n  elems = utils.makeArray( elems );\n  var cells = [];\n  for ( var i=0, len = elems.length; i < len; i++ ) {\n    var elem = elems[i];\n    var cell = this.getCell( elem );\n    if ( cell ) {\n      cells.push( cell );\n    }\n  }\n  return cells;\n};\n\n/**\n * get cell elements\n * @returns {Array} cellElems\n */\nFlickity.prototype.getCellElements = function() {\n  var cellElems = [];\n  for ( var i=0, len = this.cells.length; i < len; i++ ) {\n    cellElems.push( this.cells[i].element );\n  }\n  return cellElems;\n};\n\n/**\n * get parent cell from an element\n * @param {Element} elem\n * @returns {Flickit.Cell} cell\n */\nFlickity.prototype.getParentCell = function( elem ) {\n  // first check if elem is cell\n  var cell = this.getCell( elem );\n  if ( cell ) {\n    return cell;\n  }\n  // try to get parent cell elem\n  elem = utils.getParent( elem, '.flickity-slider > *' );\n  return this.getCell( elem );\n};\n\n/**\n * get cells adjacent to a cell\n * @param {Integer} adjCount - number of adjacent cells\n * @param {Integer} index - index of cell to start\n * @returns {Array} cells - array of Flickity.Cells\n */\nFlickity.prototype.getAdjacentCellElements = function( adjCount, index ) {\n  if ( !adjCount ) {\n    return [ this.selectedElement ];\n  }\n  index = index === undefined ? this.selectedIndex : index;\n\n  var len = this.cells.length;\n  if ( 1 + ( adjCount * 2 ) >= len ) {\n    return this.getCellElements();\n  }\n\n  var cellElems = [];\n  for ( var i = index - adjCount; i <= index + adjCount ; i++ ) {\n    var cellIndex = this.options.wrapAround ? utils.modulo( i, len ) : i;\n    var cell = this.cells[ cellIndex ];\n    if ( cell ) {\n      cellElems.push( cell.element );\n    }\n  }\n  return cellElems;\n};\n\n// -------------------------- events -------------------------- //\n\nFlickity.prototype.uiChange = function() {\n  this.emit('uiChange');\n};\n\nFlickity.prototype.childUIPointerDown = function( event ) {\n  this.emitEvent( 'childUIPointerDown', [ event ] );\n};\n\n// ----- resize ----- //\n\nFlickity.prototype.onresize = function() {\n  this.watchCSS();\n  this.resize();\n};\n\nutils.debounceMethod( Flickity, 'onresize', 150 );\n\nFlickity.prototype.resize = function() {\n  if ( !this.isActive ) {\n    return;\n  }\n  this.getSize();\n  // wrap values\n  if ( this.options.wrapAround ) {\n    this.x = utils.modulo( this.x, this.slideableWidth );\n  }\n  this.positionCells();\n  this._getWrapShiftCells();\n  this.setGallerySize();\n  this.positionSliderAtSelected();\n};\n\nvar supportsConditionalCSS = Flickity.supportsConditionalCSS = ( function() {\n  var supports;\n  return function checkSupport() {\n    if ( supports !== undefined ) {\n      return supports;\n    }\n    if ( !getComputedStyle ) {\n      supports = false;\n      return;\n    }\n    // style body's :after and check that\n    var style = document.createElement('style');\n    var cssText = document.createTextNode('body:after { content: \"foo\"; display: none; }');\n    style.appendChild( cssText );\n    document.head.appendChild( style );\n    var afterContent = getComputedStyle( document.body, ':after' ).content;\n    // check if able to get :after content\n    supports = afterContent.indexOf('foo') != -1;\n    document.head.removeChild( style );\n    return supports;\n  };\n})();\n\n// watches the :after property, activates/deactivates\nFlickity.prototype.watchCSS = function() {\n  var watchOption = this.options.watchCSS;\n  if ( !watchOption ) {\n    return;\n  }\n  var supports = supportsConditionalCSS();\n  if ( !supports ) {\n    // activate if watch option is fallbackOn\n    var method = watchOption == 'fallbackOn' ? 'activate' : 'deactivate';\n    this[ method ]();\n    return;\n  }\n\n  var afterContent = getComputedStyle( this.element, ':after' ).content;\n  // activate if :after { content: 'flickity' }\n  if ( afterContent.indexOf('flickity') != -1 ) {\n    this.activate();\n  } else {\n    this.deactivate();\n  }\n};\n\n// ----- keydown ----- //\n\n// go previous/next if left/right keys pressed\nFlickity.prototype.onkeydown = function( event ) {\n  // only work if element is in focus\n  if ( !this.options.accessibility ||\n    ( document.activeElement && document.activeElement != this.element ) ) {\n    return;\n  }\n\n  if ( event.keyCode == 37 ) {\n    // go left\n    var leftMethod = this.options.rightToLeft ? 'next' : 'previous';\n    this.uiChange();\n    this[ leftMethod ]();\n  } else if ( event.keyCode == 39 ) {\n    // go right\n    var rightMethod = this.options.rightToLeft ? 'previous' : 'next';\n    this.uiChange();\n    this[ rightMethod ]();\n  }\n};\n\n// -------------------------- destroy -------------------------- //\n\n// deactivate all Flickity functionality, but keep stuff available\nFlickity.prototype.deactivate = function() {\n  if ( !this.isActive ) {\n    return;\n  }\n  classie.remove( this.element, 'flickity-enabled' );\n  classie.remove( this.element, 'flickity-rtl' );\n  // destroy cells\n  for ( var i=0, len = this.cells.length; i < len; i++ ) {\n    var cell = this.cells[i];\n    cell.destroy();\n  }\n  this._removeSelectedCellClass();\n  this.element.removeChild( this.viewport );\n  // move child elements back into element\n  moveElements( this.slider.children, this.element );\n  if ( this.options.accessibility ) {\n    this.element.removeAttribute('tabIndex');\n    eventie.unbind( this.element, 'keydown', this );\n  }\n  // set flags\n  this.isActive = false;\n  this.emit('deactivate');\n};\n\nFlickity.prototype.destroy = function() {\n  this.deactivate();\n  if ( this.isResizeBound ) {\n    eventie.unbind( window, 'resize', this );\n  }\n  this.emit('destroy');\n  if ( jQuery && this.$element ) {\n    jQuery.removeData( this.element, 'flickity' );\n  }\n  delete this.element.flickityGUID;\n  delete instances[ this.guid ];\n};\n\n// -------------------------- prototype -------------------------- //\n\nutils.extend( Flickity.prototype, animatePrototype );\n\n// -------------------------- extras -------------------------- //\n\n// quick check for IE8\nvar isIE8 = 'attachEvent' in window;\n\nFlickity.setUnselectable = function( elem ) {\n  if ( !isIE8 ) {\n    return;\n  }\n  // IE8 prevent child from changing focus http://stackoverflow.com/a/17525223/182183\n  elem.setAttribute( 'unselectable', 'on' );\n};\n\n/**\n * get Flickity instance from element\n * @param {Element} elem\n * @returns {Flickity}\n */\nFlickity.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.flickityGUID;\n  return id && instances[ id ];\n};\n\nutils.htmlInit( Flickity, 'flickity' );\n\nif ( jQuery && jQuery.bridget ) {\n  jQuery.bridget( 'flickity', Flickity );\n}\n\nFlickity.Cell = Cell;\n\nreturn Flickity;\n\n}));\n","/*!\n * Unipointer v1.1.0\n * base class for doing one thing with pointer event\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n/*global define: false, module: false, require: false */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'eventEmitter/EventEmitter',\n      'eventie/eventie'\n    ], function( EventEmitter, eventie ) {\n      return factory( window, EventEmitter, eventie );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('wolfy87-eventemitter'),\n      require('eventie')\n    );\n  } else {\n    // browser global\n    window.Unipointer = factory(\n      window,\n      window.EventEmitter,\n      window.eventie\n    );\n  }\n\n}( window, function factory( window, EventEmitter, eventie ) {\n\n'use strict';\n\nfunction noop() {}\n\nfunction Unipointer() {}\n\n// inherit EventEmitter\nUnipointer.prototype = new EventEmitter();\n\nUnipointer.prototype.bindStartEvent = function( elem ) {\n  this._bindStartEvent( elem, true );\n};\n\nUnipointer.prototype.unbindStartEvent = function( elem ) {\n  this._bindStartEvent( elem, false );\n};\n\n/**\n * works as unbinder, as you can ._bindStart( false ) to unbind\n * @param {Boolean} isBind - will unbind if falsey\n */\nUnipointer.prototype._bindStartEvent = function( elem, isBind ) {\n  // munge isBind, default to true\n  isBind = isBind === undefined ? true : !!isBind;\n  var bindMethod = isBind ? 'bind' : 'unbind';\n\n  if ( window.navigator.pointerEnabled ) {\n    // W3C Pointer Events, IE11. See https://coderwall.com/p/mfreca\n    eventie[ bindMethod ]( elem, 'pointerdown', this );\n  } else if ( window.navigator.msPointerEnabled ) {\n    // IE10 Pointer Events\n    eventie[ bindMethod ]( elem, 'MSPointerDown', this );\n  } else {\n    // listen for both, for devices like Chrome Pixel\n    eventie[ bindMethod ]( elem, 'mousedown', this );\n    eventie[ bindMethod ]( elem, 'touchstart', this );\n  }\n};\n\n// trigger handler methods for events\nUnipointer.prototype.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// returns the touch that we're keeping track of\nUnipointer.prototype.getTouch = function( touches ) {\n  for ( var i=0, len = touches.length; i < len; i++ ) {\n    var touch = touches[i];\n    if ( touch.identifier == this.pointerIdentifier ) {\n      return touch;\n    }\n  }\n};\n\n// ----- start event ----- //\n\nUnipointer.prototype.onmousedown = function( event ) {\n  // dismiss clicks from right or middle buttons\n  var button = event.button;\n  if ( button && ( button !== 0 && button !== 1 ) ) {\n    return;\n  }\n  this._pointerDown( event, event );\n};\n\nUnipointer.prototype.ontouchstart = function( event ) {\n  this._pointerDown( event, event.changedTouches[0] );\n};\n\nUnipointer.prototype.onMSPointerDown =\nUnipointer.prototype.onpointerdown = function( event ) {\n  this._pointerDown( event, event );\n};\n\n/**\n * pointer start\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nUnipointer.prototype._pointerDown = function( event, pointer ) {\n  // dismiss other pointers\n  if ( this.isPointerDown ) {\n    return;\n  }\n\n  this.isPointerDown = true;\n  // save pointer identifier to match up touch events\n  this.pointerIdentifier = pointer.pointerId !== undefined ?\n    // pointerId for pointer events, touch.indentifier for touch events\n    pointer.pointerId : pointer.identifier;\n\n  this.pointerDown( event, pointer );\n};\n\nUnipointer.prototype.pointerDown = function( event, pointer ) {\n  this._bindPostStartEvents( event );\n  this.emitEvent( 'pointerDown', [ event, pointer ] );\n};\n\n// hash of events to be bound after start event\nvar postStartEvents = {\n  mousedown: [ 'mousemove', 'mouseup' ],\n  touchstart: [ 'touchmove', 'touchend', 'touchcancel' ],\n  pointerdown: [ 'pointermove', 'pointerup', 'pointercancel' ],\n  MSPointerDown: [ 'MSPointerMove', 'MSPointerUp', 'MSPointerCancel' ]\n};\n\nUnipointer.prototype._bindPostStartEvents = function( event ) {\n  if ( !event ) {\n    return;\n  }\n  // get proper events to match start event\n  var events = postStartEvents[ event.type ];\n  // IE8 needs to be bound to document\n  var node = event.preventDefault ? window : document;\n  // bind events to node\n  for ( var i=0, len = events.length; i < len; i++ ) {\n    var evnt = events[i];\n    eventie.bind( node, evnt, this );\n  }\n  // save these arguments\n  this._boundPointerEvents = {\n    events: events,\n    node: node\n  };\n};\n\nUnipointer.prototype._unbindPostStartEvents = function() {\n  var args = this._boundPointerEvents;\n  // IE8 can trigger dragEnd twice, check for _boundEvents\n  if ( !args || !args.events ) {\n    return;\n  }\n\n  for ( var i=0, len = args.events.length; i < len; i++ ) {\n    var event = args.events[i];\n    eventie.unbind( args.node, event, this );\n  }\n  delete this._boundPointerEvents;\n};\n\n// ----- move event ----- //\n\nUnipointer.prototype.onmousemove = function( event ) {\n  this._pointerMove( event, event );\n};\n\nUnipointer.prototype.onMSPointerMove =\nUnipointer.prototype.onpointermove = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerMove( event, event );\n  }\n};\n\nUnipointer.prototype.ontouchmove = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerMove( event, touch );\n  }\n};\n\n/**\n * pointer move\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nUnipointer.prototype._pointerMove = function( event, pointer ) {\n  this.pointerMove( event, pointer );\n};\n\n// public\nUnipointer.prototype.pointerMove = function( event, pointer ) {\n  this.emitEvent( 'pointerMove', [ event, pointer ] );\n};\n\n// ----- end event ----- //\n\n\nUnipointer.prototype.onmouseup = function( event ) {\n  this._pointerUp( event, event );\n};\n\nUnipointer.prototype.onMSPointerUp =\nUnipointer.prototype.onpointerup = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerUp( event, event );\n  }\n};\n\nUnipointer.prototype.ontouchend = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerUp( event, touch );\n  }\n};\n\n/**\n * pointer up\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nUnipointer.prototype._pointerUp = function( event, pointer ) {\n  this._pointerDone();\n  this.pointerUp( event, pointer );\n};\n\n// public\nUnipointer.prototype.pointerUp = function( event, pointer ) {\n  this.emitEvent( 'pointerUp', [ event, pointer ] );\n};\n\n// ----- pointer done ----- //\n\n// triggered on pointer up & pointer cancel\nUnipointer.prototype._pointerDone = function() {\n  // reset properties\n  this.isPointerDown = false;\n  delete this.pointerIdentifier;\n  // remove events\n  this._unbindPostStartEvents();\n  this.pointerDone();\n};\n\nUnipointer.prototype.pointerDone = noop;\n\n// ----- pointer cancel ----- //\n\nUnipointer.prototype.onMSPointerCancel =\nUnipointer.prototype.onpointercancel = function( event ) {\n  if ( event.pointerId == this.pointerIdentifier ) {\n    this._pointerCancel( event, event );\n  }\n};\n\nUnipointer.prototype.ontouchcancel = function( event ) {\n  var touch = this.getTouch( event.changedTouches );\n  if ( touch ) {\n    this._pointerCancel( event, touch );\n  }\n};\n\n/**\n * pointer cancel\n * @param {Event} event\n * @param {Event or Touch} pointer\n * @private\n */\nUnipointer.prototype._pointerCancel = function( event, pointer ) {\n  this._pointerDone();\n  this.pointerCancel( event, pointer );\n};\n\n// public\nUnipointer.prototype.pointerCancel = function( event, pointer ) {\n  this.emitEvent( 'pointerCancel', [ event, pointer ] );\n};\n\n// -----  ----- //\n\n// utility function for getting x/y cooridinates from event, because IE8\nUnipointer.getPointerPoint = function( pointer ) {\n  return {\n    x: pointer.pageX !== undefined ? pointer.pageX : pointer.clientX,\n    y: pointer.pageY !== undefined ? pointer.pageY : pointer.clientY\n  };\n};\n\n// -----  ----- //\n\nreturn Unipointer;\n\n}));\n","/*!\n * Unidragger v1.1.5\n * Draggable base class\n * MIT license\n */\n\n/*jshint browser: true, unused: true, undef: true, strict: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false, require: false */\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'eventie/eventie',\n      'unipointer/unipointer'\n    ], function( eventie, Unipointer ) {\n      return factory( window, eventie, Unipointer );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('eventie'),\n      require('unipointer')\n    );\n  } else {\n    // browser global\n    window.Unidragger = factory(\n      window,\n      window.eventie,\n      window.Unipointer\n    );\n  }\n\n}( window, function factory( window, eventie, Unipointer ) {\n\n'use strict';\n\n// -----  ----- //\n\nfunction noop() {}\n\n// handle IE8 prevent default\nfunction preventDefaultEvent( event ) {\n  if ( event.preventDefault ) {\n    event.preventDefault();\n  } else {\n    event.returnValue = false;\n  }\n}\n\n// -------------------------- Unidragger -------------------------- //\n\nfunction Unidragger() {}\n\n// inherit Unipointer & EventEmitter\nUnidragger.prototype = new Unipointer();\n\n// ----- bind start ----- //\n\nUnidragger.prototype.bindHandles = function() {\n  this._bindHandles( true );\n};\n\nUnidragger.prototype.unbindHandles = function() {\n  this._bindHandles( false );\n};\n\nvar navigator = window.navigator;\n/**\n * works as unbinder, as you can .bindHandles( false ) to unbind\n * @param {Boolean} isBind - will unbind if falsey\n */\nUnidragger.prototype._bindHandles = function( isBind ) {\n  // munge isBind, default to true\n  isBind = isBind === undefined ? true : !!isBind;\n  // extra bind logic\n  var binderExtra;\n  if ( navigator.pointerEnabled ) {\n    binderExtra = function( handle ) {\n      // disable scrolling on the element\n      handle.style.touchAction = isBind ? 'none' : '';\n    };\n  } else if ( navigator.msPointerEnabled ) {\n    binderExtra = function( handle ) {\n      // disable scrolling on the element\n      handle.style.msTouchAction = isBind ? 'none' : '';\n    };\n  } else {\n    binderExtra = function() {\n      // TODO re-enable img.ondragstart when unbinding\n      if ( isBind ) {\n        disableImgOndragstart( handle );\n      }\n    };\n  }\n  // bind each handle\n  var bindMethod = isBind ? 'bind' : 'unbind';\n  for ( var i=0, len = this.handles.length; i < len; i++ ) {\n    var handle = this.handles[i];\n    this._bindStartEvent( handle, isBind );\n    binderExtra( handle );\n    eventie[ bindMethod ]( handle, 'click', this );\n  }\n};\n\n// remove default dragging interaction on all images in IE8\n// IE8 does its own drag thing on images, which messes stuff up\n\nfunction noDragStart() {\n  return false;\n}\n\n// TODO replace this with a IE8 test\nvar isIE8 = 'attachEvent' in document.documentElement;\n\n// IE8 only\nvar disableImgOndragstart = !isIE8 ? noop : function( handle ) {\n\n  if ( handle.nodeName == 'IMG' ) {\n    handle.ondragstart = noDragStart;\n  }\n\n  var images = handle.querySelectorAll('img');\n  for ( var i=0, len = images.length; i < len; i++ ) {\n    var img = images[i];\n    img.ondragstart = noDragStart;\n  }\n};\n\n// ----- start event ----- //\n\n/**\n * pointer start\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nUnidragger.prototype.pointerDown = function( event, pointer ) {\n  // dismiss range sliders\n  if ( event.target.nodeName == 'INPUT' && event.target.type == 'range' ) {\n    // reset pointerDown logic\n    this.isPointerDown = false;\n    delete this.pointerIdentifier;\n    return;\n  }\n\n  this._dragPointerDown( event, pointer );\n  // kludge to blur focused inputs in dragger\n  var focused = document.activeElement;\n  if ( focused && focused.blur ) {\n    focused.blur();\n  }\n  // bind move and end events\n  this._bindPostStartEvents( event );\n  // track scrolling\n  this.pointerDownScroll = Unidragger.getScrollPosition();\n  eventie.bind( window, 'scroll', this );\n\n  this.emitEvent( 'pointerDown', [ event, pointer ] );\n};\n\n// base pointer down logic\nUnidragger.prototype._dragPointerDown = function( event, pointer ) {\n  // track to see when dragging starts\n  this.pointerDownPoint = Unipointer.getPointerPoint( pointer );\n\n  // prevent default, unless touchstart or <select>\n  var isTouchstart = event.type == 'touchstart';\n  var targetNodeName = event.target.nodeName;\n  if ( !isTouchstart && targetNodeName != 'SELECT' ) {\n    preventDefaultEvent( event );\n  }\n};\n\n// ----- move event ----- //\n\n/**\n * drag move\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nUnidragger.prototype.pointerMove = function( event, pointer ) {\n  var moveVector = this._dragPointerMove( event, pointer );\n  this.emitEvent( 'pointerMove', [ event, pointer, moveVector ] );\n  this._dragMove( event, pointer, moveVector );\n};\n\n// base pointer move logic\nUnidragger.prototype._dragPointerMove = function( event, pointer ) {\n  var movePoint = Unipointer.getPointerPoint( pointer );\n  var moveVector = {\n    x: movePoint.x - this.pointerDownPoint.x,\n    y: movePoint.y - this.pointerDownPoint.y\n  };\n  // start drag if pointer has moved far enough to start drag\n  if ( !this.isDragging && this.hasDragStarted( moveVector ) ) {\n    this._dragStart( event, pointer );\n  }\n  return moveVector;\n};\n\n// condition if pointer has moved far enough to start drag\nUnidragger.prototype.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > 3 || Math.abs( moveVector.y ) > 3;\n};\n\n\n// ----- end event ----- //\n\n/**\n * pointer up\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nUnidragger.prototype.pointerUp = function( event, pointer ) {\n  this.emitEvent( 'pointerUp', [ event, pointer ] );\n  this._dragPointerUp( event, pointer );\n};\n\nUnidragger.prototype._dragPointerUp = function( event, pointer ) {\n  if ( this.isDragging ) {\n    this._dragEnd( event, pointer );\n  } else {\n    // pointer didn't move enough for drag to start\n    this._staticClick( event, pointer );\n  }\n};\n\nUnipointer.prototype.pointerDone = function() {\n  eventie.unbind( window, 'scroll', this );\n};\n\n// -------------------------- drag -------------------------- //\n\n// dragStart\nUnidragger.prototype._dragStart = function( event, pointer ) {\n  this.isDragging = true;\n  this.dragStartPoint = Unidragger.getPointerPoint( pointer );\n  // prevent clicks\n  this.isPreventingClicks = true;\n\n  this.dragStart( event, pointer );\n};\n\nUnidragger.prototype.dragStart = function( event, pointer ) {\n  this.emitEvent( 'dragStart', [ event, pointer ] );\n};\n\n// dragMove\nUnidragger.prototype._dragMove = function( event, pointer, moveVector ) {\n  // do not drag if not dragging yet\n  if ( !this.isDragging ) {\n    return;\n  }\n\n  this.dragMove( event, pointer, moveVector );\n};\n\nUnidragger.prototype.dragMove = function( event, pointer, moveVector ) {\n  preventDefaultEvent( event );\n  this.emitEvent( 'dragMove', [ event, pointer, moveVector ] );\n};\n\n// dragEnd\nUnidragger.prototype._dragEnd = function( event, pointer ) {\n  // set flags\n  this.isDragging = false;\n  // re-enable clicking async\n  var _this = this;\n  setTimeout( function() {\n    delete _this.isPreventingClicks;\n  });\n\n  this.dragEnd( event, pointer );\n};\n\nUnidragger.prototype.dragEnd = function( event, pointer ) {\n  this.emitEvent( 'dragEnd', [ event, pointer ] );\n};\n\nUnidragger.prototype.pointerDone = function() {\n  eventie.unbind( window, 'scroll', this );\n  delete this.pointerDownScroll;\n};\n\n// ----- onclick ----- //\n\n// handle all clicks and prevent clicks when dragging\nUnidragger.prototype.onclick = function( event ) {\n  if ( this.isPreventingClicks ) {\n    preventDefaultEvent( event );\n  }\n};\n\n// ----- staticClick ----- //\n\n// triggered after pointer down & up with no/tiny movement\nUnidragger.prototype._staticClick = function( event, pointer ) {\n  // ignore emulated mouse up clicks\n  if ( this.isIgnoringMouseUp && event.type == 'mouseup' ) {\n    return;\n  }\n\n  // allow click in <input>s and <textarea>s\n  var nodeName = event.target.nodeName;\n  if ( nodeName == 'INPUT' || nodeName == 'TEXTAREA' ) {\n    event.target.focus();\n  }\n  this.staticClick( event, pointer );\n\n  // set flag for emulated clicks 300ms after touchend\n  if ( event.type != 'mouseup' ) {\n    this.isIgnoringMouseUp = true;\n    var _this = this;\n    // reset flag after 300ms\n    setTimeout( function() {\n      delete _this.isIgnoringMouseUp;\n    }, 400 );\n  }\n};\n\nUnidragger.prototype.staticClick = function( event, pointer ) {\n  this.emitEvent( 'staticClick', [ event, pointer ] );\n};\n\n// ----- scroll ----- //\n\nUnidragger.prototype.onscroll = function() {\n  var scroll = Unidragger.getScrollPosition();\n  var scrollMoveX = this.pointerDownScroll.x - scroll.x;\n  var scrollMoveY = this.pointerDownScroll.y - scroll.y;\n  // cancel click/tap if scroll is too much\n  if ( Math.abs( scrollMoveX ) > 3 || Math.abs( scrollMoveY ) > 3 ) {\n    this._pointerDone();\n  }\n};\n\n// ----- utils ----- //\n\nUnidragger.getPointerPoint = function( pointer ) {\n  return {\n    x: pointer.pageX !== undefined ? pointer.pageX : pointer.clientX,\n    y: pointer.pageY !== undefined ? pointer.pageY : pointer.clientY\n  };\n};\n\nvar isPageOffset = window.pageYOffset !== undefined;\n\n// get scroll in { x, y }\nUnidragger.getScrollPosition = function() {\n  return {\n    x: isPageOffset ? window.pageXOffset : document.body.scrollLeft,\n    y: isPageOffset ? window.pageYOffset : document.body.scrollTop\n  };\n};\n\n// -----  ----- //\n\nUnidragger.getPointerPoint = Unipointer.getPointerPoint;\n\nreturn Unidragger;\n\n}));\n","( function( window, factory ) {\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'classie/classie',\n      'eventie/eventie',\n      './flickity',\n      'unidragger/unidragger',\n      'fizzy-ui-utils/utils'\n    ], function( classie, eventie, Flickity, Unidragger, utils ) {\n      return factory( window, classie, eventie, Flickity, Unidragger, utils );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-classie'),\n      require('eventie'),\n      require('./flickity'),\n      require('unidragger'),\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    window.Flickity = factory(\n      window,\n      window.classie,\n      window.eventie,\n      window.Flickity,\n      window.Unidragger,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, classie, eventie, Flickity, Unidragger, utils ) {\n\n'use strict';\n\n// handle IE8 prevent default\nfunction preventDefaultEvent( event ) {\n  if ( event.preventDefault ) {\n    event.preventDefault();\n  } else {\n    event.returnValue = false;\n  }\n}\n\n// ----- defaults ----- //\n\nutils.extend( Flickity.defaults, {\n  draggable: true\n});\n\n// ----- create ----- //\n\nFlickity.createMethods.push('_createDrag');\n\n// -------------------------- drag prototype -------------------------- //\n\nutils.extend( Flickity.prototype, Unidragger.prototype );\n\n// --------------------------  -------------------------- //\n\nFlickity.prototype._createDrag = function() {\n  this.on( 'activate', this.bindDrag );\n  this.on( 'uiChange', this._uiChangeDrag );\n  this.on( 'childUIPointerDown', this._childUIPointerDownDrag );\n  this.on( 'deactivate', this.unbindDrag );\n};\n\nFlickity.prototype.bindDrag = function() {\n  if ( !this.options.draggable || this.isDragBound ) {\n    return;\n  }\n  classie.add( this.element, 'is-draggable' );\n  this.handles = [ this.viewport ];\n  this.bindHandles();\n  this.isDragBound = true;\n};\n\nFlickity.prototype.unbindDrag = function() {\n  if ( !this.isDragBound ) {\n    return;\n  }\n  classie.remove( this.element, 'is-draggable' );\n  this.unbindHandles();\n  delete this.isDragBound;\n};\n\nFlickity.prototype._uiChangeDrag = function() {\n  delete this.isFreeScrolling;\n};\n\nFlickity.prototype._childUIPointerDownDrag = function( event ) {\n  preventDefaultEvent( event );\n  this.pointerDownFocus( event );\n};\n\n// -------------------------- pointer events -------------------------- //\n\nFlickity.prototype.pointerDown = function( event, pointer ) {\n  // dismiss range sliders\n  if ( event.target.nodeName == 'INPUT' && event.target.type == 'range' ) {\n    // reset pointerDown logic\n    this.isPointerDown = false;\n    delete this.pointerIdentifier;\n    return;\n  }\n\n  this._dragPointerDown( event, pointer );\n\n  // kludge to blur focused inputs in dragger\n  var focused = document.activeElement;\n  if ( focused && focused.blur && focused != this.element &&\n    // do not blur body for IE9 & 10, #117\n    focused != document.body ) {\n    focused.blur();\n  }\n  this.pointerDownFocus( event );\n  // stop if it was moving\n  this.dragX = this.x;\n  classie.add( this.viewport, 'is-pointer-down' );\n  // bind move and end events\n  this._bindPostStartEvents( event );\n  // track scrolling\n  this.pointerDownScroll = Unidragger.getScrollPosition();\n  eventie.bind( window, 'scroll', this );\n\n  this.dispatchEvent( 'pointerDown', event, [ pointer ] );\n};\n\nvar touchStartEvents = {\n  touchstart: true,\n  MSPointerDown: true\n};\n\nvar focusNodes = {\n  INPUT: true,\n  SELECT: true\n};\n\nFlickity.prototype.pointerDownFocus = function( event ) {\n  // focus element, if not touch, and its not an input or select\n  if ( !this.options.accessibility || touchStartEvents[ event.type ] ||\n      focusNodes[ event.target.nodeName ] ) {\n    return;\n  }\n  var prevScrollY = window.pageYOffset;\n  this.element.focus();\n  // hack to fix scroll jump after focus, #76\n  if ( window.pageYOffset != prevScrollY ) {\n    window.scrollTo( window.pageXOffset, prevScrollY );\n  }\n};\n\n// ----- move ----- //\n\nFlickity.prototype.hasDragStarted = function( moveVector ) {\n  return Math.abs( moveVector.x ) > 3;\n};\n\n// ----- up ----- //\n\nFlickity.prototype.pointerUp = function( event, pointer ) {\n  classie.remove( this.viewport, 'is-pointer-down' );\n  this.dispatchEvent( 'pointerUp', event, [ pointer ] );\n  this._dragPointerUp( event, pointer );\n};\n\nFlickity.prototype.pointerDone = function() {\n  eventie.unbind( window, 'scroll', this );\n  delete this.pointerDownScroll;\n};\n\n// -------------------------- dragging -------------------------- //\n\nFlickity.prototype.dragStart = function( event, pointer ) {\n  this.dragStartPosition = this.x;\n  this.startAnimation();\n  this.dispatchEvent( 'dragStart', event, [ pointer ] );\n};\n\nFlickity.prototype.dragMove = function( event, pointer, moveVector ) {\n  preventDefaultEvent( event );\n\n  this.previousDragX = this.dragX;\n  // reverse if right-to-left\n  var direction = this.options.rightToLeft ? -1 : 1;\n  var dragX = this.dragStartPosition + moveVector.x * direction;\n\n  if ( !this.options.wrapAround && this.cells.length ) {\n    // slow drag\n    var originBound = Math.max( -this.cells[0].target, this.dragStartPosition );\n    dragX = dragX > originBound ? ( dragX + originBound ) * 0.5 : dragX;\n    var endBound = Math.min( -this.getLastCell().target, this.dragStartPosition );\n    dragX = dragX < endBound ? ( dragX + endBound ) * 0.5 : dragX;\n  }\n\n  this.dragX = dragX;\n\n  this.dragMoveTime = new Date();\n  this.dispatchEvent( 'dragMove', event, [ pointer, moveVector ] );\n};\n\nFlickity.prototype.dragEnd = function( event, pointer ) {\n  if ( this.options.freeScroll ) {\n    this.isFreeScrolling = true;\n  }\n  // set selectedIndex based on where flick will end up\n  var index = this.dragEndRestingSelect();\n\n  if ( this.options.freeScroll && !this.options.wrapAround ) {\n    // if free-scroll & not wrap around\n    // do not free-scroll if going outside of bounding cells\n    // so bounding cells can attract slider, and keep it in bounds\n    var restingX = this.getRestingPosition();\n    this.isFreeScrolling = -restingX > this.cells[0].target &&\n      -restingX < this.getLastCell().target;\n  } else if ( !this.options.freeScroll && index == this.selectedIndex ) {\n    // boost selection if selected index has not changed\n    index += this.dragEndBoostSelect();\n  }\n  delete this.previousDragX;\n  // apply selection\n  // TODO refactor this, selecting here feels weird\n  this.select( index );\n  this.dispatchEvent( 'dragEnd', event, [ pointer ] );\n};\n\nFlickity.prototype.dragEndRestingSelect = function() {\n  var restingX = this.getRestingPosition();\n  // how far away from selected cell\n  var distance = Math.abs( this.getCellDistance( -restingX, this.selectedIndex ) );\n  // get closet resting going up and going down\n  var positiveResting = this._getClosestResting( restingX, distance, 1 );\n  var negativeResting = this._getClosestResting( restingX, distance, -1 );\n  // use closer resting for wrap-around\n  var index = positiveResting.distance < negativeResting.distance ?\n    positiveResting.index : negativeResting.index;\n  return index;\n};\n\n/**\n * given resting X and distance to selected cell\n * get the distance and index of the closest cell\n * @param {Number} restingX - estimated post-flick resting position\n * @param {Number} distance - distance to selected cell\n * @param {Integer} increment - +1 or -1, going up or down\n * @returns {Object} - { distance: {Number}, index: {Integer} }\n */\nFlickity.prototype._getClosestResting = function( restingX, distance, increment ) {\n  var index = this.selectedIndex;\n  var minDistance = Infinity;\n  var condition = this.options.contain && !this.options.wrapAround ?\n    // if contain, keep going if distance is equal to minDistance\n    function( d, md ) { return d <= md; } : function( d, md ) { return d < md; };\n  while ( condition( distance, minDistance ) ) {\n    // measure distance to next cell\n    index += increment;\n    minDistance = distance;\n    distance = this.getCellDistance( -restingX, index );\n    if ( distance === null ) {\n      break;\n    }\n    distance = Math.abs( distance );\n  }\n  return {\n    distance: minDistance,\n    // selected was previous index\n    index: index - increment\n  };\n};\n\n/**\n * measure distance between x and a cell target\n * @param {Number} x\n * @param {Integer} index - cell index\n */\nFlickity.prototype.getCellDistance = function( x, index ) {\n  var len = this.cells.length;\n  // wrap around if at least 2 cells\n  var isWrapAround = this.options.wrapAround && len > 1;\n  var cellIndex = isWrapAround ? utils.modulo( index, len ) : index;\n  var cell = this.cells[ cellIndex ];\n  if ( !cell ) {\n    return null;\n  }\n  // add distance for wrap-around cells\n  var wrap = isWrapAround ? this.slideableWidth * Math.floor( index / len ) : 0;\n  return x - ( cell.target + wrap );\n};\n\nFlickity.prototype.dragEndBoostSelect = function() {\n  // do not boost if no previousDragX or dragMoveTime\n  if ( this.previousDragX === undefined || !this.dragMoveTime ||\n    // or if drag was held for 100 ms\n    new Date() - this.dragMoveTime > 100 ) {\n    return 0;\n  }\n\n  var distance = this.getCellDistance( -this.dragX, this.selectedIndex );\n  var delta = this.previousDragX - this.dragX;\n  if ( distance > 0 && delta > 0 ) {\n    // boost to next if moving towards the right, and positive velocity\n    return 1;\n  } else if ( distance < 0 && delta < 0 ) {\n    // boost to previous if moving towards the left, and negative velocity\n    return -1;\n  }\n  return 0;\n};\n\n// ----- staticClick ----- //\n\nFlickity.prototype.staticClick = function( event, pointer ) {\n  // get clickedCell, if cell was clicked\n  var clickedCell = this.getParentCell( event.target );\n  var cellElem = clickedCell && clickedCell.element;\n  var cellIndex = clickedCell && utils.indexOf( this.cells, clickedCell );\n  this.dispatchEvent( 'staticClick', event, [ pointer, cellElem, cellIndex ] );\n};\n\n// -----  ----- //\n\nreturn Flickity;\n\n}));\n","/*!\n * Tap listener v1.1.2\n * listens to taps\n * MIT license\n */\n\n/*jshint browser: true, unused: true, undef: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false*/ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'unipointer/unipointer'\n    ], function( Unipointer ) {\n      return factory( window, Unipointer );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('unipointer')\n    );\n  } else {\n    // browser global\n    window.TapListener = factory(\n      window,\n      window.Unipointer\n    );\n  }\n\n}( window, function factory( window, Unipointer ) {\n\n'use strict';\n\n// --------------------------  TapListener -------------------------- //\n\nfunction TapListener( elem ) {\n  this.bindTap( elem );\n}\n\n// inherit Unipointer & EventEmitter\nTapListener.prototype = new Unipointer();\n\n/**\n * bind tap event to element\n * @param {Element} elem\n */\nTapListener.prototype.bindTap = function( elem ) {\n  if ( !elem ) {\n    return;\n  }\n  this.unbindTap();\n  this.tapElement = elem;\n  this._bindStartEvent( elem, true );\n};\n\nTapListener.prototype.unbindTap = function() {\n  if ( !this.tapElement ) {\n    return;\n  }\n  this._bindStartEvent( this.tapElement, true );\n  delete this.tapElement;\n};\n\nvar isPageOffset = window.pageYOffset !== undefined;\n/**\n * pointer up\n * @param {Event} event\n * @param {Event or Touch} pointer\n */\nTapListener.prototype.pointerUp = function( event, pointer ) {\n  // ignore emulated mouse up clicks\n  if ( this.isIgnoringMouseUp && event.type == 'mouseup' ) {\n    return;\n  }\n\n  var pointerPoint = Unipointer.getPointerPoint( pointer );\n  var boundingRect = this.tapElement.getBoundingClientRect();\n  // standard or IE8 scroll positions\n  var scrollX = isPageOffset ? window.pageXOffset : document.body.scrollLeft;\n  var scrollY = isPageOffset ? window.pageYOffset : document.body.scrollTop;\n  // calculate if pointer is inside tapElement\n  var isInside = pointerPoint.x >= boundingRect.left + scrollX &&\n    pointerPoint.x <= boundingRect.right + scrollX &&\n    pointerPoint.y >= boundingRect.top + scrollY &&\n    pointerPoint.y <= boundingRect.bottom + scrollY;\n  // trigger callback if pointer is inside element\n  if ( isInside ) {\n    this.emitEvent( 'tap', [ event, pointer ] );\n  }\n\n  // set flag for emulated clicks 300ms after touchend\n  if ( event.type != 'mouseup' ) {\n    this.isIgnoringMouseUp = true;\n    // reset flag after 300ms\n    setTimeout( function() {\n      delete this.isIgnoringMouseUp;\n    }.bind( this ), 320 );\n  }\n};\n\nTapListener.prototype.destroy = function() {\n  this.pointerDone();\n  this.unbindTap();\n};\n\n// -----  ----- //\n\nreturn TapListener;\n\n}));\n","// -------------------------- prev/next button -------------------------- //\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'eventie/eventie',\n      './flickity',\n      'tap-listener/tap-listener',\n      'fizzy-ui-utils/utils'\n    ], function( eventie, Flickity, TapListener, utils ) {\n      return factory( window, eventie, Flickity, TapListener, utils );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('eventie'),\n      require('./flickity'),\n      require('tap-listener'),\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n      window,\n      window.eventie,\n      window.Flickity,\n      window.TapListener,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, eventie, Flickity, TapListener, utils ) {\n\n'use strict';\n\n// ----- inline SVG support ----- //\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\n// only check on demand, not on script load\nvar supportsInlineSVG = ( function() {\n  var supports;\n  function checkSupport() {\n    if ( supports !== undefined ) {\n      return supports;\n    }\n    var div = document.createElement('div');\n    div.innerHTML = '<svg/>';\n    supports = ( div.firstChild && div.firstChild.namespaceURI ) == svgURI;\n    return supports;\n  }\n  return checkSupport;\n})();\n\n// -------------------------- PrevNextButton -------------------------- //\n\nfunction PrevNextButton( direction, parent ) {\n  this.direction = direction;\n  this.parent = parent;\n  this._create();\n}\n\nPrevNextButton.prototype = new TapListener();\n\nPrevNextButton.prototype._create = function() {\n  // properties\n  this.isEnabled = true;\n  this.isPrevious = this.direction == -1;\n  var leftDirection = this.parent.options.rightToLeft ? 1 : -1;\n  this.isLeft = this.direction == leftDirection;\n\n  var element = this.element = document.createElement('button');\n  element.className = 'flickity-prev-next-button';\n  element.className += this.isPrevious ? ' previous' : ' next';\n  // prevent button from submitting form http://stackoverflow.com/a/10836076/182183\n  element.setAttribute( 'type', 'button' );\n  // init as disabled\n  this.disable();\n\n  element.setAttribute( 'aria-label', this.isPrevious ? 'previous' : 'next' );\n\n  Flickity.setUnselectable( element );\n  // create arrow\n  if ( supportsInlineSVG() ) {\n    var svg = this.createSVG();\n    element.appendChild( svg );\n  } else {\n    // SVG not supported, set button text\n    this.setArrowText();\n    element.className += ' no-svg';\n  }\n  // update on select\n  var _this = this;\n  this.onCellSelect = function() {\n    _this.update();\n  };\n  this.parent.on( 'cellSelect', this.onCellSelect );\n  // tap\n  this.on( 'tap', this.onTap );\n  // pointerDown\n  this.on( 'pointerDown', function onPointerDown( button, event ) {\n    _this.parent.childUIPointerDown( event );\n  });\n};\n\nPrevNextButton.prototype.activate = function() {\n  this.bindTap( this.element );\n  // click events from keyboard\n  eventie.bind( this.element, 'click', this );\n  // add to DOM\n  this.parent.element.appendChild( this.element );\n};\n\nPrevNextButton.prototype.deactivate = function() {\n  // remove from DOM\n  this.parent.element.removeChild( this.element );\n  // do regular TapListener destroy\n  TapListener.prototype.destroy.call( this );\n  // click events from keyboard\n  eventie.unbind( this.element, 'click', this );\n};\n\nPrevNextButton.prototype.createSVG = function() {\n  var svg = document.createElementNS( svgURI, 'svg');\n  svg.setAttribute( 'viewBox', '0 0 100 100' );\n  var path = document.createElementNS( svgURI, 'path');\n  var pathMovements = getArrowMovements( this.parent.options.arrowShape );\n  path.setAttribute( 'd', pathMovements );\n  path.setAttribute( 'class', 'arrow' );\n  // rotate arrow\n  if ( !this.isLeft ) {\n    path.setAttribute( 'transform', 'translate(100, 100) rotate(180) ' );\n  }\n  svg.appendChild( path );\n  return svg;\n};\n\n// get SVG path movmement\nfunction getArrowMovements( shape ) {\n  // use shape as movement if string\n  if ( typeof shape == 'string' ) {\n    return shape;\n  }\n  // create movement string\n  return 'M ' + shape.x0 + ',50' +\n    ' L ' + shape.x1 + ',' + ( shape.y1 + 50 ) +\n    ' L ' + shape.x2 + ',' + ( shape.y2 + 50 ) +\n    ' L ' + shape.x3 + ',50 ' +\n    ' L ' + shape.x2 + ',' + ( 50 - shape.y2 ) +\n    ' L ' + shape.x1 + ',' + ( 50 - shape.y1 ) +\n    ' Z';\n}\n\nPrevNextButton.prototype.setArrowText = function() {\n  var parentOptions = this.parent.options;\n  var arrowText = this.isLeft ? parentOptions.leftArrowText : parentOptions.rightArrowText;\n  utils.setText( this.element, arrowText );\n};\n\nPrevNextButton.prototype.onTap = function() {\n  if ( !this.isEnabled ) {\n    return;\n  }\n  this.parent.uiChange();\n  var method = this.isPrevious ? 'previous' : 'next';\n  this.parent[ method ]();\n};\n\nPrevNextButton.prototype.handleEvent = utils.handleEvent;\n\nPrevNextButton.prototype.onclick = function() {\n  // only allow clicks from keyboard\n  var focused = document.activeElement;\n  if ( focused && focused == this.element ) {\n    this.onTap();\n  }\n};\n\n// -----  ----- //\n\nPrevNextButton.prototype.enable = function() {\n  if ( this.isEnabled ) {\n    return;\n  }\n  this.element.disabled = false;\n  this.isEnabled = true;\n};\n\nPrevNextButton.prototype.disable = function() {\n  if ( !this.isEnabled ) {\n    return;\n  }\n  this.element.disabled = true;\n  this.isEnabled = false;\n};\n\nPrevNextButton.prototype.update = function() {\n  // index of first or last cell, if previous or next\n  var cells = this.parent.cells;\n  // enable is wrapAround and at least 2 cells\n  if ( this.parent.options.wrapAround && cells.length > 1 ) {\n    this.enable();\n    return;\n  }\n  var lastIndex = cells.length ? cells.length - 1 : 0;\n  var boundIndex = this.isPrevious ? 0 : lastIndex;\n  var method = this.parent.selectedIndex == boundIndex ? 'disable' : 'enable';\n  this[ method ]();\n};\n\nPrevNextButton.prototype.destroy = function() {\n  this.deactivate();\n};\n\n// -------------------------- Flickity prototype -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  prevNextButtons: true,\n  leftArrowText: '‹',\n  rightArrowText: '›',\n  arrowShape: {\n    x0: 10,\n    x1: 60, y1: 50,\n    x2: 70, y2: 40,\n    x3: 30\n  }\n});\n\nFlickity.createMethods.push('_createPrevNextButtons');\n\nFlickity.prototype._createPrevNextButtons = function() {\n  if ( !this.options.prevNextButtons ) {\n    return;\n  }\n\n  this.prevButton = new PrevNextButton( -1, this );\n  this.nextButton = new PrevNextButton( 1, this );\n\n  this.on( 'activate', this.activatePrevNextButtons );\n};\n\nFlickity.prototype.activatePrevNextButtons = function() {\n  this.prevButton.activate();\n  this.nextButton.activate();\n  this.on( 'deactivate', this.deactivatePrevNextButtons );\n};\n\nFlickity.prototype.deactivatePrevNextButtons = function() {\n  this.prevButton.deactivate();\n  this.nextButton.deactivate();\n  this.off( 'deactivate', this.deactivatePrevNextButtons );\n};\n\n// --------------------------  -------------------------- //\n\nFlickity.PrevNextButton = PrevNextButton;\n\nreturn Flickity;\n\n}));\n","( function( window, factory ) {\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'eventie/eventie',\n      './flickity',\n      'tap-listener/tap-listener',\n      'fizzy-ui-utils/utils'\n    ], function( eventie, Flickity, TapListener, utils ) {\n      return factory( window, eventie, Flickity, TapListener, utils );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('eventie'),\n      require('./flickity'),\n      require('tap-listener'),\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n      window,\n      window.eventie,\n      window.Flickity,\n      window.TapListener,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, eventie, Flickity, TapListener, utils ) {\n\n// -------------------------- PageDots -------------------------- //\n\n'use strict';\n\nfunction PageDots( parent ) {\n  this.parent = parent;\n  this._create();\n}\n\nPageDots.prototype = new TapListener();\n\nPageDots.prototype._create = function() {\n  // create holder element\n  this.holder = document.createElement('ol');\n  this.holder.className = 'flickity-page-dots';\n  Flickity.setUnselectable( this.holder );\n  // create dots, array of elements\n  this.dots = [];\n  // update on select\n  var _this = this;\n  this.onCellSelect = function() {\n    _this.updateSelected();\n  };\n  this.parent.on( 'cellSelect', this.onCellSelect );\n  // tap\n  this.on( 'tap', this.onTap );\n  // pointerDown\n  this.on( 'pointerDown', function onPointerDown( button, event ) {\n    _this.parent.childUIPointerDown( event );\n  });\n};\n\nPageDots.prototype.activate = function() {\n  this.setDots();\n  this.bindTap( this.holder );\n  // add to DOM\n  this.parent.element.appendChild( this.holder );\n};\n\nPageDots.prototype.deactivate = function() {\n  // remove from DOM\n  this.parent.element.removeChild( this.holder );\n  TapListener.prototype.destroy.call( this );\n};\n\nPageDots.prototype.setDots = function() {\n  // get difference between number of cells and number of dots\n  var delta = this.parent.cells.length - this.dots.length;\n  if ( delta > 0 ) {\n    this.addDots( delta );\n  } else if ( delta < 0 ) {\n    this.removeDots( -delta );\n  }\n};\n\nPageDots.prototype.addDots = function( count ) {\n  var fragment = document.createDocumentFragment();\n  var newDots = [];\n  while ( count ) {\n    var dot = document.createElement('li');\n    dot.className = 'dot';\n    fragment.appendChild( dot );\n    newDots.push( dot );\n    count--;\n  }\n  this.holder.appendChild( fragment );\n  this.dots = this.dots.concat( newDots );\n};\n\nPageDots.prototype.removeDots = function( count ) {\n  // remove from this.dots collection\n  var removeDots = this.dots.splice( this.dots.length - count, count );\n  // remove from DOM\n  for ( var i=0, len = removeDots.length; i < len; i++ ) {\n    var dot = removeDots[i];\n    this.holder.removeChild( dot );\n  }\n};\n\nPageDots.prototype.updateSelected = function() {\n  // remove selected class on previous\n  if ( this.selectedDot ) {\n    this.selectedDot.className = 'dot';\n  }\n  // don't proceed if no dots\n  if ( !this.dots.length ) {\n    return;\n  }\n  this.selectedDot = this.dots[ this.parent.selectedIndex ];\n  this.selectedDot.className = 'dot is-selected';\n};\n\nPageDots.prototype.onTap = function( event ) {\n  var target = event.target;\n  // only care about dot clicks\n  if ( target.nodeName != 'LI' ) {\n    return;\n  }\n\n  this.parent.uiChange();\n  var index = utils.indexOf( this.dots, target );\n  this.parent.select( index );\n};\n\nPageDots.prototype.destroy = function() {\n  this.deactivate();\n};\n\nFlickity.PageDots = PageDots;\n\n// -------------------------- Flickity -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  pageDots: true\n});\n\nFlickity.createMethods.push('_createPageDots');\n\nFlickity.prototype._createPageDots = function() {\n  if ( !this.options.pageDots ) {\n    return;\n  }\n  this.pageDots = new PageDots( this );\n  this.on( 'activate', this.activatePageDots );\n  this.on( 'cellAddedRemoved', this.onCellAddedRemovedPageDots );\n  this.on( 'deactivate', this.deactivatePageDots );\n};\n\nFlickity.prototype.activatePageDots = function() {\n  this.pageDots.activate();\n};\n\nFlickity.prototype.onCellAddedRemovedPageDots = function() {\n  this.pageDots.setDots();\n};\n\nFlickity.prototype.deactivatePageDots = function() {\n  this.pageDots.deactivate();\n};\n\n// -----  ----- //\n\nFlickity.PageDots = PageDots;\n\nreturn Flickity;\n\n}));\n","( function( window, factory ) {\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'eventEmitter/EventEmitter',\n      'eventie/eventie',\n      'fizzy-ui-utils/utils',\n      './flickity'\n    ], function( EventEmitter, eventie, utils, Flickity ) {\n      return factory( EventEmitter, eventie, utils, Flickity );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      require('wolfy87-eventemitter'),\n      require('eventie'),\n      require('fizzy-ui-utils'),\n      require('./flickity')\n    );\n  } else {\n    // browser global\n    factory(\n      window.EventEmitter,\n      window.eventie,\n      window.fizzyUIUtils,\n      window.Flickity\n    );\n  }\n\n}( window, function factory( EventEmitter, eventie, utils, Flickity ) {\n\n'use strict';\n\n// -------------------------- Page Visibility -------------------------- //\n// https://developer.mozilla.org/en-US/docs/Web/Guide/User_experience/Using_the_Page_Visibility_API\n\nvar hiddenProperty, visibilityEvent;\nif ( 'hidden' in document ) {\n  hiddenProperty = 'hidden';\n  visibilityEvent = 'visibilitychange';\n} else if ( 'webkitHidden' in document ) {\n  hiddenProperty = 'webkitHidden';\n  visibilityEvent = 'webkitvisibilitychange';\n}\n\n// -------------------------- Player -------------------------- //\n\nfunction Player( parent ) {\n  this.parent = parent;\n  this.state = 'stopped';\n  // visibility change event handler\n  if ( visibilityEvent ) {\n    var _this = this;\n    this.onVisibilityChange = function() {\n      _this.visibilityChange();\n    };\n  }\n}\n\nPlayer.prototype = new EventEmitter();\n\n// start play\nPlayer.prototype.play = function() {\n  if ( this.state == 'playing' ) {\n    return;\n  }\n  this.state = 'playing';\n  // listen to visibility change\n  if ( visibilityEvent ) {\n    document.addEventListener( visibilityEvent, this.onVisibilityChange, false );\n  }\n  // start ticking\n  this.tick();\n};\n\nPlayer.prototype.tick = function() {\n  // do not tick if not playing\n  if ( this.state != 'playing' ) {\n    return;\n  }\n\n  var time = this.parent.options.autoPlay;\n  // default to 3 seconds\n  time = typeof time == 'number' ? time : 3000;\n  var _this = this;\n  // HACK: reset ticks if stopped and started within interval\n  this.clear();\n  this.timeout = setTimeout( function() {\n    _this.parent.next( true );\n    _this.tick();\n  }, time );\n};\n\nPlayer.prototype.stop = function() {\n  this.state = 'stopped';\n  this.clear();\n  // remove visibility change event\n  if ( visibilityEvent ) {\n    document.removeEventListener( visibilityEvent, this.onVisibilityChange, false );\n  }\n};\n\nPlayer.prototype.clear = function() {\n  clearTimeout( this.timeout );\n};\n\nPlayer.prototype.pause = function() {\n  if ( this.state == 'playing' ) {\n    this.state = 'paused';\n    this.clear();\n  }\n};\n\nPlayer.prototype.unpause = function() {\n  // re-start play if in unpaused state\n  if ( this.state == 'paused' ) {\n    this.play();\n  }\n};\n\n// pause if page visibility is hidden, unpause if visible\nPlayer.prototype.visibilityChange = function() {\n  var isHidden = document[ hiddenProperty ];\n  this[ isHidden ? 'pause' : 'unpause' ]();\n};\n\n// -------------------------- Flickity -------------------------- //\n\nutils.extend( Flickity.defaults, {\n  pauseAutoPlayOnHover: true\n});\n\nFlickity.createMethods.push('_createPlayer');\n\nFlickity.prototype._createPlayer = function() {\n  this.player = new Player( this );\n\n  this.on( 'activate', this.activatePlayer );\n  this.on( 'uiChange', this.stopPlayer );\n  this.on( 'pointerDown', this.stopPlayer );\n  this.on( 'deactivate', this.deactivatePlayer );\n};\n\nFlickity.prototype.activatePlayer = function() {\n  if ( !this.options.autoPlay ) {\n    return;\n  }\n  this.player.play();\n  eventie.bind( this.element, 'mouseenter', this );\n  this.isMouseenterBound = true;\n};\n\n// Player API, don't hate the ... thanks I know where the door is\n\nFlickity.prototype.playPlayer = function() {\n  this.player.play();\n};\n\nFlickity.prototype.stopPlayer = function() {\n  this.player.stop();\n};\n\nFlickity.prototype.pausePlayer = function() {\n  this.player.pause();\n};\n\nFlickity.prototype.unpausePlayer = function() {\n  this.player.unpause();\n};\n\nFlickity.prototype.deactivatePlayer = function() {\n  this.player.stop();\n  if ( this.isMouseenterBound ) {\n    eventie.unbind( this.element, 'mouseenter', this );\n    delete this.isMouseenterBound;\n  }\n};\n\n// ----- mouseenter/leave ----- //\n\n// pause auto-play on hover\nFlickity.prototype.onmouseenter = function() {\n  if ( !this.options.pauseAutoPlayOnHover ) {\n    return;\n  }\n  this.player.pause();\n  eventie.bind( this.element, 'mouseleave', this );\n};\n\n// resume auto-play on hover off\nFlickity.prototype.onmouseleave = function() {\n  this.player.unpause();\n  eventie.unbind( this.element, 'mouseleave', this );\n};\n\n// -----  ----- //\n\nFlickity.Player = Player;\n\nreturn Flickity;\n\n}));\n","( function( window, factory ) {\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      'fizzy-ui-utils/utils'\n    ], function( Flickity, utils ) {\n      return factory( window, Flickity, utils );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('./flickity'),\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n      window,\n      window.Flickity,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, Flickity, utils ) {\n\n'use strict';\n\n// append cells to a document fragment\nfunction getCellsFragment( cells ) {\n  var fragment = document.createDocumentFragment();\n  for ( var i=0, len = cells.length; i < len; i++ ) {\n    var cell = cells[i];\n    fragment.appendChild( cell.element );\n  }\n  return fragment;\n}\n\n// -------------------------- add/remove cell prototype -------------------------- //\n\n/**\n * Insert, prepend, or append cells\n * @param {Element, Array, NodeList} elems\n * @param {Integer} index\n */\nFlickity.prototype.insert = function( elems, index ) {\n  var cells = this._makeCells( elems );\n  if ( !cells || !cells.length ) {\n    return;\n  }\n  var len = this.cells.length;\n  // default to append\n  index = index === undefined ? len : index;\n  // add cells with document fragment\n  var fragment = getCellsFragment( cells );\n  // append to slider\n  var isAppend = index == len;\n  if ( isAppend ) {\n    this.slider.appendChild( fragment );\n  } else {\n    var insertCellElement = this.cells[ index ].element;\n    this.slider.insertBefore( fragment, insertCellElement );\n  }\n  // add to this.cells\n  if ( index === 0 ) {\n    // prepend, add to start\n    this.cells = cells.concat( this.cells );\n  } else if ( isAppend ) {\n    // append, add to end\n    this.cells = this.cells.concat( cells );\n  } else {\n    // insert in this.cells\n    var endCells = this.cells.splice( index, len - index );\n    this.cells = this.cells.concat( cells ).concat( endCells );\n  }\n\n  this._sizeCells( cells );\n\n  var selectedIndexDelta = index > this.selectedIndex ? 0 : cells.length;\n  this._cellAddedRemoved( index, selectedIndexDelta );\n};\n\nFlickity.prototype.append = function( elems ) {\n  this.insert( elems, this.cells.length );\n};\n\nFlickity.prototype.prepend = function( elems ) {\n  this.insert( elems, 0 );\n};\n\n/**\n * Remove cells\n * @param {Element, Array, NodeList} elems\n */\nFlickity.prototype.remove = function( elems ) {\n  var cells = this.getCells( elems );\n  var selectedIndexDelta = 0;\n  var i, len, cell;\n  // calculate selectedIndexDelta, easier if done in seperate loop\n  for ( i=0, len = cells.length; i < len; i++ ) {\n    cell = cells[i];\n    var wasBefore = utils.indexOf( this.cells, cell ) < this.selectedIndex;\n    selectedIndexDelta -= wasBefore ? 1 : 0;\n  }\n\n  for ( i=0, len = cells.length; i < len; i++ ) {\n    cell = cells[i];\n    cell.remove();\n    // remove item from collection\n    utils.removeFrom( this.cells, cell );\n  }\n\n  if ( cells.length ) {\n    // update stuff\n    this._cellAddedRemoved( 0, selectedIndexDelta );\n  }\n};\n\n// updates when cells are added or removed\nFlickity.prototype._cellAddedRemoved = function( changedCellIndex, selectedIndexDelta ) {\n  selectedIndexDelta = selectedIndexDelta || 0;\n  this.selectedIndex += selectedIndexDelta;\n  this.selectedIndex = Math.max( 0, Math.min( this.cells.length - 1, this.selectedIndex ) );\n\n  this.emitEvent( 'cellAddedRemoved', [ changedCellIndex, selectedIndexDelta ] );\n  this.cellChange( changedCellIndex, true );\n};\n\n/**\n * logic to be run after a cell's size changes\n * @param {Element} elem - cell's element\n */\nFlickity.prototype.cellSizeChange = function( elem ) {\n  var cell = this.getCell( elem );\n  if ( !cell ) {\n    return;\n  }\n  cell.getSize();\n\n  var index = utils.indexOf( this.cells, cell );\n  this.cellChange( index );\n};\n\n/**\n * logic any time a cell is changed: added, removed, or size changed\n * @param {Integer} changedCellIndex - index of the changed cell, optional\n */\nFlickity.prototype.cellChange = function( changedCellIndex, isPositioningSlider ) {\n  var prevSlideableWidth = this.slideableWidth;\n  this._positionCells( changedCellIndex );\n  this._getWrapShiftCells();\n  this.setGallerySize();\n  // position slider\n  if ( this.options.freeScroll ) {\n    // shift x by change in slideableWidth\n    // TODO fix position shifts when prepending w/ freeScroll\n    var deltaX = prevSlideableWidth - this.slideableWidth;\n    this.x += deltaX * this.cellAlign;\n    this.positionSlider();\n  } else {\n    // do not position slider after lazy load\n    if ( isPositioningSlider ) {\n      this.positionSliderAtSelected();\n    }\n    this.select( this.selectedIndex );\n  }\n};\n\n// -----  ----- //\n\nreturn Flickity;\n\n}));\n","( function( window, factory ) {\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'classie/classie',\n      'eventie/eventie',\n      './flickity',\n      'fizzy-ui-utils/utils'\n    ], function( classie, eventie, Flickity, utils ) {\n      return factory( window, classie, eventie, Flickity, utils );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-classie'),\n      require('eventie'),\n      require('./flickity'),\n      require('fizzy-ui-utils')\n    );\n  } else {\n    // browser global\n    factory(\n      window,\n      window.classie,\n      window.eventie,\n      window.Flickity,\n      window.fizzyUIUtils\n    );\n  }\n\n}( window, function factory( window, classie, eventie, Flickity, utils ) {\n'use strict';\n\nFlickity.createMethods.push('_createLazyload');\n\nFlickity.prototype._createLazyload = function() {\n  this.on( 'cellSelect', this.lazyLoad );\n};\n\nFlickity.prototype.lazyLoad = function() {\n  var lazyLoad = this.options.lazyLoad;\n  if ( !lazyLoad ) {\n    return;\n  }\n  // get adjacent cells, use lazyLoad option for adjacent count\n  var adjCount = typeof lazyLoad == 'number' ? lazyLoad : 0;\n  var cellElems = this.getAdjacentCellElements( adjCount );\n  // get lazy images in those cells\n  var lazyImages = [];\n  for ( var i=0, len = cellElems.length; i < len; i++ ) {\n    var cellElem = cellElems[i];\n    var lazyCellImages = getCellLazyImages( cellElem );\n    lazyImages = lazyImages.concat( lazyCellImages );\n  }\n  // load lazy images\n  for ( i=0, len = lazyImages.length; i < len; i++ ) {\n    var img = lazyImages[i];\n    new LazyLoader( img, this );\n  }\n};\n\nfunction getCellLazyImages( cellElem ) {\n  // check if cell element is lazy image\n  if ( cellElem.nodeName == 'IMG' &&\n    cellElem.getAttribute('data-flickity-lazyload') ) {\n    return [ cellElem ];\n  }\n  // select lazy images in cell\n  var imgs = cellElem.querySelectorAll('img[data-flickity-lazyload]');\n  return utils.makeArray( imgs );\n}\n\n// -------------------------- LazyLoader -------------------------- //\n\n/**\n * class to handle loading images\n */\nfunction LazyLoader( img, flickity ) {\n  this.img = img;\n  this.flickity = flickity;\n  this.load();\n}\n\nLazyLoader.prototype.handleEvent = utils.handleEvent;\n\nLazyLoader.prototype.load = function() {\n  eventie.bind( this.img, 'load', this );\n  eventie.bind( this.img, 'error', this );\n  // load image\n  this.img.src = this.img.getAttribute('data-flickity-lazyload');\n  // remove attr\n  this.img.removeAttribute('data-flickity-lazyload');\n};\n\nLazyLoader.prototype.onload = function( event ) {\n  this.complete( event, 'flickity-lazyloaded' );\n};\n\nLazyLoader.prototype.onerror = function( event ) {\n  this.complete( event, 'flickity-lazyerror' );\n};\n\nLazyLoader.prototype.complete = function( event, className ) {\n  // unbind events\n  eventie.unbind( this.img, 'load', this );\n  eventie.unbind( this.img, 'error', this );\n\n  var cell = this.flickity.getParentCell( this.img );\n  var cellElem = cell && cell.element;\n  this.flickity.cellSizeChange( cellElem );\n\n  classie.add( this.img, className );\n  this.flickity.dispatchEvent( 'lazyLoad', event, cellElem );\n};\n\n// -----  ----- //\n\nFlickity.LazyLoader = LazyLoader;\n\nreturn Flickity;\n\n}));\n","/*!\n * Flickity v1.2.1\n * Touch, responsive, flickable galleries\n *\n * Licensed GPLv3 for open source use\n * or Flickity Commercial License for commercial use\n *\n * http://flickity.metafizzy.co\n * Copyright 2015 Metafizzy\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      './flickity',\n      './drag',\n      './prev-next-button',\n      './page-dots',\n      './player',\n      './add-remove-cell',\n      './lazyload'\n    ], factory );\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      require('./flickity'),\n      require('./drag'),\n      require('./prev-next-button'),\n      require('./page-dots'),\n      require('./player'),\n      require('./add-remove-cell'),\n      require('./lazyload')\n    );\n  }\n\n})( window, function factory( Flickity ) {\n  /*jshint strict: false*/\n  return Flickity;\n});\n","import $ from 'jquery';\nimport Flickity from 'flickity';\n\n// This is required to fix an iOS10 bug for Flickity.\n// It is our own implementation of the Flickity 2.0 fix found here: http://bit.ly/2kU4mKW\n$(window).on('dragStart', (event) => {\n  const $target = $(event.target);\n  const $flickityEnabledEl = $target.closest('.flickity-enabled');\n\n  if ($flickityEnabledEl.length) {\n    const flickity = Flickity.data($flickityEnabledEl.get(0));\n\n    window.removeEventListener('scroll', flickity);\n  }\n});\n","\n'use strict'\n\nvar selectors = [\n\t'iframe[src*=\"player.vimeo.com\"]',\n\t'iframe[src*=\"youtube.com\"]',\n\t'iframe[src*=\"youtube-nocookie.com\"]',\n\t'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n\t'object'\n]\n\nvar css = '.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}'\n\nmodule.exports = function (parentSelector, opts) {\n\tparentSelector = parentSelector || 'body'\n\topts = opts || {}\n\n\tif (isObject(parentSelector)) {\n\t\topts = parentSelector\n\t\tparentSelector = 'body'\n\t}\n\n\topts.ignore = opts.ignore || ''\n\topts.players = opts.players || ''\n\n\tvar containers = queryAll(parentSelector)\n\tif (!hasLength(containers)) return\n\n\tif (!document.getElementById('fit-vids-style')) {\n\t\tvar head = document.head || document.getElementsByTagName('head')[0]\n\t\thead.appendChild(styles())\n\t}\n\n\tvar custom = toSelectorArray(opts.players) || []\n\tvar ignored = toSelectorArray(opts.ignore) || []\n\tvar selector = selectors\n\t\t.filter(notIgnored(ignored))\n\t\t.concat(custom)\n\t\t.join()\n\n\tif (!hasLength(selector)) return\n\n\tcontainers.forEach(function (container) {\n\t\tvar videos = queryAll(container, selector)\n\t\tvideos.forEach(function (video) {\n\t\t\twrap(video)\n\t\t})\n\t})\n}\n\nfunction queryAll (el, selector) {\n\tif (typeof el === 'string') {\n\t\tselector = el\n\t\tel = document\n\t}\n\treturn Array.prototype.slice.call(el.querySelectorAll(selector))\n}\n\nfunction toSelectorArray (input) {\n\tif (typeof input === 'string') {\n\t\treturn input.split(',').map(trim).filter(hasLength)\n\t} else if (isArray(input)) {\n\t\treturn flatten(input.map(toSelectorArray).filter(hasLength))\n\t}\n\treturn input || []\n}\n\nfunction wrap (el) {\n\tif (/fluid-width-video-wrapper/.test(el.parentNode.className)) return\n\n\tvar widthAttr = parseInt(el.getAttribute('width'), 10)\n\tvar heightAttr = parseInt(el.getAttribute('height'), 10)\n\n\tvar width = !isNaN(widthAttr) ? widthAttr : el.clientWidth\n\tvar height = !isNaN(heightAttr) ? heightAttr : el.clientHeight\n\tvar aspect = height / width\n\n\tel.removeAttribute('width')\n\tel.removeAttribute('height')\n\n\tvar wrapper = document.createElement('div')\n\tel.parentNode.insertBefore(wrapper, el)\n\twrapper.className = 'fluid-width-video-wrapper'\n\twrapper.style.paddingTop = (aspect * 100) + '%'\n\twrapper.appendChild(el)\n}\n\nfunction styles () {\n\tvar div = document.createElement('div')\n\tdiv.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>'\n\treturn div.childNodes[1]\n}\n\nfunction notIgnored (ignored) {\n\tif (ignored.length < 1) {\n\t\treturn function () {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn function (selector) {\n\t\treturn ignored.indexOf(selector) === -1\n\t}\n}\n\nfunction hasLength (input) {\n\treturn input.length > 0\n}\n\nfunction trim (str) {\n\treturn str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction flatten (input) {\n\treturn [].concat.apply([], input)\n}\n\nfunction isObject (input) {\n\treturn Object.prototype.toString.call(input) === '[object Object]'\n}\n\nfunction isArray (input) {\n\treturn Object.prototype.toString.call(input) === '[object Array]'\n}\n","'use strict';\n\n// forEach method, could be shipped as part of an Object Literal/Module\nfunction forEach(array, callback, scope) {\n  var index = 0;\n\n  for (index = 0; index < array.length; index += 1) {\n    callback.call(scope, array[index], index); // passes back stuff we need\n  }\n}\n\nfunction hasClass(el, className) {\n  var regex = new RegExp('^' + className + '| +' + className, 'g');\n\n  return el.className.match(regex);\n}\n\nfunction addClass(el, className) {\n  // Return if it already has the className\n  if (hasClass(el, className)) return;\n\n  el.className += ' ' + className;\n}\n\nfunction removeClass(el, className) {\n  // Return if it doesn't already have the className\n  if (!hasClass(el, className)) return;\n\n  var regex = new RegExp('^' + className + '| +' + className, 'g');\n\n  el.className = el.className.replace(regex, '');\n}\n\nfunction toggleClass(el, className) {\n  if (hasClass(el, className)) {\n    removeClass(el, className);\n  } else {\n    addClass(el, className);\n  }\n}\n\nfunction findPairingFromPairingTrigger(pairings, pairingTrigger) {\n  var foundPairing = null;\n\n  forEach(pairings, function (pairing) {\n    if (pairing.trigger === pairingTrigger) {\n      foundPairing = pairing;\n    }\n  });\n\n  return foundPairing;\n}\n\n/**\n * See {@link https://stackoverflow.com/revisions/2117523/11 Stack Overflow}\n * An RFC4122 v4 compliant uuid solution\n */\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0;\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n\n    return v.toString(16);\n  });\n}\n\nfunction init(groupedContent) {\n  var triggers = groupedContent.triggers;\n  var pairings = groupedContent.pairings;\n\n  triggers.setAttribute('role', 'tablist');\n\n  forEach(pairings, function (pairing, index) {\n    pairing.trigger.setAttribute('role', 'tab');\n    pairing.trigger.setAttribute('aria-controls', groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content');\n\n    if (pairing.trigger.children.length > 0) {\n      forEach(pairing.trigger.children, function (child) {\n        child.setAttribute('tabIndex', '-1');\n      });\n    }\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-selected', 'true');\n      pairing.trigger.setAttribute('tabIndex', '0');\n    } else {\n      pairing.trigger.setAttribute('tabIndex', '-1');\n    }\n\n    pairing.content.id = groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content';\n    pairing.content.setAttribute('role', 'tabpanel');\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nfunction update(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing) {\n    pairing.trigger.removeAttribute('aria-selected');\n    pairing.content.removeAttribute('aria-hidden');\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-selected', 'true');\n      pairing.trigger.setAttribute('tabIndex', '0');\n    } else {\n      pairing.trigger.setAttribute('tabIndex', '-1');\n    }\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nvar a11y = {\n  init: init,\n  update: update\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/** A class for creating, managing, and destroying groupable content as tabs. */\n\nvar TabsLayout = function () {\n  function TabsLayout(groupedContent) {\n    classCallCheck(this, TabsLayout);\n\n    this.groupedContent = groupedContent;\n    this.pairings = groupedContent.pairings;\n    this.events = [];\n\n    this._handleKeydown = this._handleKeydown.bind(this);\n    this._handleClick = this._handleClick.bind(this);\n\n    this._init();\n    a11y.init(this.groupedContent);\n  }\n\n  createClass(TabsLayout, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.events, function (event) {\n        event.el.removeEventListener(event.type, event.fn);\n      });\n    }\n  }, {\n    key: '_init',\n    value: function _init() {\n      var _this = this;\n\n      var existingActive = false;\n\n      forEach(this.pairings, function (pairing) {\n        var trigger = pairing.trigger;\n\n        if (hasClass(trigger, 'active')) {\n          existingActive = true;\n        }\n\n        trigger.addEventListener('keydown', _this._handleKeydown);\n        trigger.addEventListener('click', _this._handleClick);\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'keydown',\n          fn: _this._handleKeydown\n        });\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'click',\n          fn: _this._handleClick\n        });\n      });\n\n      if (!existingActive) {\n        addClass(this.pairings[0].trigger, 'active');\n        addClass(this.pairings[0].content, 'active');\n      }\n    }\n  }, {\n    key: '_handleKeydown',\n    value: function _handleKeydown(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n      var pairingIndex = this.pairings.indexOf(pairing);\n      var prevIndex = pairingIndex - 1 < 0 ? this.pairings.length - 1 : pairingIndex - 1;\n      var nextIndex = pairingIndex + 1 >= this.pairings.length ? 0 : pairingIndex + 1;\n\n      var nextPairing = null;\n\n      switch (event.key) {\n        case 'ArrowLeft':\n          nextPairing = this.pairings[prevIndex];\n          break;\n        case 'ArrowRight':\n          nextPairing = this.pairings[nextIndex];\n          break;\n        default:\n          nextPairing = null;\n          break;\n      }\n\n      // Fast exit if we can't find the tab or tabs\n      if (nextPairing === null) return;\n\n      event.preventDefault();\n\n      forEach(this.pairings, function (inactivePairing) {\n        removeClass(inactivePairing.trigger, 'active');\n        removeClass(inactivePairing.content, 'active');\n      });\n\n      addClass(nextPairing.trigger, 'active');\n      addClass(nextPairing.content, 'active');\n\n      nextPairing.trigger.focus();\n\n      a11y.update(this.groupedContent);\n    }\n  }, {\n    key: '_handleClick',\n    value: function _handleClick(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if we can't find the tab or tabs\n      if (pairing === null) return;\n\n      event.preventDefault();\n\n      forEach(this.pairings, function (inactivePairing) {\n        removeClass(inactivePairing.trigger, 'active');\n        removeClass(inactivePairing.content, 'active');\n      });\n\n      addClass(pairing.trigger, 'active');\n      addClass(pairing.content, 'active');\n\n      a11y.update(this.groupedContent);\n    }\n  }]);\n  return TabsLayout;\n}();\n\nfunction init$1(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing, index) {\n    pairing.trigger.setAttribute('role', 'button');\n    pairing.trigger.setAttribute('aria-controls', groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content');\n    pairing.trigger.setAttribute('tabIndex', '0');\n\n    if (pairing.trigger.children.length > 0) {\n      forEach(pairing.trigger.children, function (child) {\n        child.setAttribute('tabIndex', '-1');\n      });\n    }\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-expanded', 'true');\n    } else {\n      pairing.trigger.setAttribute('aria-expanded', 'false');\n    }\n\n    pairing.content.id = groupedContent.namespace + '-' + groupedContent.id + '-' + index + '-content';\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nfunction update$1(groupedContent) {\n  var pairings = groupedContent.pairings;\n\n  forEach(pairings, function (pairing) {\n    pairing.content.removeAttribute('aria-hidden');\n\n    if (hasClass(pairing.trigger, 'active')) {\n      pairing.trigger.setAttribute('aria-expanded', 'true');\n    } else {\n      pairing.trigger.setAttribute('aria-expanded', 'false');\n    }\n\n    if (!hasClass(pairing.content, 'active')) {\n      pairing.content.setAttribute('aria-hidden', 'true');\n    }\n  });\n}\n\nvar a11y$1 = {\n  init: init$1,\n  update: update$1\n};\n\n/** A class for creating, managing, and destroying groupable content as an accordion. */\n\nvar AccordionLayout = function () {\n  function AccordionLayout(groupedContent) {\n    classCallCheck(this, AccordionLayout);\n\n    this.groupedContent = groupedContent;\n    this.pairings = groupedContent.pairings;\n    this.events = [];\n\n    this._handleKeydown = this._handleKeydown.bind(this);\n    this._handleClick = this._handleClick.bind(this);\n\n    this._init(this.pairings);\n    a11y$1.init(this.groupedContent);\n  }\n\n  createClass(AccordionLayout, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.events, function (event) {\n        event.el.removeEventListener(event.type, event.fn);\n      });\n    }\n  }, {\n    key: '_init',\n    value: function _init() {\n      var _this = this;\n\n      forEach(this.pairings, function (pairing) {\n        var trigger = pairing.trigger;\n        var content = pairing.content;\n\n        trigger.parentNode.insertBefore(content, trigger.nextSibling);\n\n        trigger.addEventListener('keydown', _this._handleKeydown);\n        trigger.addEventListener('click', _this._handleClick);\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'keydown',\n          fn: _this._handleKeydown\n        });\n\n        _this.events.push({\n          trigger: trigger,\n          type: 'click',\n          fn: _this._handleClick\n        });\n      });\n\n      this.groupedContent.contents.remove();\n    }\n  }, {\n    key: '_handleKeydown',\n    value: function _handleKeydown(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if enter isn't pressed or we can't find the group\n      if (event.key !== 'Enter' || pairing === null) return;\n\n      event.preventDefault();\n\n      toggleClass(pairing.trigger, 'active');\n      toggleClass(pairing.content, 'active');\n      a11y$1.update(this.groupedContent);\n    }\n  }, {\n    key: '_handleClick',\n    value: function _handleClick(event) {\n      var trigger = event.currentTarget;\n      var pairing = findPairingFromPairingTrigger(this.pairings, trigger);\n\n      // Fast exit if we can't find the group\n      if (pairing === null) return;\n\n      event.preventDefault();\n\n      toggleClass(pairing.trigger, 'active');\n      toggleClass(pairing.content, 'active');\n      a11y$1.update(this.groupedContent);\n    }\n  }]);\n  return AccordionLayout;\n}();\n\n/**\n * Returns an array of nodes related to the heading node.\n * @param {node} heading - The heading node to search for content from.\n * @returns {node[]}\n */\nfunction getHeadingContent(heading) {\n  var headingTagNames = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n  var tagNameIndex = headingTagNames.indexOf(heading.tagName);\n  var content = [];\n\n  var sibling = heading.nextElementSibling;\n\n  while (sibling !== null && (headingTagNames.indexOf(sibling.tagName) === -1 || headingTagNames.indexOf(sibling.tagName) > tagNameIndex)) {\n    content.push(sibling);\n\n    sibling = sibling.nextElementSibling;\n  }\n\n  return content;\n}\n\n/**\n * Returns an object array representing the heading tree from a given node.\n * Root nodes are evaluated differently, and requires the evaluatingRoot flag\n * to be true.\n * @param {node} el - The node being evaluated.\n * @param {node[]} children - The children of the evaluated node.\n * @param {boolean} [evaluatingRoot] - Whether to evaluate as root node.\n * @returns {Object[]}\n */\nfunction getHeadingTree(el, children) {\n  var evaluatingRoot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var headingTagNames = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];\n  var tagNameIndex = headingTagNames.indexOf(el.tagName);\n  var headings = [];\n\n  var currentLowestTagNameIndex = 5;\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var childTagNameIndex = headingTagNames.indexOf(child.tagName);\n\n    if (childTagNameIndex !== -1 && childTagNameIndex < currentLowestTagNameIndex) {\n      currentLowestTagNameIndex = childTagNameIndex;\n    }\n\n    if (evaluatingRoot && childTagNameIndex !== -1 && childTagNameIndex <= currentLowestTagNameIndex || !evaluatingRoot && childTagNameIndex !== -1 && childTagNameIndex === tagNameIndex + 1) {\n      var siblings = getHeadingContent(child);\n\n      var childNode = {\n        el: child,\n        content: siblings,\n        children: getHeadingTree(child, siblings)\n      };\n\n      headings.push(childNode);\n    }\n  }\n\n  return headings;\n}\n\n/**\n * Returns groupings of headings that meet the minimum sequence value\n * and don't contain any invalid headings.\n * @param {Object[]} headings - An array of heading objects.\n * @param {int[]} invalidHeadings - An array of invalid heading integers,\n *                                  representing indexes of headings.\n * @param {*} minInSequence - Minimum headings in sequence before being considered\n *                            as a grouping.\n * @returns {Object[][]}\n */\nfunction getHeadingGroupsInSequence(headings, invalidHeadings, minInSequence) {\n  var headingGroupsInSequence = [];\n  var currentHeadingGroupInSequence = [];\n  var currentSequence = 0;\n\n  for (var i = 0; i < headings.length; i += 1) {\n    if (invalidHeadings.indexOf(i) === -1) {\n      currentHeadingGroupInSequence.push(headings[i]);\n      currentSequence += 1;\n\n      if (i !== headings.length - 1 && headings[i].el.tagName !== headings[i + 1].el.tagName && invalidHeadings.indexOf(i + 1)) {\n        currentHeadingGroupInSequence = [];\n        currentSequence = 0;\n      } else if (i !== 0 && headings[i].el.tagName !== headings[i - 1].el.tagName) {\n        currentHeadingGroupInSequence.pop();\n        currentSequence -= 1;\n\n        if (currentSequence >= minInSequence) {\n          headingGroupsInSequence.push(currentHeadingGroupInSequence);\n        }\n\n        currentHeadingGroupInSequence = [headings[i]];\n        currentSequence = 1;\n      }\n    }\n  }\n\n  if (currentSequence >= minInSequence) {\n    headingGroupsInSequence.push(currentHeadingGroupInSequence);\n  }\n\n  return headingGroupsInSequence;\n}\n\n/**\n * Generates necessary DOM elements to group related content.\n * Returns a object array representing the grouped content.\n * @param {Object[]} children - An array of objects.\n * @returns {Object[]}\n */\nfunction createGroupedContent(children) {\n  var pairings = [];\n\n  var firstChild = children[0].el;\n  var triggers = document.createElement('div');\n  var contents = document.createElement('div');\n\n  contents = firstChild.parentNode.insertBefore(contents, firstChild.nextSibling);\n  triggers = firstChild.parentNode.insertBefore(triggers, firstChild.nextSibling);\n\n  for (var i = 0; i < children.length; i += 1) {\n    var child = children[i];\n    var trigger = child.el;\n    var content = document.createElement('div');\n\n    trigger = triggers.appendChild(trigger);\n    content = contents.appendChild(content);\n\n    for (var j = 0; j < child.content.length; j += 1) {\n      content.appendChild(child.content[j]);\n    }\n\n    pairings.push({\n      trigger: trigger,\n      content: content\n    });\n  }\n\n  return {\n    triggers: triggers,\n    contents: contents,\n    pairings: pairings\n  };\n}\n\n/**\n * Returns all groupable content within the supplied node.\n * @param {node} node - A node to traverse for groupable content.\n * @returns {Object[][]}\n */\n/*\n * Recursive function:\n *  Returns all groups of headings that\n *  are elegible to become grouped content.\n */\nfunction getGroupedContentSet(node) {\n  var children = node.children;\n  var childrenWithGroupableContent = [];\n  var groupedContentSet = [];\n\n  if (children.length === 0) {\n    return [];\n  }\n\n  for (var i = 0; i < children.length; i += 1) {\n    var childGroupableContent = getGroupedContentSet(children[i]);\n\n    if (childGroupableContent.length > 0) {\n      childrenWithGroupableContent.push(i);\n      groupedContentSet = groupedContentSet.concat(childGroupableContent);\n    }\n  }\n\n  var headingGroupsInSequence = getHeadingGroupsInSequence(children, childrenWithGroupableContent, 3);\n\n  for (var _i = 0; _i < headingGroupsInSequence.length; _i += 1) {\n    groupedContentSet.push(createGroupedContent(headingGroupsInSequence[_i]));\n  }\n\n  return groupedContentSet;\n}\n\n/**\n * When static parsing isn't enough, there's intelliparse™!\n * Searches through dom content to find heading groupings that\n * are elegible to become tab groups.\n * Assumes that content is in a flattened hierarchy in the dom\n * and interprets increasing heading values as a deeper level of nesting.\n * Returns all groupable content as an array of object arrays.\n * @param {node} el - The node who's content will be searched for groupable content.\n * @returns {Object[][]}\n */\nfunction intelliParse(el) {\n  var children = el.children;\n  var heading = el.querySelector('h1, h2, h3, h4, h5, h6');\n\n  // Fast return if there's no headings\n  if (children.length === 0) return [];\n\n  var rootNode = {\n    el: el,\n    content: null,\n    children: getHeadingTree(heading, children, true)\n  };\n\n  return getGroupedContentSet(rootNode);\n}\n\n/**\n * Parses content from a given node based on a static structure.\n * The structure is as follows:\n * <ul class=\"tabs\">\n *   <li class=\"active\">Tab 1</li>\n *   <li>Tab 2</li>\n *   <li>Tab 3</li>\n * </ul>\n *\n * <ul class=\"tabs-content\">\n *   <li class=\"active\">\n *     <p>Tab 1 content goes here.</p>\n *   </li>\n *   <li>\n *     <p>Tab 2 content goes here.</p>\n *   </li>\n *   <li>\n *     <p>Tab 3 content goes here.</p>\n *   </li>\n * </ul>\n * Returns all groupable content as an array of object arrays.\n * @param {node} el - The node who's content will be searched for groupable content.\n * @returns {Object[][]}\n */\nfunction staticParse(el) {\n  var groupedContentSet = [];\n\n  var tabs = el.querySelectorAll('.tabs');\n\n  for (var i = 0; i < tabs.length; i += 1) {\n    var triggers = tabs[i].children;\n    var contents = tabs[i].nextElementSibling.children;\n\n    // Only add a tab group if equal triggers to contents\n    if (triggers.length === contents.length) {\n      var length = groupedContentSet.push({\n        triggers: tabs[i],\n        contents: tabs[i].nextElementSibling,\n        pairings: []\n      });\n      var index = length - 1;\n\n      for (var j = 0; j < triggers.length; j += 1) {\n        var trigger = triggers[j];\n        var content = contents[j];\n\n        var pairing = {\n          trigger: trigger,\n          content: content\n        };\n\n        groupedContentSet[index].pairings.push(pairing);\n      }\n    }\n  }\n\n  return groupedContentSet;\n}\n\n/**\n * Returns all groupable content as an array of object arrays.\n * @param {node} content - The node to parse for groupable content.\n * @param {boolean} intelliparse - Whether to use intelligent parsing.\n * @returns {Object[][]}\n */\nfunction parse(content) {\n  var intelliparse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var groupedContentSet = intelliparse ? intelliParse(content) : staticParse(content);\n\n  return groupedContentSet;\n}\n\n/** A class for creating, managing, and destroying groupable content. */\n\nvar GroupedContent = function () {\n  /**\n   * Create grouped content\n   * @param {node} el - The element to search for groupable content in.\n   * @param {Object}  [options] - Additional options\n   * @param {string}  [options.layout] - The layout to display groupable content in.\n   * @param {boolean} [options.intelliparse] - The parsing algorithm used to find content with.\n   */\n  function GroupedContent(el) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, GroupedContent);\n\n    this.namespace = 'grouped-content';\n    this.el = el;\n    this.groupedContentInstances = [];\n\n    var layout = options.layout || 'tabs';\n    var intelliparse = !!options.intelliparse;\n\n    forEach(parse(el, intelliparse), function (groupedContent) {\n      var id = uuidv4();\n      var instance = null;\n      var groupedContentWrapper = document.createElement('div');\n\n      groupedContentWrapper = groupedContent.triggers.parentNode.insertBefore(groupedContentWrapper, groupedContent.triggers.nextSibling);\n\n      addClass(groupedContentWrapper, _this.namespace);\n      addClass(groupedContentWrapper, _this.namespace + '-layout-' + layout);\n\n      groupedContentWrapper.appendChild(groupedContent.triggers);\n      groupedContentWrapper.appendChild(groupedContent.contents);\n\n      groupedContent.namespace = _this.namespace;\n      groupedContent.id = id;\n      groupedContent.triggers.id = _this.namespace + '-' + id + '-triggers';\n      groupedContent.contents.id = _this.namespace + '-' + id + '-contents';\n\n      addClass(groupedContent.triggers, _this.namespace + '-triggers');\n      addClass(groupedContent.contents, _this.namespace + '-contents');\n\n      forEach(groupedContent.pairings, function (pairing) {\n        addClass(pairing.trigger, _this.namespace + '-trigger');\n        addClass(pairing.content, _this.namespace + '-content');\n      });\n\n      switch (layout) {\n        case 'accordion':\n          instance = new AccordionLayout(groupedContent);\n          break;\n        case 'tabs':\n        default:\n          instance = new TabsLayout(groupedContent);\n          break;\n      }\n\n      _this.groupedContentInstances.push({\n        groupedContent: groupedContent,\n        instance: instance\n      });\n    });\n  }\n\n  /** Unload all grouped content instances */\n\n\n  createClass(GroupedContent, [{\n    key: 'unload',\n    value: function unload() {\n      forEach(this.groupedContentInstances, function (groupedContentInstance) {\n        groupedContentInstance.instance.unload();\n      });\n    }\n  }]);\n  return GroupedContent;\n}();\n\nmodule.exports = GroupedContent;\n","import $ from 'jquery';\nimport GroupedContent from 'grouped-content';\n\nexport default class RTE {\n  constructor() {\n    this.groupedContents = [];\n    this.$rteContainers = $('.rte');\n\n    this._init();\n  }\n\n  _init() {\n    this.$rteContainers.each((index, rteContainer) => {\n      this.groupedContents.push(new GroupedContent(rteContainer, { layout: 'accordion', intelliparse: false }));\n    });\n  }\n}\n","// Global function called by Google on auth errors.\n// Show an auto error message on all map instances.\nfunction gm_authFailure() {\n  // Editor check\n  const isThemeEditor = window.Shopify && window.Shopify.designMode;\n  if (!isThemeEditor) return;\n\n  const maps = document.querySelectorAll('[data-map-container]');\n  const javascriptApi = 'https://developers.google.com/maps/documentation/javascript/get-api-key';\n  const geocodingApi = 'https://developers.google.com/maps/documentation/geocoding/get-api-key';\n  const errorMessage = `\n    <p>\n      The API key you entered is invalid. To activate your map:\n      <ol>\n        <li>\n          Generate both <a href=\"${javascriptApi}\" target=\"_blank\">JavaScript</a>\n          and <a href=\"${geocodingApi}\" target=\"_blank\">Geocoding</a> API keys.\n        </li>\n        <li>Copy and paste one of them into the theme editor.</li>\n        <li>Save your changes to verify the new API key.</li>\n      </ol>\n    </p>\n  `;\n\n  maps.forEach((map) => {\n    map.innerHTML = `<div class=\"map-error-message\">${errorMessage}</div>`;\n  });\n}\n\nwindow.gm_authFailure = gm_authFailure;\n","import $ from 'jquery';\n\n// Account pages js\nexport default class Account {\n  constructor() {\n\n    // Deal with showing / hiding elements on login page\n    const $formWrapper = $('[data-login-forms]');\n\n    if ($formWrapper.length) {\n      $formWrapper.on('click', '[data-toggle-account-recovery]', () => {\n        $formWrapper.toggleClass('show-account-recovery');\n      });\n\n      if ($('.account-recovery').find('.errors').length > 0) {\n        $formWrapper.toggleClass('show-account-recovery');\n      }\n    }\n\n    this.$customerAddresses = $('[data-address-id]');\n    if (this.$customerAddresses) { this.addressPage(); }\n  }\n\n  addressPage() {\n    const $addressEditLinks = $('[data-edit-address]');\n\n    if ($addressEditLinks.length) {\n      $addressEditLinks.on('click', (event) => {\n        const itemId = $(event.target).attr('data-edit-address');\n        $('[data-address-id]').removeClass('account-address-form-active');\n        $(`[data-address-id=\"${itemId}\"]`).addClass('account-address-form-active');\n      });\n    }\n\n    const $addressDeleteLinks = $('[data-delete-address]');\n\n    if ($addressDeleteLinks.length) {\n      $addressDeleteLinks.on('click', (event) => {\n        const itemId = $(event.target).attr('data-delete-address');\n        Shopify.CustomerAddress.destroy(itemId);\n      });\n    }\n\n    this.$customerAddresses.each(function () {\n      const id = $(this).attr('data-address-id');\n\n      // Initiate provinces for the New Address form\n      new Shopify.CountryProvinceSelector(\n        `customer-addr-${id}-country`,\n        `customer-addr-${id}-province`,\n        {hideElement: `address-province-container-${id}`}\n      );\n    });\n  }\n}\n","import $ from 'jquery';\n\nconst eventHandlers = [];\nlet previousBreakpoint = null;\n\n$(window).on('resize', (event) => {\n  const currentBreakpoint = getBreakpoint();\n\n  if (previousBreakpoint !== currentBreakpoint) {\n    for (let eventHandler of eventHandlers) {\n      eventHandler(event, {\n        previous: previousBreakpoint,\n        current: currentBreakpoint,\n      });\n    }\n  }\n\n  previousBreakpoint = currentBreakpoint;\n});\n\nfunction getBreakpoint() {\n  return window\n    .getComputedStyle(document.documentElement, ':after')\n    .getPropertyValue('content')\n    .replace(/\"/g, '');\n}\n\nfunction isBreakpoint(breakpoint) {\n  return getBreakpoint() === breakpoint;\n}\n\nfunction onBreakpointChange(eventHandler) {\n  if (eventHandlers.indexOf(eventHandler) === -1) {\n    eventHandlers.push(eventHandler);\n  }\n}\n\nfunction offBreakpointChange(eventHandler) {\n  const index = eventHandlers.indexOf(eventHandler);\n\n  if (index !== -1) {\n    eventHandlers.splice(index, 1);\n  }\n}\n\nexport default {\n  isBreakpoint,\n  onBreakpointChange,\n  offBreakpointChange,\n};\n","import layout from '../Layout.js';\n\n// Index pages js\nexport default class Index {\n  constructor() {\n    this._enumerateSections();\n\n    layout.onBreakpointChange(this._enumerateSections);\n    document.addEventListener('shopify:section:reorder', this._enumerateSections);\n  }\n\n  unbind() {\n    layout.offBreakpointChange(this._enumerateSections);\n    document.removeEventListener('shopify:section:load', this._enumerateSections);\n  }\n\n  _enumerateSections() {\n    let indexWrapper = document.getElementsByClassName('index-wrapper');\n\n    if (!indexWrapper.length) {\n      return;\n    }\n\n    indexWrapper = indexWrapper[0];\n\n    const sections = indexWrapper.getElementsByClassName('shopify-section');\n    let foundForward = false;\n    let foundReverse = false;\n\n    for (let i = 0; i < sections.length; i++) {\n      const sectionForward = sections[i];\n      const sectionReverse = sections[(sections.length - 1) - i];\n\n      sectionForward.classList.remove('shopify-section-first');\n      sectionReverse.classList.remove('shopify-section-last');\n\n      if (!foundForward && sectionForward.offsetHeight) {\n        foundForward = true;\n        sectionForward.className += ' shopify-section-first';\n      }\n\n      if (!foundReverse && sectionReverse.offsetHeight) {\n        foundReverse = true;\n        sectionReverse.className += ' shopify-section-last';\n      }\n    }\n  }\n}\n","export default class Sections {\n  constructor() {\n    this.handlers = {};\n    this.instances = {};\n    this._onSectionEvent = this._onSectionEvent.bind(this);\n\n    document.addEventListener('shopify:section:load', this._onSectionEvent);\n    document.addEventListener('shopify:section:unload', this._onSectionEvent);\n    document.addEventListener('shopify:section:select', this._onSectionEvent);\n    document.addEventListener('shopify:section:deselect', this._onSectionEvent);\n    document.addEventListener('shopify:block:select', this._onSectionEvent);\n    document.addEventListener('shopify:block:deselect', this._onSectionEvent);\n  }\n\n  /**\n   * Stop listening for section events, and unbind all handlers.\n   */\n  unbind() {\n    document.removeEventListener('shopify:section:load', this._onSectionEvent);\n    document.removeEventListener('shopify:section:unload', this._onSectionEvent);\n    document.removeEventListener('shopify:section:select', this._onSectionEvent);\n    document.removeEventListener('shopify:section:deselect', this._onSectionEvent);\n    document.removeEventListener('shopify:block:select', this._onSectionEvent);\n    document.removeEventListener('shopify:block:deselect', this._onSectionEvent);\n\n    // Unload all instances\n    for (let i = 0; i < this.instances.length; i++) {\n      this._triggerInstanceEvent(this.instances[i], 'onSectionUnload');\n    }\n\n    this.handlers = {};\n    this.instances = {};\n  }\n\n  /**\n   * Register a section handler.\n   *\n   * @param {string} type\n   *        The section type to handle. The handler will be called for all\n   *        sections with this type.\n   *\n   * @param {function} handler\n   *        The handler function is passed information about a specific section\n   *        instance. The handler is expected to return an object that will be\n   *        associated with the section instance.\n   *\n   *        Section handlers are passed an object with the following parameters:\n   *          {string} id\n   *          An ID that maps to a specific section instance. Typically the\n   *          section's filename for static sections, or a generated ID for\n   *          dynamic sections.\n   *\n   *          {string} type\n   *          The section type, as supplied when registered.\n   *\n   *          {Element} el\n   *          The root DOM element for the section instance.\n   *\n   *          {Object} data\n   *          Data loaded from the section script element. Defaults to an\n   *          empty object.\n   *\n   *          {Function} postMessage\n   *          A function that can be called to pass messages between sections.\n   *          The function should be called with a message \"name\", and\n   *          optionally some data.\n   */\n  register(type, handler) {\n    if (this.handlers[type]) {\n      console.warn(`Sections: section handler already exists of type '${type}'.`);\n    }\n\n    // Store the section handler\n    this.handlers[type] = handler;\n\n    // Init sections for this type\n    this._initSections(type);\n  }\n\n  /**\n   * Initialize sections already on the page.\n   */\n  _initSections(type) {\n    // Fetch all existing sections of our type on the page\n    const dataEls = document.querySelectorAll(`[data-section-type=\"${type}\"]`);\n    if (!dataEls) return;\n\n    // Create an instance for each section\n    for (let i = 0; i < dataEls.length; i++) {\n      const dataEl = dataEls[i];\n      const el = dataEl.parentNode;\n\n      // Get instance ID\n      const idEl = el.querySelector('[data-section-id]');\n\n      if (!idEl) {\n        console.warn(`Sections: unable to find section id for '${type}'.`, el);\n        continue;\n      }\n\n      const sectionId = idEl.getAttribute('data-section-id');\n      if (!sectionId) {\n        console.warn(`Sections: unable to find section id for '${type}'.`, el);\n        continue;\n      }\n\n      this._createInstance(sectionId, el);\n    }\n  }\n\n  _onSectionEvent(event) {\n    const el = event.target;\n    const sectionId = event.detail.sectionId;\n    const blockId = event.detail.blockId;\n    const instance = this.instances[sectionId];\n\n    switch (event.type) {\n      case 'shopify:section:load':\n        this._createInstance(sectionId, el);\n        break;\n\n      case 'shopify:section:unload':\n        this._triggerInstanceEvent(instance, 'onSectionUnload', { el, id: sectionId });\n        delete this.instances[sectionId];\n        break;\n\n      case 'shopify:section:select':\n        this._triggerInstanceEvent(instance, 'onSectionSelect', { el, id: sectionId });\n        break;\n\n      case 'shopify:section:deselect':\n        this._triggerInstanceEvent(instance, 'onSectionDeselect', { el, id: sectionId });\n        break;\n\n      case 'shopify:block:select':\n        this._triggerInstanceEvent(instance, 'onSectionBlockSelect', { el, id: blockId });\n        break;\n\n      case 'shopify:block:deselect':\n        this._triggerInstanceEvent(instance, 'onSectionBlockDeselect', { el, id: blockId });\n        break;\n    }\n  }\n\n  _triggerInstanceEvent(instance, eventName, ...args) {\n    if (instance && instance[eventName]) {\n      instance[eventName](...args);\n    }\n  }\n\n  _postMessage(name, data) {\n    for (const id in this.instances) {\n      this._triggerInstanceEvent(this.instances[id], 'onSectionMessage', name, data);\n    }\n  }\n\n  _createInstance(id, el) {\n    const typeEl = el.querySelector('[data-section-type]');\n    if (!typeEl) return console.warn(`Sections: unable to find section type for id '${id}'.`);\n\n    const type = typeEl.getAttribute('data-section-type');\n    if (!type) return console.warn(`Sections: unable to find section type for id '${id}'.`);\n\n    const handler = this.handlers[type];\n    if (!handler) return console.warn(`Sections: unable to find section handler for type '${type}'.`);\n\n    const data = this._loadData(el);\n    const postMessage = this._postMessage.bind(this);\n\n    this.instances[id] = handler({id, type, el, data, postMessage});\n  }\n\n  _loadData(el) {\n    const dataEl = el.querySelector('[data-section-data]');\n    if (!dataEl) return {};\n\n    // Load data from attribute, or innerHTML\n    const data = dataEl.getAttribute('data-section-data') || dataEl.innerHTML;\n\n    try {\n      return JSON.parse(data);\n    } catch(error) {\n      console.warn(`Sections: invalid section data found. ${error.message}`);\n      return {};\n    }\n  }\n}\n","import $ from 'jquery';\n\nexport default class NavTrigger {\n  constructor(options = {}) {\n    this.$el = $(options.el); // Target element\n    this.$document = $(document);\n\n    this.namespace = options.namespace;\n    this.trigger = options.trigger;\n    this.onShow = options.onShow;\n    this.onHide = options.onHide;\n    this.$overlay = $('.site-navigation-overlay');\n\n    this.isHovering = false;\n    this.isTouching = false;\n    this.isLocked = false;\n\n    this.selector = `.site-navigation .navmenu-depth-1 > .navmenu-id-${this.trigger}`;\n\n    this.events = [\n      // Show/hide target when touched\n      this.$document.on(`touchend.${this.namespace}`, this.selector, event => {\n        event.preventDefault();\n        this.toggle();\n      }),\n\n      // Show/hide target when hovering over the navigation trigger\n      this.$document.on(`mouseenter.${this.namespace}`, this.selector, event => this.show()),\n      this.$document.on(`mouseleave.${this.namespace}`, this.selector, event => this.hide()),\n\n      this.$document.on(`focus.${this.namespace}`, this.selector, event => {\n        this.show();\n      }),\n      this.$document.on(`blur.${this.namespace}`, this.selector, event => {\n        this.hide();\n      }),\n\n      // Keep track of hovering state\n      this.$el.on(`mouseenter.${this.namespace}`, event => {\n        this.isHovering = !this.isTouching;\n        this.isTouching = false;\n      }),\n      this.$el.on(`touchstart.${this.namespace}`, event => {\n        this.isTouching = true;\n      }),\n      this.$el.on(`mouseleave.${this.namespace}`, event => {\n        this.isHovering = false;\n        this.hide();\n      }),\n    ];\n\n    this.addTrigger();\n  }\n\n  unload() {\n    // Reset state\n    this.isHovering = false;\n    this.isLocked = false;\n    this.hide();\n\n    // Unbind events\n    this.events.forEach(event => event.off(`.${this.namespace}`));\n\n    // Remove elements\n    this.removeTriggers();\n  }\n\n  lock() {\n    this.isLocked = true;\n    this.show(true);\n  }\n\n  unlock() {\n    this.isLocked = false;\n    this.hide();\n  }\n\n  toggle() {\n    if (this.$el.revealer('isVisible')) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  /**\n   * Show the target.\n   *\n   * @param {boolean} force\n   *        If true, skip animations.\n   */\n  show(force) {\n    this.$el.revealer('show', force).one('revealer-animating', () => {\n      this.addShim();\n      if (this.onShow) this.onShow();\n    });\n  }\n\n  /**\n   * Hide the target.\n   *\n   * Since the meganav element is not a child of the trigger element, we wait a\n   * few milliseconds to allow time for the mouse to move between elements.\n   */\n  hide() {\n    if (this.isLocked) {\n      return;\n    }\n\n    this.hideOverlay();\n\n    setTimeout(() => {\n      if (this.isHovering) return;\n\n      this.removeShim();\n\n      this.$el.revealer('hide').one('revealer-hide', () => {\n        if (this.onHide) this.onHide();\n      });\n    }, 10);\n  }\n\n  showOverlay() {\n    this.$overlay.show();\n  }\n\n  hideOverlay() {\n    this.$overlay.hide();\n  }\n\n  /**\n   * Marks a specific navigation item as a trigger. Hovering over\n   * that item should cause the target to show.\n   */\n  addTrigger() {\n    const $trigger = $(this.selector);\n    if (!$trigger.length) return;\n\n    // Mark element as a trigger\n    $trigger.attr('data-navmenu-trigger', this.namespace);\n\n    // Disable regular dropdowns\n    $trigger.attr('data-navmenu-ignore', true);\n  }\n\n  removeTriggers() {\n    $(`[data-navmenu-trigger=\"${this.namespace}\"]`).each((index, el) => {\n      const $trigger = $(el);\n      $trigger.removeAttr('data-navmenu-trigger');\n      $trigger.removeData('navmenu-ignore');\n    });\n  }\n\n  /**\n   * Add shim element.\n   *\n   * +---------+\n   * | TRIGGER |\n   * +---------+\n   * | SHIM    |  <- Add shim to allow the mouse to travel between the trigger\n   * +---------+     and target elements without hiding the target\n   * | TARGET  |\n   * +---------+\n   */\n  addShim() {\n    const $trigger = $(this.selector);\n    if (!$trigger.length) return;\n\n\n    // Calculate shim size\n    const padding = 30;\n    const height = this.$el.offset().top - ($trigger.offset().top + $trigger.outerHeight());\n    const width = $trigger.outerWidth() + padding * 2;\n\n    // Create shim element\n    const $shim = $('<div>', {\n      class: 'navtrigger-shim',\n      css: {\n        position: 'absolute',\n        top: '100%',\n        left: padding * -1,\n        width,\n        height,\n      },\n    });\n\n    $trigger.append($shim);\n  }\n\n  /**\n   * Remove shim element.\n   */\n  removeShim() {\n    const $trigger = $(this.selector);\n    $trigger.find('.navtrigger-shim').remove();\n  }\n}\n","module.exports = debounce\n\nfunction debounce (fn, delay, at_start, guarantee) {\n  var timeout\n  var args\n  var self\n\n  return function debounced () {\n    self = this\n    args = Array.prototype.slice.call(arguments)\n\n    if (timeout && (at_start || guarantee)) {\n      return\n    } else if (!at_start) {\n      clear()\n\n      timeout = setTimeout(run, delay)\n      return timeout\n    }\n\n    timeout = setTimeout(clear, delay)\n    fn.apply(self, args)\n\n    function run () {\n      clear()\n      fn.apply(self, args)\n    }\n\n    function clear () {\n      clearTimeout(timeout)\n      timeout = null\n    }\n  }\n}\n","import $ from 'jquery';\nimport debounce from 'just-debounce';\n\nexport default class Map {\n  constructor(el) {\n    this.el = el;\n    this.map = null;\n    this.center = null;\n\n    this.container = this.el.querySelector('[data-map-container]');\n    this.container.innerHTML = '';\n\n    const addressHtml = document.createElement('div');\n    addressHtml.innerHTML = this.el.getAttribute('data-map-address');\n    this.address = addressHtml.innerText;\n\n    // Scale so range is 12 ~ 17, rather than 1 to 6\n    this.zoom = 11 + parseInt(this.el.getAttribute('data-map-zoom'), 10);\n    if (isNaN(this.zoom)) this.zoom = 13;\n\n    this.colors = {\n      a: this.el.getAttribute('data-map-color-a'),\n      b: this.el.getAttribute('data-map-color-b'),\n      c: this.el.getAttribute('data-map-color-c'),\n      d: this.el.getAttribute('data-map-color-d'),\n      e: this.el.getAttribute('data-map-color-e'),\n      f: this.el.getAttribute('data-map-color-f'),\n    };\n    this.resize = this.resize.bind(this);\n  }\n\n  createMap() {\n    return this.geolocate()\n      .done((results) => {\n        this.map = new google.maps.Map(this.container, {\n          center: results[0].geometry.location,\n          clickableIcons: false,\n          disableDefaultUI: true,\n          disableDoubleClickZoom: true,\n          gestureHandling: 'none',\n          keyboardShortcuts: false,\n          maxZoom: this.zoom,\n          minZoom: this.zoom,\n          scrollWheel: false,\n          styles: this.getMapStyles(),\n          zoom: this.zoom,\n          zoomControl: false,\n        });\n        this.center = this.map.getCenter();\n\n        const marker = new google.maps.Marker({\n          clickable: false,\n          map: this.map,\n          position: this.center,\n        });\n\n        google.maps.event.addDomListener(\n          window,\n          'resize',\n          debounce(this.resize, 250, true, true),\n        );\n      })\n      .fail((status) => {\n        const usageLimits = 'https://developers.google.com/maps/faq#usagelimits';\n        let errorMessage;\n\n        switch (status) {\n          case 'ZERO_RESULTS':\n            errorMessage = `<p>Unable to find the address:</p> ${this.address}`;\n            break;\n          case 'OVER_QUERY_LIMIT':\n            errorMessage = `\n              <p>Unable to load Google Maps, you have reached your usage limit.</p>\n              <p>\n                Please visit\n                <a href=\"${usageLimits}\" target=\"_blank\">${usageLimits}</a>\n                for more details.\n              </p>\n            `;\n            break;\n          default:\n            errorMessage = 'Unable to load Google Maps.';\n            break;\n        }\n\n        this.displayErrorInThemeEditor(errorMessage, status);\n      });\n  }\n\n  geolocate() {\n    const deferred = $.Deferred();\n    const geocoder = new google.maps.Geocoder();\n\n    geocoder.geocode({ address: this.address }, (results, status) => {\n      if (status !== google.maps.GeocoderStatus.OK) {\n        deferred.reject(status);\n      }\n\n      deferred.resolve(results);\n    });\n\n    return deferred;\n  }\n\n  resize() {\n    if (this.map) {\n      google.maps.event.trigger(this.map, 'resize');\n      this.map.setCenter(this.center);\n    }\n  }\n\n  unload() {\n    if (this.map) {\n      google.maps.event.clearListeners(this.map, 'resize');\n    }\n  }\n\n  getMapStyles() {\n    return [\n      { elementType: 'geometry', stylers: [{ color: this.colors.e }] },\n      { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n      { elementType: 'labels.text.fill', stylers: [{ color: this.colors.a }] },\n      { elementType: 'labels.text.stroke', stylers: [{ color: this.colors.e }] },\n      { featureType: 'administrative', elementType: 'geometry', stylers: [{ visibility: 'off' }] },\n      { featureType: 'administrative.country', stylers: [{ visibility: 'off' }] },\n      { featureType: 'administrative.land_parcel', stylers: [{ visibility: 'off' }] },\n      { featureType: 'administrative.neighborhood', stylers: [{ visibility: 'off' }] },\n      { featureType: 'administrative.locality', stylers: [{ visibility: 'off' }] },\n      { featureType: 'poi', stylers: [{ visibility: 'off' }] },\n      { featureType: 'road', elementType: 'geometry.fill', stylers: [{ color: this.colors.d }] },\n      { featureType: 'road', elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n      { featureType: 'road.arterial', elementType: 'geometry', stylers: [{ color: this.colors.c }] },\n      { featureType: 'road.highway', elementType: 'geometry', stylers: [{ color: this.colors.b }] },\n      { featureType: 'road.highway.controlled_access', stylers: [{ visibility: 'off' }] },\n      { featureType: 'road.local', elementType: 'labels.text.fill', stylers: [{ color: this.colors.b }] },\n      { featureType: 'road.local', elementType: 'labels.text.stroke', stylers: [{ color: this.colors.e }] },\n      { featureType: 'transit', stylers: [{ visibility: 'off' }] },\n      { featureType: 'water', elementType: 'geometry', stylers: [{ color: this.colors.f }] },\n    ];\n  }\n\n  displayErrorInThemeEditor(errorMessage, status = '') {\n    // Editor check\n    const isThemeEditor = window.Shopify && window.Shopify.designMode;\n\n    if (!isThemeEditor) {\n      return;\n    }\n\n    this.container.innerHTML = `<div class=\"map-error-message\">${errorMessage}</div>`;\n    console.warn(this.container.innerText, status);\n  }\n}\n","import $ from 'jquery';\nimport NavTrigger from '../snippets/NavTrigger';\nimport Map from '../snippets/Map';\nimport layout from '../Layout.js';\n\nexport default class ContactbarStaticSection {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.$map = $('[data-map]', this.$el);\n    this.hasMap = this.$map.length;\n    this.apiKey = section.data.api_key;\n    this.trigger = section.data.trigger;\n    this.postMessage = section.postMessage;\n\n    this.clones = [];\n    this.maps = [];\n    this.clone();\n\n    if (this.hasMap) {\n      this.maps.push(new Map(this.$map[0]));\n\n      if (this.apiKey) {\n        if (window.google === undefined) {\n          $.getScript(`https://maps.googleapis.com/maps/api/js?key=${this.apiKey}`)\n            .done(() => {\n              this.maps.forEach(map => map.createMap());\n            })\n            .fail((status) => {\n              console.error(status);\n            });\n        } else {\n          this.maps.forEach(map => map.createMap());\n        }\n      } else {\n        const javascriptApi = 'https://developers.google.com/maps/documentation/javascript/get-api-key';\n        const geocodingApi = 'https://developers.google.com/maps/documentation/geocoding/get-api-key';\n        const errorMessage = `\n          <p>\n            To activate your map:\n            <ol>\n              <li>\n                Generate both <a href=\"${javascriptApi}\" target=\"_blank\">JavaScript</a>\n                and <a href=\"${geocodingApi}\" target=\"_blank\">Geocoding</a> API keys.\n              </li>\n              <li>Copy and paste one of them into the theme editor.</li>\n              <li>Save your changes to verify the new API key.</li>\n            </ol>\n          </p>\n        `;\n\n        this.maps.forEach(map => map.displayErrorInThemeEditor(errorMessage));\n      }\n    }\n\n    this.navTrigger = new NavTrigger({\n      el: section.el,\n      namespace: 'contactbar',\n      trigger: this.trigger,\n      onShow: () => {\n        this.maps.forEach(map => map.resize());\n        this.postMessage('nav:close-all', {});\n        this.postMessage('nav:close-triggers', { source: this.$el });\n        this.postMessage('nav:show-overlay', { source: this.$el });\n      },\n    });\n\n    this.$mobile = $('.mobilenav-contactbar');\n    this.$info = this.$mobile.find('.contactbar-info');\n    this.$infoTrigger = this.$mobile.find('[data-contactbar-info-trigger]');\n    this.$infoClose = this.$mobile.find('[data-contactbar-info-close]');\n\n    this.events = [\n      // Show mobile info panel\n      this.$infoTrigger.on('click.contactbar', event => this.$info.revealer()),\n\n      // Hide mobile info panel\n      this.$infoClose.on('click.contactbar', event => this.$info.revealer('hide')),\n    ];\n\n    // Handle breakpoint changes while editing\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    layout.onBreakpointChange(this.layoutHandler);\n  }\n\n  onSectionUnload() {\n    this.events.forEach($el => $el.off('.contactbar'));\n    this.clones.forEach(clone => clone.$el.empty());\n    this.maps.forEach(map => map.unload());\n\n    this.navTrigger.unload();\n    layout.offBreakpointChange(this.layoutHandler);\n  }\n\n  onSectionSelect() {\n    this.isEditing = true;\n\n    if (layout.isBreakpoint('M') || layout.isBreakpoint('L')) {\n      this.navTrigger.lock();\n    } else {\n      this.postMessage('mobilenav:open');\n    }\n  }\n\n  onSectionDeselect() {\n    this.isEditing = false;\n\n    if (layout.isBreakpoint('M') || layout.isBreakpoint('L')) {\n      this.navTrigger.unlock();\n    } else {\n      this.postMessage('mobilenav:close');\n    }\n  }\n\n  onSectionMessage(name, data) {\n    if (name === 'nav:close-triggers' && data.source !== this.$el) {\n      this.navTrigger.hide();\n    }\n    if (name === 'nav:show-overlay') {\n      this.navTrigger.showOverlay();\n    }\n  }\n\n  onBreakpointChange() {\n    if (!this.isEditing) return;\n\n    if (layout.isBreakpoint('M') || layout.isBreakpoint('L')) {\n      this.navTrigger.lock();\n      this.postMessage('mobilenav:close');\n    } else {\n      this.navTrigger.unlock();\n      this.postMessage('mobilenav:open');\n    }\n  }\n\n  /**\n   * Copy the mega nav to other parts of the theme.\n   */\n  clone() {\n    const $source = this.$el.find('[data-contactbar-clone-source]').first();\n    if (!$source.length) return;\n\n    const $clone = $source.children().clone();\n\n    // Add contactbar to mobilenav panel\n    const $mobileTarget = $('[data-contactbar-mobile-target]');\n\n    if ($mobileTarget.length) {\n      $mobileTarget.append($clone);\n\n      this.clones.push({\n        $el: $mobileTarget,\n      });\n    }\n\n    // Add contactbar to contact page\n    const $pageTarget = $('[data-contactbar-page-target]');\n\n    if ($pageTarget.length) {\n      $pageTarget.append($clone.clone());\n\n      this.clones.push({\n        $el: $pageTarget,\n      });\n\n      if (this.hasMap) {\n        this.maps.push(new Map($('[data-map]', $pageTarget)[0]));\n      }\n    }\n  }\n}\n","/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n( function( global, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory();\n  } else {\n    // Browser globals\n    global.EvEmitter = factory();\n  }\n\n}( typeof window != 'undefined' ? window : this, function() {\n\n\"use strict\";\n\nfunction EvEmitter() {}\n\nvar proto = EvEmitter.prototype;\n\nproto.on = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // set events hash\n  var events = this._events = this._events || {};\n  // set listeners array\n  var listeners = events[ eventName ] = events[ eventName ] || [];\n  // only add once\n  if ( listeners.indexOf( listener ) == -1 ) {\n    listeners.push( listener );\n  }\n\n  return this;\n};\n\nproto.once = function( eventName, listener ) {\n  if ( !eventName || !listener ) {\n    return;\n  }\n  // add event\n  this.on( eventName, listener );\n  // set once flag\n  // set onceEvents hash\n  var onceEvents = this._onceEvents = this._onceEvents || {};\n  // set onceListeners object\n  var onceListeners = onceEvents[ eventName ] = onceEvents[ eventName ] || {};\n  // set flag\n  onceListeners[ listener ] = true;\n\n  return this;\n};\n\nproto.off = function( eventName, listener ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  var index = listeners.indexOf( listener );\n  if ( index != -1 ) {\n    listeners.splice( index, 1 );\n  }\n\n  return this;\n};\n\nproto.emitEvent = function( eventName, args ) {\n  var listeners = this._events && this._events[ eventName ];\n  if ( !listeners || !listeners.length ) {\n    return;\n  }\n  // copy over to avoid interference if .off() in listener\n  listeners = listeners.slice(0);\n  args = args || [];\n  // once stuff\n  var onceListeners = this._onceEvents && this._onceEvents[ eventName ];\n\n  for ( var i=0; i < listeners.length; i++ ) {\n    var listener = listeners[i]\n    var isOnce = onceListeners && onceListeners[ listener ];\n    if ( isOnce ) {\n      // remove listener\n      // remove before trigger to prevent recursion\n      this.off( eventName, listener );\n      // unset once flag\n      delete onceListeners[ listener ];\n    }\n    // trigger listener\n    listener.apply( this, args );\n  }\n\n  return this;\n};\n\nproto.allOff = function() {\n  delete this._events;\n  delete this._onceEvents;\n};\n\nreturn EvEmitter;\n\n}));\n","/*!\n * imagesLoaded v4.1.3\n * JavaScript is all like \"You images are done yet or what?\"\n * MIT License\n */\n\n( function( window, factory ) { 'use strict';\n  // universal module definition\n\n  /*global define: false, module: false, require: false */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'ev-emitter/ev-emitter'\n    ], function( EvEmitter ) {\n      return factory( window, EvEmitter );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('ev-emitter')\n    );\n  } else {\n    // browser global\n    window.imagesLoaded = factory(\n      window,\n      window.EvEmitter\n    );\n  }\n\n})( typeof window !== 'undefined' ? window : this,\n\n// --------------------------  factory -------------------------- //\n\nfunction factory( window, EvEmitter ) {\n\n'use strict';\n\nvar $ = window.jQuery;\nvar console = window.console;\n\n// -------------------------- helpers -------------------------- //\n\n// extend objects\nfunction extend( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n}\n\n// turn element or nodeList into an array\nfunction makeArray( obj ) {\n  var ary = [];\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    ary = obj;\n  } else if ( typeof obj.length == 'number' ) {\n    // convert nodeList to array\n    for ( var i=0; i < obj.length; i++ ) {\n      ary.push( obj[i] );\n    }\n  } else {\n    // array of single index\n    ary.push( obj );\n  }\n  return ary;\n}\n\n// -------------------------- imagesLoaded -------------------------- //\n\n/**\n * @param {Array, Element, NodeList, String} elem\n * @param {Object or Function} options - if function, use as callback\n * @param {Function} onAlways - callback function\n */\nfunction ImagesLoaded( elem, options, onAlways ) {\n  // coerce ImagesLoaded() without new, to be new ImagesLoaded()\n  if ( !( this instanceof ImagesLoaded ) ) {\n    return new ImagesLoaded( elem, options, onAlways );\n  }\n  // use elem as selector string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelectorAll( elem );\n  }\n\n  this.elements = makeArray( elem );\n  this.options = extend( {}, this.options );\n\n  if ( typeof options == 'function' ) {\n    onAlways = options;\n  } else {\n    extend( this.options, options );\n  }\n\n  if ( onAlways ) {\n    this.on( 'always', onAlways );\n  }\n\n  this.getImages();\n\n  if ( $ ) {\n    // add jQuery Deferred object\n    this.jqDeferred = new $.Deferred();\n  }\n\n  // HACK check async to allow time to bind listeners\n  setTimeout( function() {\n    this.check();\n  }.bind( this ));\n}\n\nImagesLoaded.prototype = Object.create( EvEmitter.prototype );\n\nImagesLoaded.prototype.options = {};\n\nImagesLoaded.prototype.getImages = function() {\n  this.images = [];\n\n  // filter & find items if we have an item selector\n  this.elements.forEach( this.addElementImages, this );\n};\n\n/**\n * @param {Node} element\n */\nImagesLoaded.prototype.addElementImages = function( elem ) {\n  // filter siblings\n  if ( elem.nodeName == 'IMG' ) {\n    this.addImage( elem );\n  }\n  // get background image on element\n  if ( this.options.background === true ) {\n    this.addElementBackgroundImages( elem );\n  }\n\n  // find children\n  // no non-element nodes, #143\n  var nodeType = elem.nodeType;\n  if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\n    return;\n  }\n  var childImgs = elem.querySelectorAll('img');\n  // concat childElems to filterFound array\n  for ( var i=0; i < childImgs.length; i++ ) {\n    var img = childImgs[i];\n    this.addImage( img );\n  }\n\n  // get child background images\n  if ( typeof this.options.background == 'string' ) {\n    var children = elem.querySelectorAll( this.options.background );\n    for ( i=0; i < children.length; i++ ) {\n      var child = children[i];\n      this.addElementBackgroundImages( child );\n    }\n  }\n};\n\nvar elementNodeTypes = {\n  1: true,\n  9: true,\n  11: true\n};\n\nImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    // Firefox returns null if in a hidden iframe https://bugzil.la/548397\n    return;\n  }\n  // get url inside url(\"...\")\n  var reURL = /url\\((['\"])?(.*?)\\1\\)/gi;\n  var matches = reURL.exec( style.backgroundImage );\n  while ( matches !== null ) {\n    var url = matches && matches[2];\n    if ( url ) {\n      this.addBackground( url, elem );\n    }\n    matches = reURL.exec( style.backgroundImage );\n  }\n};\n\n/**\n * @param {Image} img\n */\nImagesLoaded.prototype.addImage = function( img ) {\n  var loadingImage = new LoadingImage( img );\n  this.images.push( loadingImage );\n};\n\nImagesLoaded.prototype.addBackground = function( url, elem ) {\n  var background = new Background( url, elem );\n  this.images.push( background );\n};\n\nImagesLoaded.prototype.check = function() {\n  var _this = this;\n  this.progressedCount = 0;\n  this.hasAnyBroken = false;\n  // complete if no images\n  if ( !this.images.length ) {\n    this.complete();\n    return;\n  }\n\n  function onProgress( image, elem, message ) {\n    // HACK - Chrome triggers event before object properties have changed. #83\n    setTimeout( function() {\n      _this.progress( image, elem, message );\n    });\n  }\n\n  this.images.forEach( function( loadingImage ) {\n    loadingImage.once( 'progress', onProgress );\n    loadingImage.check();\n  });\n};\n\nImagesLoaded.prototype.progress = function( image, elem, message ) {\n  this.progressedCount++;\n  this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;\n  // progress event\n  this.emitEvent( 'progress', [ this, image, elem ] );\n  if ( this.jqDeferred && this.jqDeferred.notify ) {\n    this.jqDeferred.notify( this, image );\n  }\n  // check if completed\n  if ( this.progressedCount == this.images.length ) {\n    this.complete();\n  }\n\n  if ( this.options.debug && console ) {\n    console.log( 'progress: ' + message, image, elem );\n  }\n};\n\nImagesLoaded.prototype.complete = function() {\n  var eventName = this.hasAnyBroken ? 'fail' : 'done';\n  this.isComplete = true;\n  this.emitEvent( eventName, [ this ] );\n  this.emitEvent( 'always', [ this ] );\n  if ( this.jqDeferred ) {\n    var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';\n    this.jqDeferred[ jqMethod ]( this );\n  }\n};\n\n// --------------------------  -------------------------- //\n\nfunction LoadingImage( img ) {\n  this.img = img;\n}\n\nLoadingImage.prototype = Object.create( EvEmitter.prototype );\n\nLoadingImage.prototype.check = function() {\n  // If complete is true and browser supports natural sizes,\n  // try to check for image status manually.\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    // report based on naturalWidth\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    return;\n  }\n\n  // If none of the checks above matched, simulate loading on detached element.\n  this.proxyImage = new Image();\n  this.proxyImage.addEventListener( 'load', this );\n  this.proxyImage.addEventListener( 'error', this );\n  // bind to image as well for Firefox. #191\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.proxyImage.src = this.img.src;\n};\n\nLoadingImage.prototype.getIsImageComplete = function() {\n  return this.img.complete && this.img.naturalWidth !== undefined;\n};\n\nLoadingImage.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.img, message ] );\n};\n\n// ----- events ----- //\n\n// trigger specified handler for event type\nLoadingImage.prototype.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nLoadingImage.prototype.onload = function() {\n  this.confirm( true, 'onload' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.onerror = function() {\n  this.confirm( false, 'onerror' );\n  this.unbindEvents();\n};\n\nLoadingImage.prototype.unbindEvents = function() {\n  this.proxyImage.removeEventListener( 'load', this );\n  this.proxyImage.removeEventListener( 'error', this );\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\n// -------------------------- Background -------------------------- //\n\nfunction Background( url, element ) {\n  this.url = url;\n  this.element = element;\n  this.img = new Image();\n}\n\n// inherit LoadingImage prototype\nBackground.prototype = Object.create( LoadingImage.prototype );\n\nBackground.prototype.check = function() {\n  this.img.addEventListener( 'load', this );\n  this.img.addEventListener( 'error', this );\n  this.img.src = this.url;\n  // check if image is already complete\n  var isComplete = this.getIsImageComplete();\n  if ( isComplete ) {\n    this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n    this.unbindEvents();\n  }\n};\n\nBackground.prototype.unbindEvents = function() {\n  this.img.removeEventListener( 'load', this );\n  this.img.removeEventListener( 'error', this );\n};\n\nBackground.prototype.confirm = function( isLoaded, message ) {\n  this.isLoaded = isLoaded;\n  this.emitEvent( 'progress', [ this, this.element, message ] );\n};\n\n// -------------------------- jQuery -------------------------- //\n\nImagesLoaded.makeJQueryPlugin = function( jQuery ) {\n  jQuery = jQuery || window.jQuery;\n  if ( !jQuery ) {\n    return;\n  }\n  // set local variable\n  $ = jQuery;\n  // $().imagesLoaded()\n  $.fn.imagesLoaded = function( options, callback ) {\n    var instance = new ImagesLoaded( this, options, callback );\n    return instance.jqDeferred.promise( $(this) );\n  };\n};\n// try making plugin\nImagesLoaded.makeJQueryPlugin();\n\n// --------------------------  -------------------------- //\n\nreturn ImagesLoaded;\n\n});\n","/*!\n * getSize v2.0.2\n * measure size of elements\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n/*global define: false, module: false, console: false */\n\n( function( window, factory ) {\n  'use strict';\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( function() {\n      return factory();\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See http://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * WebKit measures the outer-width on style.width on border-box elems\n   * IE & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n\n  getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize( style.width ) == 200;\n  body.removeChild( div );\n\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n","/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false */\n  'use strict';\n  // universal module definition\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.matchesSelector = factory();\n  }\n\n}( window, function factory() {\n  'use strict';\n\n  var matchesMethod = ( function() {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if ( ElemProto.matches ) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if ( ElemProto.matchesSelector ) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = [ 'webkit', 'moz', 'ms', 'o' ];\n\n    for ( var i=0; i < prefixes.length; i++ ) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if ( ElemProto[ method ] ) {\n        return method;\n      }\n    }\n  })();\n\n  return function matchesSelector( elem, selector ) {\n    return elem[ matchesMethod ]( selector );\n  };\n\n}));\n","/**\n * Fizzy UI utils v2.0.5\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n( function( window, factory ) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'desandro-matches-selector/matches-selector'\n    ], function( matchesSelector ) {\n      return factory( window, matchesSelector );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('desandro-matches-selector')\n    );\n  } else {\n    // browser global\n    window.fizzyUIUtils = factory(\n      window,\n      window.matchesSelector\n    );\n  }\n\n}( window, function factory( window, matchesSelector ) {\n\n'use strict';\n\nvar utils = {};\n\n// ----- extend ----- //\n\n// extends objects\nutils.extend = function( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n};\n\n// ----- modulo ----- //\n\nutils.modulo = function( num, div ) {\n  return ( ( num % div ) + div ) % div;\n};\n\n// ----- makeArray ----- //\n\n// turn element or nodeList into an array\nutils.makeArray = function( obj ) {\n  var ary = [];\n  if ( Array.isArray( obj ) ) {\n    // use object if already an array\n    ary = obj;\n  } else if ( obj && typeof obj == 'object' &&\n    typeof obj.length == 'number' ) {\n    // convert nodeList to array\n    for ( var i=0; i < obj.length; i++ ) {\n      ary.push( obj[i] );\n    }\n  } else {\n    // array of single index\n    ary.push( obj );\n  }\n  return ary;\n};\n\n// ----- removeFrom ----- //\n\nutils.removeFrom = function( ary, obj ) {\n  var index = ary.indexOf( obj );\n  if ( index != -1 ) {\n    ary.splice( index, 1 );\n  }\n};\n\n// ----- getParent ----- //\n\nutils.getParent = function( elem, selector ) {\n  while ( elem.parentNode && elem != document.body ) {\n    elem = elem.parentNode;\n    if ( matchesSelector( elem, selector ) ) {\n      return elem;\n    }\n  }\n};\n\n// ----- getQueryElement ----- //\n\n// use element as selector string\nutils.getQueryElement = function( elem ) {\n  if ( typeof elem == 'string' ) {\n    return document.querySelector( elem );\n  }\n  return elem;\n};\n\n// ----- handleEvent ----- //\n\n// enable .ontype to trigger from .addEventListener( elem, 'type' )\nutils.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\n// ----- filterFindElements ----- //\n\nutils.filterFindElements = function( elems, selector ) {\n  // make array of elems\n  elems = utils.makeArray( elems );\n  var ffElems = [];\n\n  elems.forEach( function( elem ) {\n    // check that elem is an actual element\n    if ( !( elem instanceof HTMLElement ) ) {\n      return;\n    }\n    // add elem if no selector\n    if ( !selector ) {\n      ffElems.push( elem );\n      return;\n    }\n    // filter & find items if we have a selector\n    // filter\n    if ( matchesSelector( elem, selector ) ) {\n      ffElems.push( elem );\n    }\n    // find children\n    var childElems = elem.querySelectorAll( selector );\n    // concat childElems to filterFound array\n    for ( var i=0; i < childElems.length; i++ ) {\n      ffElems.push( childElems[i] );\n    }\n  });\n\n  return ffElems;\n};\n\n// ----- debounceMethod ----- //\n\nutils.debounceMethod = function( _class, methodName, threshold ) {\n  // original method\n  var method = _class.prototype[ methodName ];\n  var timeoutName = methodName + 'Timeout';\n\n  _class.prototype[ methodName ] = function() {\n    var timeout = this[ timeoutName ];\n    if ( timeout ) {\n      clearTimeout( timeout );\n    }\n    var args = arguments;\n\n    var _this = this;\n    this[ timeoutName ] = setTimeout( function() {\n      method.apply( _this, args );\n      delete _this[ timeoutName ];\n    }, threshold || 100 );\n  };\n};\n\n// ----- docReady ----- //\n\nutils.docReady = function( callback ) {\n  var readyState = document.readyState;\n  if ( readyState == 'complete' || readyState == 'interactive' ) {\n    // do async to allow for other scripts to run. metafizzy/flickity#441\n    setTimeout( callback );\n  } else {\n    document.addEventListener( 'DOMContentLoaded', callback );\n  }\n};\n\n// ----- htmlInit ----- //\n\n// http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\nutils.toDashed = function( str ) {\n  return str.replace( /(.)([A-Z])/g, function( match, $1, $2 ) {\n    return $1 + '-' + $2;\n  }).toLowerCase();\n};\n\nvar console = window.console;\n/**\n * allow user to initialize classes via [data-namespace] or .js-namespace class\n * htmlInit( Widget, 'widgetName' )\n * options are parsed from data-namespace-options\n */\nutils.htmlInit = function( WidgetClass, namespace ) {\n  utils.docReady( function() {\n    var dashedNamespace = utils.toDashed( namespace );\n    var dataAttr = 'data-' + dashedNamespace;\n    var dataAttrElems = document.querySelectorAll( '[' + dataAttr + ']' );\n    var jsDashElems = document.querySelectorAll( '.js-' + dashedNamespace );\n    var elems = utils.makeArray( dataAttrElems )\n      .concat( utils.makeArray( jsDashElems ) );\n    var dataOptionsAttr = dataAttr + '-options';\n    var jQuery = window.jQuery;\n\n    elems.forEach( function( elem ) {\n      var attr = elem.getAttribute( dataAttr ) ||\n        elem.getAttribute( dataOptionsAttr );\n      var options;\n      try {\n        options = attr && JSON.parse( attr );\n      } catch ( error ) {\n        // log error, do not initialize\n        if ( console ) {\n          console.error( 'Error parsing ' + dataAttr + ' on ' + elem.className +\n          ': ' + error );\n        }\n        return;\n      }\n      // initialize\n      var instance = new WidgetClass( elem, options );\n      // make available via $().data('namespace')\n      if ( jQuery ) {\n        jQuery.data( elem, namespace, instance );\n      }\n    });\n\n  });\n};\n\n// -----  ----- //\n\nreturn utils;\n\n}));\n","/**\n * Outlayer Item\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size'\n      ],\n      factory\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      require('ev-emitter'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Outlayer = {};\n    window.Outlayer.Item = factory(\n      window.EvEmitter,\n      window.getSize\n    );\n  }\n\n}( window, function factory( EvEmitter, getSize ) {\n'use strict';\n\n// ----- helpers ----- //\n\nfunction isEmptyObj( obj ) {\n  for ( var prop in obj ) {\n    return false;\n  }\n  prop = null;\n  return true;\n}\n\n// -------------------------- CSS3 support -------------------------- //\n\n\nvar docElemStyle = document.documentElement.style;\n\nvar transitionProperty = typeof docElemStyle.transition == 'string' ?\n  'transition' : 'WebkitTransition';\nvar transformProperty = typeof docElemStyle.transform == 'string' ?\n  'transform' : 'WebkitTransform';\n\nvar transitionEndEvent = {\n  WebkitTransition: 'webkitTransitionEnd',\n  transition: 'transitionend'\n}[ transitionProperty ];\n\n// cache all vendor properties that could have vendor prefix\nvar vendorProperties = {\n  transform: transformProperty,\n  transition: transitionProperty,\n  transitionDuration: transitionProperty + 'Duration',\n  transitionProperty: transitionProperty + 'Property',\n  transitionDelay: transitionProperty + 'Delay'\n};\n\n// -------------------------- Item -------------------------- //\n\nfunction Item( element, layout ) {\n  if ( !element ) {\n    return;\n  }\n\n  this.element = element;\n  // parent layout class, i.e. Masonry, Isotope, or Packery\n  this.layout = layout;\n  this.position = {\n    x: 0,\n    y: 0\n  };\n\n  this._create();\n}\n\n// inherit EvEmitter\nvar proto = Item.prototype = Object.create( EvEmitter.prototype );\nproto.constructor = Item;\n\nproto._create = function() {\n  // transition objects\n  this._transn = {\n    ingProperties: {},\n    clean: {},\n    onEnd: {}\n  };\n\n  this.css({\n    position: 'absolute'\n  });\n};\n\n// trigger specified handler for event type\nproto.handleEvent = function( event ) {\n  var method = 'on' + event.type;\n  if ( this[ method ] ) {\n    this[ method ]( event );\n  }\n};\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * apply CSS styles to element\n * @param {Object} style\n */\nproto.css = function( style ) {\n  var elemStyle = this.element.style;\n\n  for ( var prop in style ) {\n    // use vendor property if available\n    var supportedProp = vendorProperties[ prop ] || prop;\n    elemStyle[ supportedProp ] = style[ prop ];\n  }\n};\n\n // measure position, and sets it\nproto.getPosition = function() {\n  var style = getComputedStyle( this.element );\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  var xValue = style[ isOriginLeft ? 'left' : 'right' ];\n  var yValue = style[ isOriginTop ? 'top' : 'bottom' ];\n  var x = parseFloat( xValue );\n  var y = parseFloat( yValue );\n  // convert percent to pixels\n  var layoutSize = this.layout.size;\n  if ( xValue.indexOf('%') != -1 ) {\n    x = ( x / 100 ) * layoutSize.width;\n  }\n  if ( yValue.indexOf('%') != -1 ) {\n    y = ( y / 100 ) * layoutSize.height;\n  }\n  // clean up 'auto' or other non-integer values\n  x = isNaN( x ) ? 0 : x;\n  y = isNaN( y ) ? 0 : y;\n  // remove padding from measurement\n  x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n  y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n\n  this.position.x = x;\n  this.position.y = y;\n};\n\n// set settled position, apply padding\nproto.layoutPosition = function() {\n  var layoutSize = this.layout.size;\n  var style = {};\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n\n  // x\n  var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n  var xProperty = isOriginLeft ? 'left' : 'right';\n  var xResetProperty = isOriginLeft ? 'right' : 'left';\n\n  var x = this.position.x + layoutSize[ xPadding ];\n  // set in percentage or pixels\n  style[ xProperty ] = this.getXValue( x );\n  // reset other property\n  style[ xResetProperty ] = '';\n\n  // y\n  var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n  var yProperty = isOriginTop ? 'top' : 'bottom';\n  var yResetProperty = isOriginTop ? 'bottom' : 'top';\n\n  var y = this.position.y + layoutSize[ yPadding ];\n  // set in percentage or pixels\n  style[ yProperty ] = this.getYValue( y );\n  // reset other property\n  style[ yResetProperty ] = '';\n\n  this.css( style );\n  this.emitEvent( 'layout', [ this ] );\n};\n\nproto.getXValue = function( x ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && !isHorizontal ?\n    ( ( x / this.layout.size.width ) * 100 ) + '%' : x + 'px';\n};\n\nproto.getYValue = function( y ) {\n  var isHorizontal = this.layout._getOption('horizontal');\n  return this.layout.options.percentPosition && isHorizontal ?\n    ( ( y / this.layout.size.height ) * 100 ) + '%' : y + 'px';\n};\n\nproto._transitionTo = function( x, y ) {\n  this.getPosition();\n  // get current x & y from top/left\n  var curX = this.position.x;\n  var curY = this.position.y;\n\n  var didNotMove = x == this.position.x && y == this.position.y;\n\n  // save end position\n  this.setPosition( x, y );\n\n  // if did not move and not transitioning, just go to layout\n  if ( didNotMove && !this.isTransitioning ) {\n    this.layoutPosition();\n    return;\n  }\n\n  var transX = x - curX;\n  var transY = y - curY;\n  var transitionStyle = {};\n  transitionStyle.transform = this.getTranslate( transX, transY );\n\n  this.transition({\n    to: transitionStyle,\n    onTransitionEnd: {\n      transform: this.layoutPosition\n    },\n    isCleaning: true\n  });\n};\n\nproto.getTranslate = function( x, y ) {\n  // flip cooridinates if origin on right or bottom\n  var isOriginLeft = this.layout._getOption('originLeft');\n  var isOriginTop = this.layout._getOption('originTop');\n  x = isOriginLeft ? x : -x;\n  y = isOriginTop ? y : -y;\n  return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n};\n\n// non transition + transform support\nproto.goTo = function( x, y ) {\n  this.setPosition( x, y );\n  this.layoutPosition();\n};\n\nproto.moveTo = proto._transitionTo;\n\nproto.setPosition = function( x, y ) {\n  this.position.x = parseFloat( x );\n  this.position.y = parseFloat( y );\n};\n\n// ----- transition ----- //\n\n/**\n * @param {Object} style - CSS\n * @param {Function} onTransitionEnd\n */\n\n// non transition, just trigger callback\nproto._nonTransition = function( args ) {\n  this.css( args.to );\n  if ( args.isCleaning ) {\n    this._removeStyles( args.to );\n  }\n  for ( var prop in args.onTransitionEnd ) {\n    args.onTransitionEnd[ prop ].call( this );\n  }\n};\n\n/**\n * proper transition\n * @param {Object} args - arguments\n *   @param {Object} to - style to transition to\n *   @param {Object} from - style to start transition from\n *   @param {Boolean} isCleaning - removes transition styles after transition\n *   @param {Function} onTransitionEnd - callback\n */\nproto.transition = function( args ) {\n  // redirect to nonTransition if no transition duration\n  if ( !parseFloat( this.layout.options.transitionDuration ) ) {\n    this._nonTransition( args );\n    return;\n  }\n\n  var _transition = this._transn;\n  // keep track of onTransitionEnd callback by css property\n  for ( var prop in args.onTransitionEnd ) {\n    _transition.onEnd[ prop ] = args.onTransitionEnd[ prop ];\n  }\n  // keep track of properties that are transitioning\n  for ( prop in args.to ) {\n    _transition.ingProperties[ prop ] = true;\n    // keep track of properties to clean up when transition is done\n    if ( args.isCleaning ) {\n      _transition.clean[ prop ] = true;\n    }\n  }\n\n  // set from styles\n  if ( args.from ) {\n    this.css( args.from );\n    // force redraw. http://blog.alexmaccaw.com/css-transitions\n    var h = this.element.offsetHeight;\n    // hack for JSHint to hush about unused var\n    h = null;\n  }\n  // enable transition\n  this.enableTransition( args.to );\n  // set styles that are transitioning\n  this.css( args.to );\n\n  this.isTransitioning = true;\n\n};\n\n// dash before all cap letters, including first for\n// WebkitTransform => -webkit-transform\nfunction toDashedAll( str ) {\n  return str.replace( /([A-Z])/g, function( $1 ) {\n    return '-' + $1.toLowerCase();\n  });\n}\n\nvar transitionProps = 'opacity,' + toDashedAll( transformProperty );\n\nproto.enableTransition = function(/* style */) {\n  // HACK changing transitionProperty during a transition\n  // will cause transition to jump\n  if ( this.isTransitioning ) {\n    return;\n  }\n\n  // make `transition: foo, bar, baz` from style object\n  // HACK un-comment this when enableTransition can work\n  // while a transition is happening\n  // var transitionValues = [];\n  // for ( var prop in style ) {\n  //   // dash-ify camelCased properties like WebkitTransition\n  //   prop = vendorProperties[ prop ] || prop;\n  //   transitionValues.push( toDashedAll( prop ) );\n  // }\n  // munge number to millisecond, to match stagger\n  var duration = this.layout.options.transitionDuration;\n  duration = typeof duration == 'number' ? duration + 'ms' : duration;\n  // enable transition styles\n  this.css({\n    transitionProperty: transitionProps,\n    transitionDuration: duration,\n    transitionDelay: this.staggerDelay || 0\n  });\n  // listen for transition end event\n  this.element.addEventListener( transitionEndEvent, this, false );\n};\n\n// ----- events ----- //\n\nproto.onwebkitTransitionEnd = function( event ) {\n  this.ontransitionend( event );\n};\n\nproto.onotransitionend = function( event ) {\n  this.ontransitionend( event );\n};\n\n// properties that I munge to make my life easier\nvar dashedVendorProperties = {\n  '-webkit-transform': 'transform'\n};\n\nproto.ontransitionend = function( event ) {\n  // disregard bubbled events from children\n  if ( event.target !== this.element ) {\n    return;\n  }\n  var _transition = this._transn;\n  // get property name of transitioned property, convert to prefix-free\n  var propertyName = dashedVendorProperties[ event.propertyName ] || event.propertyName;\n\n  // remove property that has completed transitioning\n  delete _transition.ingProperties[ propertyName ];\n  // check if any properties are still transitioning\n  if ( isEmptyObj( _transition.ingProperties ) ) {\n    // all properties have completed transitioning\n    this.disableTransition();\n  }\n  // clean style\n  if ( propertyName in _transition.clean ) {\n    // clean up style\n    this.element.style[ event.propertyName ] = '';\n    delete _transition.clean[ propertyName ];\n  }\n  // trigger onTransitionEnd callback\n  if ( propertyName in _transition.onEnd ) {\n    var onTransitionEnd = _transition.onEnd[ propertyName ];\n    onTransitionEnd.call( this );\n    delete _transition.onEnd[ propertyName ];\n  }\n\n  this.emitEvent( 'transitionEnd', [ this ] );\n};\n\nproto.disableTransition = function() {\n  this.removeTransitionStyles();\n  this.element.removeEventListener( transitionEndEvent, this, false );\n  this.isTransitioning = false;\n};\n\n/**\n * removes style property from element\n * @param {Object} style\n**/\nproto._removeStyles = function( style ) {\n  // clean up transition styles\n  var cleanStyle = {};\n  for ( var prop in style ) {\n    cleanStyle[ prop ] = '';\n  }\n  this.css( cleanStyle );\n};\n\nvar cleanTransitionStyle = {\n  transitionProperty: '',\n  transitionDuration: '',\n  transitionDelay: ''\n};\n\nproto.removeTransitionStyles = function() {\n  // remove transition\n  this.css( cleanTransitionStyle );\n};\n\n// ----- stagger ----- //\n\nproto.stagger = function( delay ) {\n  delay = isNaN( delay ) ? 0 : delay;\n  this.staggerDelay = delay + 'ms';\n};\n\n// ----- show/hide/remove ----- //\n\n// remove element from DOM\nproto.removeElem = function() {\n  this.element.parentNode.removeChild( this.element );\n  // remove display: none\n  this.css({ display: '' });\n  this.emitEvent( 'remove', [ this ] );\n};\n\nproto.remove = function() {\n  // just remove element if no transition support or no transition\n  if ( !transitionProperty || !parseFloat( this.layout.options.transitionDuration ) ) {\n    this.removeElem();\n    return;\n  }\n\n  // start transition\n  this.once( 'transitionEnd', function() {\n    this.removeElem();\n  });\n  this.hide();\n};\n\nproto.reveal = function() {\n  delete this.isHidden;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onRevealTransitionEnd;\n\n  this.transition({\n    from: options.hiddenStyle,\n    to: options.visibleStyle,\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onRevealTransitionEnd = function() {\n  // check if still visible\n  // during transition, item may have been hidden\n  if ( !this.isHidden ) {\n    this.emitEvent('reveal');\n  }\n};\n\n/**\n * get style property use for hide/reveal transition end\n * @param {String} styleProperty - hiddenStyle/visibleStyle\n * @returns {String}\n */\nproto.getHideRevealTransitionEndProperty = function( styleProperty ) {\n  var optionStyle = this.layout.options[ styleProperty ];\n  // use opacity\n  if ( optionStyle.opacity ) {\n    return 'opacity';\n  }\n  // get first property\n  for ( var prop in optionStyle ) {\n    return prop;\n  }\n};\n\nproto.hide = function() {\n  // set flag\n  this.isHidden = true;\n  // remove display: none\n  this.css({ display: '' });\n\n  var options = this.layout.options;\n\n  var onTransitionEnd = {};\n  var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n  onTransitionEnd[ transitionEndProperty ] = this.onHideTransitionEnd;\n\n  this.transition({\n    from: options.visibleStyle,\n    to: options.hiddenStyle,\n    // keep hidden stuff hidden\n    isCleaning: true,\n    onTransitionEnd: onTransitionEnd\n  });\n};\n\nproto.onHideTransitionEnd = function() {\n  // check if still hidden\n  // during transition, item may have been un-hidden\n  if ( this.isHidden ) {\n    this.css({ display: 'none' });\n    this.emitEvent('hide');\n  }\n};\n\nproto.destroy = function() {\n  this.css({\n    position: '',\n    left: '',\n    right: '',\n    top: '',\n    bottom: '',\n    transition: '',\n    transform: ''\n  });\n};\n\nreturn Item;\n\n}));\n","/*!\n * Outlayer v2.1.1\n * the brains and guts of a layout library\n * MIT license\n */\n\n( function( window, factory ) {\n  'use strict';\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD - RequireJS\n    define( [\n        'ev-emitter/ev-emitter',\n        'get-size/get-size',\n        'fizzy-ui-utils/utils',\n        './item'\n      ],\n      function( EvEmitter, getSize, utils, Item ) {\n        return factory( window, EvEmitter, getSize, utils, Item);\n      }\n    );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS - Browserify, Webpack\n    module.exports = factory(\n      window,\n      require('ev-emitter'),\n      require('get-size'),\n      require('fizzy-ui-utils'),\n      require('./item')\n    );\n  } else {\n    // browser global\n    window.Outlayer = factory(\n      window,\n      window.EvEmitter,\n      window.getSize,\n      window.fizzyUIUtils,\n      window.Outlayer.Item\n    );\n  }\n\n}( window, function factory( window, EvEmitter, getSize, utils, Item ) {\n'use strict';\n\n// ----- vars ----- //\n\nvar console = window.console;\nvar jQuery = window.jQuery;\nvar noop = function() {};\n\n// -------------------------- Outlayer -------------------------- //\n\n// globally unique identifiers\nvar GUID = 0;\n// internal store of all Outlayer intances\nvar instances = {};\n\n\n/**\n * @param {Element, String} element\n * @param {Object} options\n * @constructor\n */\nfunction Outlayer( element, options ) {\n  var queryElement = utils.getQueryElement( element );\n  if ( !queryElement ) {\n    if ( console ) {\n      console.error( 'Bad element for ' + this.constructor.namespace +\n        ': ' + ( queryElement || element ) );\n    }\n    return;\n  }\n  this.element = queryElement;\n  // add jQuery\n  if ( jQuery ) {\n    this.$element = jQuery( this.element );\n  }\n\n  // options\n  this.options = utils.extend( {}, this.constructor.defaults );\n  this.option( options );\n\n  // add id for Outlayer.getFromElement\n  var id = ++GUID;\n  this.element.outlayerGUID = id; // expando\n  instances[ id ] = this; // associate via id\n\n  // kick it off\n  this._create();\n\n  var isInitLayout = this._getOption('initLayout');\n  if ( isInitLayout ) {\n    this.layout();\n  }\n}\n\n// settings are for internal use only\nOutlayer.namespace = 'outlayer';\nOutlayer.Item = Item;\n\n// default options\nOutlayer.defaults = {\n  containerStyle: {\n    position: 'relative'\n  },\n  initLayout: true,\n  originLeft: true,\n  originTop: true,\n  resize: true,\n  resizeContainer: true,\n  // item options\n  transitionDuration: '0.4s',\n  hiddenStyle: {\n    opacity: 0,\n    transform: 'scale(0.001)'\n  },\n  visibleStyle: {\n    opacity: 1,\n    transform: 'scale(1)'\n  }\n};\n\nvar proto = Outlayer.prototype;\n// inherit EvEmitter\nutils.extend( proto, EvEmitter.prototype );\n\n/**\n * set options\n * @param {Object} opts\n */\nproto.option = function( opts ) {\n  utils.extend( this.options, opts );\n};\n\n/**\n * get backwards compatible option value, check old name\n */\nproto._getOption = function( option ) {\n  var oldOption = this.constructor.compatOptions[ option ];\n  return oldOption && this.options[ oldOption ] !== undefined ?\n    this.options[ oldOption ] : this.options[ option ];\n};\n\nOutlayer.compatOptions = {\n  // currentName: oldName\n  initLayout: 'isInitLayout',\n  horizontal: 'isHorizontal',\n  layoutInstant: 'isLayoutInstant',\n  originLeft: 'isOriginLeft',\n  originTop: 'isOriginTop',\n  resize: 'isResizeBound',\n  resizeContainer: 'isResizingContainer'\n};\n\nproto._create = function() {\n  // get items from children\n  this.reloadItems();\n  // elements that affect layout, but are not laid out\n  this.stamps = [];\n  this.stamp( this.options.stamp );\n  // set container style\n  utils.extend( this.element.style, this.options.containerStyle );\n\n  // bind resize method\n  var canBindResize = this._getOption('resize');\n  if ( canBindResize ) {\n    this.bindResize();\n  }\n};\n\n// goes through all children again and gets bricks in proper order\nproto.reloadItems = function() {\n  // collection of item elements\n  this.items = this._itemize( this.element.children );\n};\n\n\n/**\n * turn elements into Outlayer.Items to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - collection of new Outlayer Items\n */\nproto._itemize = function( elems ) {\n\n  var itemElems = this._filterFindItemElements( elems );\n  var Item = this.constructor.Item;\n\n  // create new Outlayer Items for collection\n  var items = [];\n  for ( var i=0; i < itemElems.length; i++ ) {\n    var elem = itemElems[i];\n    var item = new Item( elem, this );\n    items.push( item );\n  }\n\n  return items;\n};\n\n/**\n * get item elements to be used in layout\n * @param {Array or NodeList or HTMLElement} elems\n * @returns {Array} items - item elements\n */\nproto._filterFindItemElements = function( elems ) {\n  return utils.filterFindElements( elems, this.options.itemSelector );\n};\n\n/**\n * getter method for getting item elements\n * @returns {Array} elems - collection of item elements\n */\nproto.getItemElements = function() {\n  return this.items.map( function( item ) {\n    return item.element;\n  });\n};\n\n// ----- init & layout ----- //\n\n/**\n * lays out all items\n */\nproto.layout = function() {\n  this._resetLayout();\n  this._manageStamps();\n\n  // don't animate first layout\n  var layoutInstant = this._getOption('layoutInstant');\n  var isInstant = layoutInstant !== undefined ?\n    layoutInstant : !this._isLayoutInited;\n  this.layoutItems( this.items, isInstant );\n\n  // flag for initalized\n  this._isLayoutInited = true;\n};\n\n// _init is alias for layout\nproto._init = proto.layout;\n\n/**\n * logic before any new layout\n */\nproto._resetLayout = function() {\n  this.getSize();\n};\n\n\nproto.getSize = function() {\n  this.size = getSize( this.element );\n};\n\n/**\n * get measurement from option, for columnWidth, rowHeight, gutter\n * if option is String -> get element from selector string, & get size of element\n * if option is Element -> get size of element\n * else use option as a number\n *\n * @param {String} measurement\n * @param {String} size - width or height\n * @private\n */\nproto._getMeasurement = function( measurement, size ) {\n  var option = this.options[ measurement ];\n  var elem;\n  if ( !option ) {\n    // default to 0\n    this[ measurement ] = 0;\n  } else {\n    // use option as an element\n    if ( typeof option == 'string' ) {\n      elem = this.element.querySelector( option );\n    } else if ( option instanceof HTMLElement ) {\n      elem = option;\n    }\n    // use size of element, if element\n    this[ measurement ] = elem ? getSize( elem )[ size ] : option;\n  }\n};\n\n/**\n * layout a collection of item elements\n * @api public\n */\nproto.layoutItems = function( items, isInstant ) {\n  items = this._getItemsForLayout( items );\n\n  this._layoutItems( items, isInstant );\n\n  this._postLayout();\n};\n\n/**\n * get the items to be laid out\n * you may want to skip over some items\n * @param {Array} items\n * @returns {Array} items\n */\nproto._getItemsForLayout = function( items ) {\n  return items.filter( function( item ) {\n    return !item.isIgnored;\n  });\n};\n\n/**\n * layout items\n * @param {Array} items\n * @param {Boolean} isInstant\n */\nproto._layoutItems = function( items, isInstant ) {\n  this._emitCompleteOnItems( 'layout', items );\n\n  if ( !items || !items.length ) {\n    // no items, emit event with empty array\n    return;\n  }\n\n  var queue = [];\n\n  items.forEach( function( item ) {\n    // get x/y object from method\n    var position = this._getItemLayoutPosition( item );\n    // enqueue\n    position.item = item;\n    position.isInstant = isInstant || item.isLayoutInstant;\n    queue.push( position );\n  }, this );\n\n  this._processLayoutQueue( queue );\n};\n\n/**\n * get item layout position\n * @param {Outlayer.Item} item\n * @returns {Object} x and y position\n */\nproto._getItemLayoutPosition = function( /* item */ ) {\n  return {\n    x: 0,\n    y: 0\n  };\n};\n\n/**\n * iterate over array and position each item\n * Reason being - separating this logic prevents 'layout invalidation'\n * thx @paul_irish\n * @param {Array} queue\n */\nproto._processLayoutQueue = function( queue ) {\n  this.updateStagger();\n  queue.forEach( function( obj, i ) {\n    this._positionItem( obj.item, obj.x, obj.y, obj.isInstant, i );\n  }, this );\n};\n\n// set stagger from option in milliseconds number\nproto.updateStagger = function() {\n  var stagger = this.options.stagger;\n  if ( stagger === null || stagger === undefined ) {\n    this.stagger = 0;\n    return;\n  }\n  this.stagger = getMilliseconds( stagger );\n  return this.stagger;\n};\n\n/**\n * Sets position of item in DOM\n * @param {Outlayer.Item} item\n * @param {Number} x - horizontal position\n * @param {Number} y - vertical position\n * @param {Boolean} isInstant - disables transitions\n */\nproto._positionItem = function( item, x, y, isInstant, i ) {\n  if ( isInstant ) {\n    // if not transition, just set CSS\n    item.goTo( x, y );\n  } else {\n    item.stagger( i * this.stagger );\n    item.moveTo( x, y );\n  }\n};\n\n/**\n * Any logic you want to do after each layout,\n * i.e. size the container\n */\nproto._postLayout = function() {\n  this.resizeContainer();\n};\n\nproto.resizeContainer = function() {\n  var isResizingContainer = this._getOption('resizeContainer');\n  if ( !isResizingContainer ) {\n    return;\n  }\n  var size = this._getContainerSize();\n  if ( size ) {\n    this._setContainerMeasure( size.width, true );\n    this._setContainerMeasure( size.height, false );\n  }\n};\n\n/**\n * Sets width or height of container if returned\n * @returns {Object} size\n *   @param {Number} width\n *   @param {Number} height\n */\nproto._getContainerSize = noop;\n\n/**\n * @param {Number} measure - size of width or height\n * @param {Boolean} isWidth\n */\nproto._setContainerMeasure = function( measure, isWidth ) {\n  if ( measure === undefined ) {\n    return;\n  }\n\n  var elemSize = this.size;\n  // add padding and border width if border box\n  if ( elemSize.isBorderBox ) {\n    measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight +\n      elemSize.borderLeftWidth + elemSize.borderRightWidth :\n      elemSize.paddingBottom + elemSize.paddingTop +\n      elemSize.borderTopWidth + elemSize.borderBottomWidth;\n  }\n\n  measure = Math.max( measure, 0 );\n  this.element.style[ isWidth ? 'width' : 'height' ] = measure + 'px';\n};\n\n/**\n * emit eventComplete on a collection of items events\n * @param {String} eventName\n * @param {Array} items - Outlayer.Items\n */\nproto._emitCompleteOnItems = function( eventName, items ) {\n  var _this = this;\n  function onComplete() {\n    _this.dispatchEvent( eventName + 'Complete', null, [ items ] );\n  }\n\n  var count = items.length;\n  if ( !items || !count ) {\n    onComplete();\n    return;\n  }\n\n  var doneCount = 0;\n  function tick() {\n    doneCount++;\n    if ( doneCount == count ) {\n      onComplete();\n    }\n  }\n\n  // bind callback\n  items.forEach( function( item ) {\n    item.once( eventName, tick );\n  });\n};\n\n/**\n * emits events via EvEmitter and jQuery events\n * @param {String} type - name of event\n * @param {Event} event - original event\n * @param {Array} args - extra arguments\n */\nproto.dispatchEvent = function( type, event, args ) {\n  // add original event to arguments\n  var emitArgs = event ? [ event ].concat( args ) : args;\n  this.emitEvent( type, emitArgs );\n\n  if ( jQuery ) {\n    // set this.$element\n    this.$element = this.$element || jQuery( this.element );\n    if ( event ) {\n      // create jQuery event\n      var $event = jQuery.Event( event );\n      $event.type = type;\n      this.$element.trigger( $event, args );\n    } else {\n      // just trigger with type if no event available\n      this.$element.trigger( type, args );\n    }\n  }\n};\n\n// -------------------------- ignore & stamps -------------------------- //\n\n\n/**\n * keep item in collection, but do not lay it out\n * ignored items do not get skipped in layout\n * @param {Element} elem\n */\nproto.ignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    item.isIgnored = true;\n  }\n};\n\n/**\n * return item to layout collection\n * @param {Element} elem\n */\nproto.unignore = function( elem ) {\n  var item = this.getItem( elem );\n  if ( item ) {\n    delete item.isIgnored;\n  }\n};\n\n/**\n * adds elements to stamps\n * @param {NodeList, Array, Element, or String} elems\n */\nproto.stamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ) {\n    return;\n  }\n\n  this.stamps = this.stamps.concat( elems );\n  // ignore\n  elems.forEach( this.ignore, this );\n};\n\n/**\n * removes elements to stamps\n * @param {NodeList, Array, or Element} elems\n */\nproto.unstamp = function( elems ) {\n  elems = this._find( elems );\n  if ( !elems ){\n    return;\n  }\n\n  elems.forEach( function( elem ) {\n    // filter out removed stamp elements\n    utils.removeFrom( this.stamps, elem );\n    this.unignore( elem );\n  }, this );\n};\n\n/**\n * finds child elements\n * @param {NodeList, Array, Element, or String} elems\n * @returns {Array} elems\n */\nproto._find = function( elems ) {\n  if ( !elems ) {\n    return;\n  }\n  // if string, use argument as selector string\n  if ( typeof elems == 'string' ) {\n    elems = this.element.querySelectorAll( elems );\n  }\n  elems = utils.makeArray( elems );\n  return elems;\n};\n\nproto._manageStamps = function() {\n  if ( !this.stamps || !this.stamps.length ) {\n    return;\n  }\n\n  this._getBoundingRect();\n\n  this.stamps.forEach( this._manageStamp, this );\n};\n\n// update boundingLeft / Top\nproto._getBoundingRect = function() {\n  // get bounding rect for container element\n  var boundingRect = this.element.getBoundingClientRect();\n  var size = this.size;\n  this._boundingRect = {\n    left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n    top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n    right: boundingRect.right - ( size.paddingRight + size.borderRightWidth ),\n    bottom: boundingRect.bottom - ( size.paddingBottom + size.borderBottomWidth )\n  };\n};\n\n/**\n * @param {Element} stamp\n**/\nproto._manageStamp = noop;\n\n/**\n * get x/y position of element relative to container element\n * @param {Element} elem\n * @returns {Object} offset - has left, top, right, bottom\n */\nproto._getElementOffset = function( elem ) {\n  var boundingRect = elem.getBoundingClientRect();\n  var thisRect = this._boundingRect;\n  var size = getSize( elem );\n  var offset = {\n    left: boundingRect.left - thisRect.left - size.marginLeft,\n    top: boundingRect.top - thisRect.top - size.marginTop,\n    right: thisRect.right - boundingRect.right - size.marginRight,\n    bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n  };\n  return offset;\n};\n\n// -------------------------- resize -------------------------- //\n\n// enable event handlers for listeners\n// i.e. resize -> onresize\nproto.handleEvent = utils.handleEvent;\n\n/**\n * Bind layout to window resizing\n */\nproto.bindResize = function() {\n  window.addEventListener( 'resize', this );\n  this.isResizeBound = true;\n};\n\n/**\n * Unbind layout to window resizing\n */\nproto.unbindResize = function() {\n  window.removeEventListener( 'resize', this );\n  this.isResizeBound = false;\n};\n\nproto.onresize = function() {\n  this.resize();\n};\n\nutils.debounceMethod( Outlayer, 'onresize', 100 );\n\nproto.resize = function() {\n  // don't trigger if size did not change\n  // or if resize was unbound. See #9\n  if ( !this.isResizeBound || !this.needsResizeLayout() ) {\n    return;\n  }\n\n  this.layout();\n};\n\n/**\n * check if layout is needed post layout\n * @returns Boolean\n */\nproto.needsResizeLayout = function() {\n  var size = getSize( this.element );\n  // check that this.size and size are there\n  // IE8 triggers resize on body size change, so they might not be\n  var hasSizes = this.size && size;\n  return hasSizes && size.innerWidth !== this.size.innerWidth;\n};\n\n// -------------------------- methods -------------------------- //\n\n/**\n * add items to Outlayer instance\n * @param {Array or NodeList or Element} elems\n * @returns {Array} items - Outlayer.Items\n**/\nproto.addItems = function( elems ) {\n  var items = this._itemize( elems );\n  // add items to collection\n  if ( items.length ) {\n    this.items = this.items.concat( items );\n  }\n  return items;\n};\n\n/**\n * Layout newly-appended item elements\n * @param {Array or NodeList or Element} elems\n */\nproto.appended = function( elems ) {\n  var items = this.addItems( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // layout and reveal just the new items\n  this.layoutItems( items, true );\n  this.reveal( items );\n};\n\n/**\n * Layout prepended elements\n * @param {Array or NodeList or Element} elems\n */\nproto.prepended = function( elems ) {\n  var items = this._itemize( elems );\n  if ( !items.length ) {\n    return;\n  }\n  // add items to beginning of collection\n  var previousItems = this.items.slice(0);\n  this.items = items.concat( previousItems );\n  // start new layout\n  this._resetLayout();\n  this._manageStamps();\n  // layout new stuff without transition\n  this.layoutItems( items, true );\n  this.reveal( items );\n  // layout previous items\n  this.layoutItems( previousItems );\n};\n\n/**\n * reveal a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.reveal = function( items ) {\n  this._emitCompleteOnItems( 'reveal', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.reveal();\n  });\n};\n\n/**\n * hide a collection of items\n * @param {Array of Outlayer.Items} items\n */\nproto.hide = function( items ) {\n  this._emitCompleteOnItems( 'hide', items );\n  if ( !items || !items.length ) {\n    return;\n  }\n  var stagger = this.updateStagger();\n  items.forEach( function( item, i ) {\n    item.stagger( i * stagger );\n    item.hide();\n  });\n};\n\n/**\n * reveal item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.revealItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.reveal( items );\n};\n\n/**\n * hide item elements\n * @param {Array}, {Element}, {NodeList} items\n */\nproto.hideItemElements = function( elems ) {\n  var items = this.getItems( elems );\n  this.hide( items );\n};\n\n/**\n * get Outlayer.Item, given an Element\n * @param {Element} elem\n * @param {Function} callback\n * @returns {Outlayer.Item} item\n */\nproto.getItem = function( elem ) {\n  // loop through items to get the one that matches\n  for ( var i=0; i < this.items.length; i++ ) {\n    var item = this.items[i];\n    if ( item.element == elem ) {\n      // return item\n      return item;\n    }\n  }\n};\n\n/**\n * get collection of Outlayer.Items, given Elements\n * @param {Array} elems\n * @returns {Array} items - Outlayer.Items\n */\nproto.getItems = function( elems ) {\n  elems = utils.makeArray( elems );\n  var items = [];\n  elems.forEach( function( elem ) {\n    var item = this.getItem( elem );\n    if ( item ) {\n      items.push( item );\n    }\n  }, this );\n\n  return items;\n};\n\n/**\n * remove element(s) from instance and DOM\n * @param {Array or NodeList or Element} elems\n */\nproto.remove = function( elems ) {\n  var removeItems = this.getItems( elems );\n\n  this._emitCompleteOnItems( 'remove', removeItems );\n\n  // bail if no items to remove\n  if ( !removeItems || !removeItems.length ) {\n    return;\n  }\n\n  removeItems.forEach( function( item ) {\n    item.remove();\n    // remove item from collection\n    utils.removeFrom( this.items, item );\n  }, this );\n};\n\n// ----- destroy ----- //\n\n// remove and disable Outlayer instance\nproto.destroy = function() {\n  // clean up dynamic styles\n  var style = this.element.style;\n  style.height = '';\n  style.position = '';\n  style.width = '';\n  // destroy items\n  this.items.forEach( function( item ) {\n    item.destroy();\n  });\n\n  this.unbindResize();\n\n  var id = this.element.outlayerGUID;\n  delete instances[ id ]; // remove reference to instance by id\n  delete this.element.outlayerGUID;\n  // remove data for jQuery\n  if ( jQuery ) {\n    jQuery.removeData( this.element, this.constructor.namespace );\n  }\n\n};\n\n// -------------------------- data -------------------------- //\n\n/**\n * get Outlayer instance from element\n * @param {Element} elem\n * @returns {Outlayer}\n */\nOutlayer.data = function( elem ) {\n  elem = utils.getQueryElement( elem );\n  var id = elem && elem.outlayerGUID;\n  return id && instances[ id ];\n};\n\n\n// -------------------------- create Outlayer class -------------------------- //\n\n/**\n * create a layout class\n * @param {String} namespace\n */\nOutlayer.create = function( namespace, options ) {\n  // sub-class Outlayer\n  var Layout = subclass( Outlayer );\n  // apply new options and compatOptions\n  Layout.defaults = utils.extend( {}, Outlayer.defaults );\n  utils.extend( Layout.defaults, options );\n  Layout.compatOptions = utils.extend( {}, Outlayer.compatOptions  );\n\n  Layout.namespace = namespace;\n\n  Layout.data = Outlayer.data;\n\n  // sub-class Item\n  Layout.Item = subclass( Item );\n\n  // -------------------------- declarative -------------------------- //\n\n  utils.htmlInit( Layout, namespace );\n\n  // -------------------------- jQuery bridge -------------------------- //\n\n  // make into jQuery plugin\n  if ( jQuery && jQuery.bridget ) {\n    jQuery.bridget( namespace, Layout );\n  }\n\n  return Layout;\n};\n\nfunction subclass( Parent ) {\n  function SubClass() {\n    Parent.apply( this, arguments );\n  }\n\n  SubClass.prototype = Object.create( Parent.prototype );\n  SubClass.prototype.constructor = SubClass;\n\n  return SubClass;\n}\n\n// ----- helpers ----- //\n\n// how many milliseconds are in each unit\nvar msUnits = {\n  ms: 1,\n  s: 1000\n};\n\n// munge time-like parameter into millisecond number\n// '0.4s' -> 40\nfunction getMilliseconds( time ) {\n  if ( typeof time == 'number' ) {\n    return time;\n  }\n  var matches = time.match( /(^\\d*\\.?\\d*)(\\w*)/ );\n  var num = matches && matches[1];\n  var unit = matches && matches[2];\n  if ( !num.length ) {\n    return 0;\n  }\n  num = parseFloat( num );\n  var mult = msUnits[ unit ] || 1;\n  return num * mult;\n}\n\n// ----- fin ----- //\n\n// back in global\nOutlayer.Item = Item;\n\nreturn Outlayer;\n\n}));\n","/*!\n * getSize v2.0.2\n * measure size of elements\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n/*global define: false, module: false, console: false */\n\n( function( window, factory ) {\n  'use strict';\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( function() {\n      return factory();\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.getSize = factory();\n  }\n\n})( window, function factory() {\n'use strict';\n\n// -------------------------- helpers -------------------------- //\n\n// get a number from a string, not a percentage\nfunction getStyleSize( value ) {\n  var num = parseFloat( value );\n  // not a percent like '100%', and a number\n  var isValid = value.indexOf('%') == -1 && !isNaN( num );\n  return isValid && num;\n}\n\nfunction noop() {}\n\nvar logError = typeof console == 'undefined' ? noop :\n  function( message ) {\n    console.error( message );\n  };\n\n// -------------------------- measurements -------------------------- //\n\nvar measurements = [\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginBottom',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderTopWidth',\n  'borderBottomWidth'\n];\n\nvar measurementsLength = measurements.length;\n\nfunction getZeroSize() {\n  var size = {\n    width: 0,\n    height: 0,\n    innerWidth: 0,\n    innerHeight: 0,\n    outerWidth: 0,\n    outerHeight: 0\n  };\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    size[ measurement ] = 0;\n  }\n  return size;\n}\n\n// -------------------------- getStyle -------------------------- //\n\n/**\n * getStyle, get style of element, check for Firefox bug\n * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\nfunction getStyle( elem ) {\n  var style = getComputedStyle( elem );\n  if ( !style ) {\n    logError( 'Style returned ' + style +\n      '. Are you running this code in a hidden iframe on Firefox? ' +\n      'See http://bit.ly/getsizebug1' );\n  }\n  return style;\n}\n\n// -------------------------- setup -------------------------- //\n\nvar isSetup = false;\n\nvar isBoxSizeOuter;\n\n/**\n * setup\n * check isBoxSizerOuter\n * do on first getSize() rather than on page load for Firefox bug\n */\nfunction setup() {\n  // setup once\n  if ( isSetup ) {\n    return;\n  }\n  isSetup = true;\n\n  // -------------------------- box sizing -------------------------- //\n\n  /**\n   * WebKit measures the outer-width on style.width on border-box elems\n   * IE & Firefox<29 measures the inner-width\n   */\n  var div = document.createElement('div');\n  div.style.width = '200px';\n  div.style.padding = '1px 2px 3px 4px';\n  div.style.borderStyle = 'solid';\n  div.style.borderWidth = '1px 2px 3px 4px';\n  div.style.boxSizing = 'border-box';\n\n  var body = document.body || document.documentElement;\n  body.appendChild( div );\n  var style = getStyle( div );\n\n  getSize.isBoxSizeOuter = isBoxSizeOuter = getStyleSize( style.width ) == 200;\n  body.removeChild( div );\n\n}\n\n// -------------------------- getSize -------------------------- //\n\nfunction getSize( elem ) {\n  setup();\n\n  // use querySeletor if elem is string\n  if ( typeof elem == 'string' ) {\n    elem = document.querySelector( elem );\n  }\n\n  // do not proceed on non-objects\n  if ( !elem || typeof elem != 'object' || !elem.nodeType ) {\n    return;\n  }\n\n  var style = getStyle( elem );\n\n  // if hidden, everything is 0\n  if ( style.display == 'none' ) {\n    return getZeroSize();\n  }\n\n  var size = {};\n  size.width = elem.offsetWidth;\n  size.height = elem.offsetHeight;\n\n  var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n  // get all measurements\n  for ( var i=0; i < measurementsLength; i++ ) {\n    var measurement = measurements[i];\n    var value = style[ measurement ];\n    var num = parseFloat( value );\n    // any 'auto', 'medium' value will be 0\n    size[ measurement ] = !isNaN( num ) ? num : 0;\n  }\n\n  var paddingWidth = size.paddingLeft + size.paddingRight;\n  var paddingHeight = size.paddingTop + size.paddingBottom;\n  var marginWidth = size.marginLeft + size.marginRight;\n  var marginHeight = size.marginTop + size.marginBottom;\n  var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n  var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n\n  var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n  // overwrite width and height if we can get it from style\n  var styleWidth = getStyleSize( style.width );\n  if ( styleWidth !== false ) {\n    size.width = styleWidth +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth );\n  }\n\n  var styleHeight = getStyleSize( style.height );\n  if ( styleHeight !== false ) {\n    size.height = styleHeight +\n      // add padding and border unless it's already including it\n      ( isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight );\n  }\n\n  size.innerWidth = size.width - ( paddingWidth + borderWidth );\n  size.innerHeight = size.height - ( paddingHeight + borderHeight );\n\n  size.outerWidth = size.width + marginWidth;\n  size.outerHeight = size.height + marginHeight;\n\n  return size;\n}\n\nreturn getSize;\n\n});\n","/*!\n * Masonry v4.2.0\n * Cascading grid layout library\n * http://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n( function( window, factory ) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n        'outlayer/outlayer',\n        'get-size/get-size'\n      ],\n      factory );\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      require('outlayer'),\n      require('get-size')\n    );\n  } else {\n    // browser global\n    window.Masonry = factory(\n      window.Outlayer,\n      window.getSize\n    );\n  }\n\n}( window, function factory( Outlayer, getSize ) {\n\n'use strict';\n\n// -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n\n  var proto = Masonry.prototype;\n\n  proto._resetLayout = function() {\n    this.getSize();\n    this._getMeasurement( 'columnWidth', 'outerWidth' );\n    this._getMeasurement( 'gutter', 'outerWidth' );\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for ( var i=0; i < this.cols; i++ ) {\n      this.colYs.push( 0 );\n    }\n\n    this.maxY = 0;\n    this.horizontalColIndex = 0;\n  };\n\n  proto.measureColumns = function() {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if ( !this.columnWidth ) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize( firstItemElem ).outerWidth ||\n        // if first elem has no width, default to size of container\n        this.containerWidth;\n    }\n\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[ mathMethod ]( cols );\n    this.cols = Math.max( cols, 1 );\n  };\n\n  proto.getContainerWidth = function() {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize( container );\n    this.containerWidth = size && size.innerWidth;\n  };\n\n  proto._getItemLayoutPosition = function( item ) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[ mathMethod ]( item.size.outerWidth / this.columnWidth );\n    colSpan = Math.min( colSpan, this.cols );\n    // use horizontal or top column position\n    var colPosMethod = this.options.horizontalOrder ?\n      '_getHorizontalColPosition' : '_getTopColPosition';\n    var colPosition = this[ colPosMethod ]( colSpan, item );\n    // position the brick\n    var position = {\n      x: this.columnWidth * colPosition.col,\n      y: colPosition.y\n    };\n    // apply setHeight to necessary columns\n    var setHeight = colPosition.y + item.size.outerHeight;\n    var setMax = colSpan + colPosition.col;\n    for ( var i = colPosition.col; i < setMax; i++ ) {\n      this.colYs[i] = setHeight;\n    }\n\n    return position;\n  };\n\n  proto._getTopColPosition = function( colSpan ) {\n    var colGroup = this._getTopColGroup( colSpan );\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply( Math, colGroup );\n\n    return {\n      col: colGroup.indexOf( minimumY ),\n      y: minimumY,\n    };\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  proto._getTopColGroup = function( colSpan ) {\n    if ( colSpan < 2 ) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for ( var i = 0; i < groupCount; i++ ) {\n      colGroup[i] = this._getColGroupY( i, colSpan );\n    }\n    return colGroup;\n  };\n\n  proto._getColGroupY = function( col, colSpan ) {\n    if ( colSpan < 2 ) {\n      return this.colYs[ col ];\n    }\n    // make an array of colY values for that one group\n    var groupColYs = this.colYs.slice( col, col + colSpan );\n    // and get the max value of the array\n    return Math.max.apply( Math, groupColYs );\n  };\n\n  // get column position based on horizontal index. #873\n  proto._getHorizontalColPosition = function( colSpan, item ) {\n    var col = this.horizontalColIndex % this.cols;\n    var isOver = colSpan > 1 && col + colSpan > this.cols;\n    // shift to next row if item can't fit on current row\n    col = isOver ? 0 : col;\n    // don't let zero-size items take up space\n    var hasSize = item.size.outerWidth && item.size.outerHeight;\n    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;\n\n    return {\n      col: col,\n      y: this._getColGroupY( col, colSpan ),\n    };\n  };\n\n  proto._manageStamp = function( stamp ) {\n    var stampSize = getSize( stamp );\n    var offset = this._getElementOffset( stamp );\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor( firstX / this.columnWidth );\n    firstCol = Math.max( 0, firstCol );\n    var lastCol = Math.floor( lastX / this.columnWidth );\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min( this.cols - 1, lastCol );\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = ( isOriginTop ? offset.top : offset.bottom ) +\n      stampSize.outerHeight;\n    for ( var i = firstCol; i <= lastCol; i++ ) {\n      this.colYs[i] = Math.max( stampMaxY, this.colYs[i] );\n    }\n  };\n\n  proto._getContainerSize = function() {\n    this.maxY = Math.max.apply( Math, this.colYs );\n    var size = {\n      height: this.maxY\n    };\n\n    if ( this._getOption('fitWidth') ) {\n      size.width = this._getContainerFitWidth();\n    }\n\n    return size;\n  };\n\n  proto._getContainerFitWidth = function() {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while ( --i ) {\n      if ( this.colYs[i] !== 0 ) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return ( this.cols - unusedCols ) * this.columnWidth - this.gutter;\n  };\n\n  proto.needsResizeLayout = function() {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n\n  return Masonry;\n\n}));\n","/*!\n * imagesLoaded v3.2.0\n * JavaScript is all like \"You images are done yet or what?\"\n * MIT License\n */\n\n( function( window, factory ) { 'use strict';\n  // universal module definition\n\n  /*global define: false, module: false, require: false */\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'eventEmitter/EventEmitter',\n      'eventie/eventie'\n    ], function( EventEmitter, eventie ) {\n      return factory( window, EventEmitter, eventie );\n    });\n  } else if ( typeof module == 'object' && module.exports ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('wolfy87-eventemitter'),\n      require('eventie')\n    );\n  } else {\n    // browser global\n    window.imagesLoaded = factory(\n      window,\n      window.EventEmitter,\n      window.eventie\n    );\n  }\n\n})( window,\n\n// --------------------------  factory -------------------------- //\n\nfunction factory( window, EventEmitter, eventie ) {\n\n'use strict';\n\nvar $ = window.jQuery;\nvar console = window.console;\n\n// -------------------------- helpers -------------------------- //\n\n// extend objects\nfunction extend( a, b ) {\n  for ( var prop in b ) {\n    a[ prop ] = b[ prop ];\n  }\n  return a;\n}\n\nvar objToString = Object.prototype.toString;\nfunction isArray( obj ) {\n  return objToString.call( obj ) == '[object Array]';\n}\n\n// turn element or nodeList into an array\nfunction makeArray( obj ) {\n  var ary = [];\n  if ( isArray( obj ) ) {\n    // use object if already an array\n    ary = obj;\n  } else if ( typeof obj.length == 'number' ) {\n    // convert nodeList to array\n    for ( var i=0; i < obj.length; i++ ) {\n      ary.push( obj[i] );\n    }\n  } else {\n    // array of single index\n    ary.push( obj );\n  }\n  return ary;\n}\n\n  // -------------------------- imagesLoaded -------------------------- //\n\n  /**\n   * @param {Array, Element, NodeList, String} elem\n   * @param {Object or Function} options - if function, use as callback\n   * @param {Function} onAlways - callback function\n   */\n  function ImagesLoaded( elem, options, onAlways ) {\n    // coerce ImagesLoaded() without new, to be new ImagesLoaded()\n    if ( !( this instanceof ImagesLoaded ) ) {\n      return new ImagesLoaded( elem, options, onAlways );\n    }\n    // use elem as selector string\n    if ( typeof elem == 'string' ) {\n      elem = document.querySelectorAll( elem );\n    }\n\n    this.elements = makeArray( elem );\n    this.options = extend( {}, this.options );\n\n    if ( typeof options == 'function' ) {\n      onAlways = options;\n    } else {\n      extend( this.options, options );\n    }\n\n    if ( onAlways ) {\n      this.on( 'always', onAlways );\n    }\n\n    this.getImages();\n\n    if ( $ ) {\n      // add jQuery Deferred object\n      this.jqDeferred = new $.Deferred();\n    }\n\n    // HACK check async to allow time to bind listeners\n    var _this = this;\n    setTimeout( function() {\n      _this.check();\n    });\n  }\n\n  ImagesLoaded.prototype = new EventEmitter();\n\n  ImagesLoaded.prototype.options = {};\n\n  ImagesLoaded.prototype.getImages = function() {\n    this.images = [];\n\n    // filter & find items if we have an item selector\n    for ( var i=0; i < this.elements.length; i++ ) {\n      var elem = this.elements[i];\n      this.addElementImages( elem );\n    }\n  };\n\n  /**\n   * @param {Node} element\n   */\n  ImagesLoaded.prototype.addElementImages = function( elem ) {\n    // filter siblings\n    if ( elem.nodeName == 'IMG' ) {\n      this.addImage( elem );\n    }\n    // get background image on element\n    if ( this.options.background === true ) {\n      this.addElementBackgroundImages( elem );\n    }\n\n    // find children\n    // no non-element nodes, #143\n    var nodeType = elem.nodeType;\n    if ( !nodeType || !elementNodeTypes[ nodeType ] ) {\n      return;\n    }\n    var childImgs = elem.querySelectorAll('img');\n    // concat childElems to filterFound array\n    for ( var i=0; i < childImgs.length; i++ ) {\n      var img = childImgs[i];\n      this.addImage( img );\n    }\n\n    // get child background images\n    if ( typeof this.options.background == 'string' ) {\n      var children = elem.querySelectorAll( this.options.background );\n      for ( i=0; i < children.length; i++ ) {\n        var child = children[i];\n        this.addElementBackgroundImages( child );\n      }\n    }\n  };\n\n  var elementNodeTypes = {\n    1: true,\n    9: true,\n    11: true\n  };\n\n  ImagesLoaded.prototype.addElementBackgroundImages = function( elem ) {\n    var style = getStyle( elem );\n    // get url inside url(\"...\")\n    var reURL = /url\\(['\"]*([^'\"\\)]+)['\"]*\\)/gi;\n    var matches = reURL.exec( style.backgroundImage );\n    while ( matches !== null ) {\n      var url = matches && matches[1];\n      if ( url ) {\n        this.addBackground( url, elem );\n      }\n      matches = reURL.exec( style.backgroundImage );\n    }\n  };\n\n  // IE8\n  var getStyle = window.getComputedStyle || function( elem ) {\n    return elem.currentStyle;\n  };\n\n  /**\n   * @param {Image} img\n   */\n  ImagesLoaded.prototype.addImage = function( img ) {\n    var loadingImage = new LoadingImage( img );\n    this.images.push( loadingImage );\n  };\n\n  ImagesLoaded.prototype.addBackground = function( url, elem ) {\n    var background = new Background( url, elem );\n    this.images.push( background );\n  };\n\n  ImagesLoaded.prototype.check = function() {\n    var _this = this;\n    this.progressedCount = 0;\n    this.hasAnyBroken = false;\n    // complete if no images\n    if ( !this.images.length ) {\n      this.complete();\n      return;\n    }\n\n    function onProgress( image, elem, message ) {\n      // HACK - Chrome triggers event before object properties have changed. #83\n      setTimeout( function() {\n        _this.progress( image, elem, message );\n      });\n    }\n\n    for ( var i=0; i < this.images.length; i++ ) {\n      var loadingImage = this.images[i];\n      loadingImage.once( 'progress', onProgress );\n      loadingImage.check();\n    }\n  };\n\n  ImagesLoaded.prototype.progress = function( image, elem, message ) {\n    this.progressedCount++;\n    this.hasAnyBroken = this.hasAnyBroken || !image.isLoaded;\n    // progress event\n    this.emit( 'progress', this, image, elem );\n    if ( this.jqDeferred && this.jqDeferred.notify ) {\n      this.jqDeferred.notify( this, image );\n    }\n    // check if completed\n    if ( this.progressedCount == this.images.length ) {\n      this.complete();\n    }\n\n    if ( this.options.debug && console ) {\n      console.log( 'progress: ' + message, image, elem );\n    }\n  };\n\n  ImagesLoaded.prototype.complete = function() {\n    var eventName = this.hasAnyBroken ? 'fail' : 'done';\n    this.isComplete = true;\n    this.emit( eventName, this );\n    this.emit( 'always', this );\n    if ( this.jqDeferred ) {\n      var jqMethod = this.hasAnyBroken ? 'reject' : 'resolve';\n      this.jqDeferred[ jqMethod ]( this );\n    }\n  };\n\n  // --------------------------  -------------------------- //\n\n  function LoadingImage( img ) {\n    this.img = img;\n  }\n\n  LoadingImage.prototype = new EventEmitter();\n\n  LoadingImage.prototype.check = function() {\n    // If complete is true and browser supports natural sizes,\n    // try to check for image status manually.\n    var isComplete = this.getIsImageComplete();\n    if ( isComplete ) {\n      // report based on naturalWidth\n      this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n      return;\n    }\n\n    // If none of the checks above matched, simulate loading on detached element.\n    this.proxyImage = new Image();\n    eventie.bind( this.proxyImage, 'load', this );\n    eventie.bind( this.proxyImage, 'error', this );\n    // bind to image as well for Firefox. #191\n    eventie.bind( this.img, 'load', this );\n    eventie.bind( this.img, 'error', this );\n    this.proxyImage.src = this.img.src;\n  };\n\n  LoadingImage.prototype.getIsImageComplete = function() {\n    return this.img.complete && this.img.naturalWidth !== undefined;\n  };\n\n  LoadingImage.prototype.confirm = function( isLoaded, message ) {\n    this.isLoaded = isLoaded;\n    this.emit( 'progress', this, this.img, message );\n  };\n\n  // ----- events ----- //\n\n  // trigger specified handler for event type\n  LoadingImage.prototype.handleEvent = function( event ) {\n    var method = 'on' + event.type;\n    if ( this[ method ] ) {\n      this[ method ]( event );\n    }\n  };\n\n  LoadingImage.prototype.onload = function() {\n    this.confirm( true, 'onload' );\n    this.unbindEvents();\n  };\n\n  LoadingImage.prototype.onerror = function() {\n    this.confirm( false, 'onerror' );\n    this.unbindEvents();\n  };\n\n  LoadingImage.prototype.unbindEvents = function() {\n    eventie.unbind( this.proxyImage, 'load', this );\n    eventie.unbind( this.proxyImage, 'error', this );\n    eventie.unbind( this.img, 'load', this );\n    eventie.unbind( this.img, 'error', this );\n  };\n\n  // -------------------------- Background -------------------------- //\n\n  function Background( url, element ) {\n    this.url = url;\n    this.element = element;\n    this.img = new Image();\n  }\n\n  // inherit LoadingImage prototype\n  Background.prototype = new LoadingImage();\n\n  Background.prototype.check = function() {\n    eventie.bind( this.img, 'load', this );\n    eventie.bind( this.img, 'error', this );\n    this.img.src = this.url;\n    // check if image is already complete\n    var isComplete = this.getIsImageComplete();\n    if ( isComplete ) {\n      this.confirm( this.img.naturalWidth !== 0, 'naturalWidth' );\n      this.unbindEvents();\n    }\n  };\n\n  Background.prototype.unbindEvents = function() {\n    eventie.unbind( this.img, 'load', this );\n    eventie.unbind( this.img, 'error', this );\n  };\n\n  Background.prototype.confirm = function( isLoaded, message ) {\n    this.isLoaded = isLoaded;\n    this.emit( 'progress', this, this.element, message );\n  };\n\n  // -------------------------- jQuery -------------------------- //\n\n  ImagesLoaded.makeJQueryPlugin = function( jQuery ) {\n    jQuery = jQuery || window.jQuery;\n    if ( !jQuery ) {\n      return;\n    }\n    // set local variable\n    $ = jQuery;\n    // $().imagesLoaded()\n    $.fn.imagesLoaded = function( options, callback ) {\n      var instance = new ImagesLoaded( this, options, callback );\n      return instance.jqDeferred.promise( $(this) );\n    };\n  };\n  // try making plugin\n  ImagesLoaded.makeJQueryPlugin();\n\n  // --------------------------  -------------------------- //\n\n  return ImagesLoaded;\n\n});\n","/*!\n * Flickity imagesLoaded v1.0.4\n * enables imagesLoaded option for Flickity\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n( function( window, factory ) {\n  /*global define: false, module: false, require: false */\n  'use strict';\n  // universal module definition\n\n  if ( typeof define == 'function' && define.amd ) {\n    // AMD\n    define( [\n      'flickity/js/index',\n      'imagesloaded/imagesloaded'\n    ], function( Flickity, imagesLoaded ) {\n      return factory( window, Flickity, imagesLoaded );\n    });\n  } else if ( typeof exports == 'object' ) {\n    // CommonJS\n    module.exports = factory(\n      window,\n      require('flickity'),\n      require('imagesloaded')\n    );\n  } else {\n    // browser global\n    window.Flickity = factory(\n      window,\n      window.Flickity,\n      window.imagesLoaded\n    );\n  }\n\n}( window, function factory( window, Flickity, imagesLoaded ) {\n'use strict';\n\nFlickity.createMethods.push('_createImagesLoaded');\n\nFlickity.prototype._createImagesLoaded = function() {\n  this.on( 'activate', this.imagesLoaded );\n};\n\nFlickity.prototype.imagesLoaded = function() {\n  if ( !this.options.imagesLoaded ) {\n    return;\n  }\n  var _this = this;\n  function onImagesLoadedProgress( instance, image ) {\n    var cell = _this.getParentCell( image.img );\n    _this.cellSizeChange( cell && cell.element );\n    if ( !_this.options.freeScroll ) {\n      _this.positionSliderAtSelected();\n    }\n  }\n  imagesLoaded( this.slider ).on( 'progress', onImagesLoadedProgress );\n};\n\nreturn Flickity;\n\n}));\n","import $ from 'jquery';\nimport imagesLoaded from 'imagesloaded';\nimport Masonry from 'masonry-layout';\nimport Flickity from 'flickity';\nimport 'flickity-imagesloaded';\nimport layout from '../Layout';\n\nexport default class BlogLayout {\n  constructor(el, options = {}) {\n    this.$el = $(el);\n    this.options = options;\n\n    this.update = this.update.bind(this);\n    layout.onBreakpointChange(this.update);\n    this.update();\n  }\n\n  unload() {\n    this._destroyMasonry();\n    this._destroyFlickity();\n    layout.offBreakpointChange(this.update);\n  }\n\n  update() {\n    // Use flickity at S and M breakpoints if enabled, otherwise use masonry\n    const flickity = layout.isBreakpoint('S') || (layout.isBreakpoint('M') && this.options.flickity);\n\n    if (flickity) {\n      this._destroyMasonry();\n      this._initFlickity();\n    } else {\n      this._destroyFlickity();\n      this._initMasonry();\n    }\n  }\n\n  _initMasonry() {\n    if (!this.$el.length) return;\n\n    // Just re-layout items\n    if (this.masonry) {\n      this._destroyMasonry();\n    }\n\n    // Create new masonry grid\n    this.masonry = new Masonry(this.$el[0], {\n      columnWidth: '[data-article-excerpt-masonry-item-sizer]',\n      gutter: '[data-article-excerpt-masonry-gutter-sizer]',\n      itemSelector: '[data-article-excerpt]',\n      percentPosition: true,\n    });\n\n    this.imagesLoaded = new imagesLoaded(this.$el[0], null);\n    this.imagesLoaded.on('progress', () => this.masonry.layout());\n  }\n\n  _destroyMasonry() {\n    if (this.masonry) {\n      this.masonry.destroy();\n      this.masonry = null;\n    }\n\n    if (this.imagesLoaded) {\n      this.imagesLoaded.off('progress');\n    }\n\n    // Clear styles\n    $('[data-article-excerpt]', this.$el).attr('style', '');\n  }\n\n  _initFlickity() {\n    if (!this.options.flickity) return;\n    if (!this.$el.length) return;\n\n    if (this.flickity) {\n      this._destroyFlickity();\n    }\n\n    this.flickity = new Flickity(this.$el[0], {\n      cellAlign: 'left',\n      cellSelector: '[data-article-excerpt]',\n      contain: true,\n      prevNextButtons: false,\n      pageDots: false,\n      imagesLoaded: true,\n    });\n  }\n\n  _destroyFlickity() {\n    if (this.flickity) {\n      this.flickity.destroy();\n      this.flickity = null;\n    }\n\n    // Clear styles\n    $('[data-article-excerpt]', this.$el).attr('style', '');\n  }\n}\n","import $ from 'jquery';\nimport BlogLayout from '../snippets/BlogLayout';\n\nexport default class DynamicBlogPosts {\n  constructor(section) {\n    this.$el = $(section.el);\n\n    // Articles\n    this.$articles = $('[data-article-excerpts]', section.el);\n    this.blogLayout = new BlogLayout(this.$articles, {\n      flickity: true,\n    });\n  }\n\n  onSectionUnload() {\n    this.blogLayout.unload();\n  }\n}\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CurrencyConverter = function () {\n  function CurrencyConverter() {\n    _classCallCheck(this, CurrencyConverter);\n\n    /**\n     * @property {object} defaults                       - The default configuration for CurrencyConverter\n     * @property {string} defaults.switcherSelector      - CSS Selector for dropdown which controls currency conversion\n     * @property {string} defaults.priceSelector         - CSS Selector for elements containing prices\n     * @property {string} defaults.shopCurrency          - Shop's currency (Currency which prices are printed as)\n     * @property {string} defaults.defaultCurrency       - Theme's currency setting, or initial currency to show on the page\n     * @property {string} defaults.displayFormat         - `money_with_currency_format` or `money_format`\n     * @property {string} defaults.moneyFormat           - Shop's currency formatted using the display format\n     * @property {string} defaults.moneyFormatNoCurrency - Shop's currency formatted without showing currency\n     * @property {string} defaults.moneyFormatCurrency   - Shop's currency formatted showing currency\n     */\n    this.defaults = {\n      switcherSelector: '[data-currency-converter]',\n      priceSelector: '.money',\n      shopCurrency: '',\n      defaultCurrency: '',\n      displayFormat: '',\n      moneyFormat: '',\n      moneyFormatNoCurrency: '',\n      moneyFormatCurrency: ''\n    };\n\n    this.isInitialised = false;\n  }\n\n  _createClass(CurrencyConverter, [{\n    key: 'init',\n    value: function init(options) {\n      if (!window.Currency || this.isInitialised) return;\n\n      this.options = Object.assign({}, this.defaults, options);\n\n      window.Currency.format = this.options.displayFormat;\n      window.Currency.moneyFormats[this.options.shopCurrency].money_with_currency_format = this.options.moneyFormatCurrency;\n      window.Currency.moneyFormats[this.options.shopCurrency].money_format = this.options.moneyFormatNoCurrency;\n      window.Currency.currentCurrency = window.Currency.cookie.read() || this.options.defaultCurrency;\n\n      this.isInitialised = true;\n      this._current();\n    }\n\n    /**\n     * Change the currency to a new currency using an ISO currency code\n     *\n     * @param newCurrency\n     */\n\n  }, {\n    key: 'setCurrency',\n    value: function setCurrency(newCurrency) {\n      if (!this.isInitialised) return;\n\n      this._convertAll(window.Currency.currentCurrency, newCurrency);\n    }\n\n    /**\n     * Updates a price on the page to use the active Currency, and formatting\n     *\n     * @param priceEl {HTMLElement}\n     */\n\n  }, {\n    key: 'update',\n    value: function update(priceEl) {\n      if (!this.isInitialised) return;\n\n      var formattedPrice = window.Shopify.formatMoney(this._moneyValue(priceEl.innerHTML), this.options.moneyFormat);\n      var attributes = priceEl.attributes;\n\n      for (var attr = 0; attr < attributes.length; attr++) {\n        var attribute = attributes[attr];\n\n        if (attribute.name.indexOf('data-currency') === 0) {\n          priceEl.setAttribute(attribute.name, '');\n        }\n      }\n\n      priceEl.innerHTML = formattedPrice;\n      priceEl.removeAttribute('data-currency');\n      priceEl.setAttribute('data-currency-' + this.options.shopCurrency, formattedPrice);\n      priceEl.setAttribute('data-currency', this.options.shopCurrency);\n\n      this._convertEl(priceEl, this.options.shopCurrency, window.Currency.currentCurrency);\n    }\n\n    /**\n     * Update the currency switcher to the current currency\n     * @private\n     */\n\n  }, {\n    key: '_current',\n    value: function _current() {\n      var switcher = document.querySelector(this.options.switcherSelector);\n      var childrenEls = switcher.querySelectorAll('option');\n\n      for (var i = 0; i < childrenEls.length; i++) {\n        var optionEl = childrenEls[i];\n\n        if (optionEl.selected && optionEl.value !== window.Currency.currentCurrency) {\n          optionEl.selected = false;\n        }\n\n        if (optionEl.value === window.Currency.currentCurrency) {\n          optionEl.selected = true;\n        }\n      }\n\n      this._convertAll(this.options.shopCurrency, window.Currency.currentCurrency);\n    }\n\n    /**\n     * Converts formatted money to a number\n     *\n     * @param price {String}\n     * @returns {Number}\n     * @private\n     */\n\n  }, {\n    key: '_moneyValue',\n    value: function _moneyValue(price) {\n      return parseInt(price.replace(/[^0-9]/g, ''), 10);\n    }\n\n    /**\n     * Converts an individual price to the new format\n     *\n     * @param priceEl\n     * @param oldCurrency\n     * @param newCurrency\n     * @private\n     */\n\n  }, {\n    key: '_convertEl',\n    value: function _convertEl(priceEl, oldCurrency, newCurrency) {\n\n      // If the amount has already been converted, we leave it alone.\n      if (priceEl.getAttribute('data-currency') === newCurrency) {\n        return;\n      }\n\n      // If we are converting to a currency that we have saved, we will use the saved amount.\n      if (priceEl.getAttribute('data-currency-' + newCurrency)) {\n        priceEl.innerHTML = priceEl.getAttribute('data-currency-' + newCurrency);\n      } else {\n        // Converting to Y for the first time? Let's get to it!\n        var cents = 0.0;\n        var oldAmount = this._moneyValue(priceEl.innerHTML);\n        var oldFormat = window.Currency.moneyFormats[oldCurrency][this.options.displayFormat];\n\n        // Convert prices from float values to integers if needed, then convert\n        if (oldFormat.indexOf('amount_no_decimals') !== -1) {\n          cents = window.Currency.convert(oldAmount * 100, oldCurrency, newCurrency);\n        } else if (oldCurrency === 'JOD' || oldCurrency === 'KWD' || oldCurrency === 'BHD') {\n          cents = window.Currency.convert(oldAmount / 10, oldCurrency, newCurrency);\n        } else {\n          cents = window.Currency.convert(oldAmount, oldCurrency, newCurrency);\n        }\n\n        var newFormat = window.Currency.moneyFormats[newCurrency][this.options.displayFormat];\n        var newFormattedAmount = window.Currency.formatMoney(cents, newFormat);\n\n        priceEl.innerHTML = newFormattedAmount;\n        priceEl.setAttribute('data-currency-' + newCurrency, newFormattedAmount);\n      }\n\n      priceEl.setAttribute('data-currency', newCurrency);\n    }\n\n    /**\n     * Convert all prices on the page to the new currency\n     *\n     * @param oldCurrency\n     * @param newCurrency\n     * @private\n     */\n\n  }, {\n    key: '_convertAll',\n    value: function _convertAll(oldCurrency, newCurrency) {\n      var priceEls = document.querySelectorAll(this.options.priceSelector);\n      if (!priceEls) return;\n\n      window.Currency.currentCurrency = newCurrency;\n      window.Currency.cookie.write(newCurrency);\n\n      for (var i = 0; i < priceEls.length; i++) {\n        this._convertEl(priceEls[i], oldCurrency, newCurrency);\n      }\n    }\n  }]);\n\n  return CurrencyConverter;\n}();\n\nvar CurrencyConverter$1 = new CurrencyConverter();\n\nmodule.exports = CurrencyConverter$1;\n","class Node {\n  constructor(variant) {\n    this.variant = variant;\n    this.optionsCount = this.variant.options.length;\n    this.neighbors = [];\n\n    for (let i = 0; i < this.optionsCount; i++) {\n      this.neighbors.push([]);\n    }\n  }\n\n  addNeighbor(variant) {\n    for (let i = 0; i < this.optionsCount; i++) {\n      if (this.variant.options[i] !== variant.options[i]) {\n        this.neighbors[i].push(variant);\n        break;\n      }\n    }\n  }\n\n  getValidOptions() {\n    const options = [];\n\n    for (let i = 0; i < this.optionsCount; i++) {\n      const variants = [this.variant, ...this.neighbors[i]];\n      options[i] = {};\n\n      variants.forEach((item) => {\n        const variant = item;\n        const option = variant.options[i];\n\n        options[i][option] = {\n          available: (options[i][option] && options[i][option].available) || variant.available,\n        };\n      });\n    }\n\n    return options;\n  }\n}\n\nexport default class ProductOptions {\n  constructor(product) {\n    this.productHandle = product.handle;\n    this.optionsCount = product.options.length;\n    this.variants = product.variants;\n    this.nodeMap = {};\n\n    this._generateNodeMap(product);\n  }\n\n  _generateNodeMap() {\n    this.variants.forEach((variant) => {\n      this.nodeMap[variant.id] = new Node(variant);\n\n      this.variants.forEach((variant2) => {\n        this.nodeMap[variant.id].addNeighbor(variant2);\n      });\n    });\n  }\n\n  _getVariant(options) {\n    for (let i = 0; i < this.variants.length; i++) {\n      const variant = this.variants[i];\n      let found = true;\n\n      for (let j = 0; j < variant.options.length; j++) {\n        if (options[j] !== variant.options[j]) {\n          found = false;\n        }\n      }\n\n      if (found) {\n        return variant;\n      }\n    }\n\n    return false;\n  }\n\n  _getClosestVariant(options) {\n    let closestVariant = null;\n    let matchingValues = 0;\n\n    this.variants.forEach((variant) => {\n      let tempMatchingValues = 0;\n\n      for (let i = 0; i < variant.options.length; i++) {\n        if (options[i] === variant.options[i]) {\n          tempMatchingValues++;\n        } else {\n          break;\n        }\n      }\n\n      if (tempMatchingValues > matchingValues) {\n        closestVariant = variant;\n        matchingValues = tempMatchingValues;\n      } else if (tempMatchingValues === matchingValues && (!closestVariant || !closestVariant.available)) {\n        closestVariant = variant;\n        matchingValues = tempMatchingValues;\n      }\n    });\n\n    return closestVariant || false;\n  }\n\n  getVariant(options) {\n    return this._getVariant(options) || this._getClosestVariant(options);\n  }\n\n  getValidOptions(variant) {\n    return this.nodeMap[variant.id].getValidOptions();\n  }\n}\n","import $ from 'jquery';\nimport ProductOptions from './ProductOptions';\n\nexport default class VariantHelper {\n  constructor(product, $variants, $options) {\n    this.product = product;\n    this.optionsCount = this.product.options.length;\n    this.$variants = $variants;\n    this.$options = $options;\n    this.productOptions = new ProductOptions(this.product);\n    this.optionsTypes = {\n      select: 'select',\n      radio: 'input[type=\"radio\"]',\n    };\n\n    this._bindEvents();\n\n    if (this.$options.is(this.optionsTypes.select)) {\n      this.optionsType = this.optionsTypes.select;\n    } else if (this.$options.is(this.optionsTypes.radio)) {\n      this.optionsType = this.optionsTypes.radio;\n    } else {\n      console.warn('Variant helper: Option set is not a valid type');\n      this._unbindEvents();\n    }\n\n    this._switchVariant(true);\n  }\n\n  _bindEvents() {\n    this.$options.on('change.variant-helper', () => this._switchVariant());\n  }\n\n  _unbindEvents() {\n    this.$options.off('change.variant-helper');\n  }\n\n  _switchVariant(firstLoad = false) {\n    const options = [];\n    let variant = null;\n    let availableOptions = null;\n\n    if (this.optionsType === this.optionsTypes.select) {\n      this.$options.each((index, option) => {\n        options.push(option.value);\n      });\n    } else if (this.optionsType === this.optionsTypes.radio) {\n      this.$options.filter(':checked').each((index, option) => {\n        options.push(option.value);\n      });\n    } else {\n      return;\n    }\n\n    variant = this.productOptions.getVariant(options);\n\n    if (variant) {\n      availableOptions = this.productOptions.getValidOptions(variant);\n    } else {\n      return;\n    }\n\n    if (this.optionsType === this.optionsTypes.select) {\n      this._switchVariantSelect(variant, availableOptions);\n    } else if (this.optionsType === this.optionsTypes.radio) {\n      this._switchVariantRadio(variant, availableOptions);\n    } else {\n      return;\n    }\n\n    this.$variants.val(variant.id);\n    $(window).trigger('product-variant-switch', { variant, firstLoad });\n  }\n\n  _switchVariantSelect(variant, availableOptions) {\n    // Iterate over each option type\n    for (let i = 0; i < this.product.options.length; i++) {\n      // Corresponding select dropdown\n      const $select = $(this.$options[i]);\n      const $optionEls = $select.find('option');\n\n      // Iterate over each option on dropdown\n      $optionEls.each((index, option) => {\n        const $option = $(option);\n        const value = option.value;\n\n        // Not an available option\n        $option\n          .prop('disabled', (!availableOptions[i][value] || !availableOptions[i][value].available))\n          .prop('selected', false);\n\n        // Dropdown option matches variant option\n        if (variant.options[i] === value) {\n          $option\n            .prop('disabled', false)\n            .prop('selected', true);\n        }\n      });\n    }\n  }\n\n  _switchVariantRadio(variant, availableOptions) {\n    this.$options\n      .attr('disabled', true)\n      .prop('checked', false)\n      .attr('data-soldout', false);\n\n    for (let i = 0; i < this.product.options.length; i++) {\n      const $options = this.$options.filter(`[name=\"${this.product.options[i]}\"]`);\n      $options.each((index, option) => {\n        const $option = $(option);\n\n        if (variant.options[i] === $option.val()) {\n          $option\n            .prop('checked', true)\n            .attr('disabled', false);\n        }\n\n        if (availableOptions[i][$option.val()]) {\n          $option.attr('disabled', false);\n\n          if (!availableOptions[i][$option.val()].available) {\n            $option.attr('data-soldout', true);\n          }\n        }\n      });\n    }\n  }\n\n  isDefault() {\n    if (this.product.variants[0].title === 'Default Title' && this.product.variants[0].option1 === 'Default Title') {\n      return true;\n    }\n\n    return false;\n  }\n\n  getSelectedVariant() {\n    if (this.isDefault()) {\n      return this.product.variants[0];\n    }\n\n    // Read selected options from the product form\n    const options = [];\n\n    if (this.optionsType === this.optionsTypes.select) {\n      this.$options.each((index, option) => {\n        options.push(option.value);\n      });\n    } else if (this.optionsType === this.optionsTypes.radio) {\n      this.$options.filter(':checked').each((index, option) => {\n        options.push(option.value);\n      });\n    } else {\n      return null;\n    }\n\n    return this.productOptions.getVariant(options);\n  }\n\n  unload() {\n    this._unbindEvents();\n  }\n}\n","import $ from 'jquery';\n\nexport default class Menu {\n  constructor($el, states, initialState) {\n    this.$el = $el;\n    this.states = states;\n    this.currentState = initialState;\n    this.$currentStateSlideout = $();\n    this.$el.slideDown(() => {\n      this.changeState(this.currentState);\n    });\n  }\n\n  changeState(newState) {\n    const $oldSlideout = $(this.currentState.slideoutSelector, this.$el);\n    const $oldButtons = $(this.currentState.buttonsSelector, this.$el);\n    const $newSlideout = $(newState.slideoutSelector, this.$el);\n    const $newButtons = $(newState.buttonsSelector, this.$el);\n    const callback = newState.callback;\n\n    if (callback) {\n      callback(this.currentState);\n    }\n\n    this._unbindEvents();\n    this._unbindSlideoutEvents();\n    this.currentState = newState;\n    this.$currentStateSlideout = $newSlideout;\n    this._bindEvents();\n\n    if ($oldButtons.length) {\n      $oldButtons.hide(0, () => $newButtons.show(0));\n    } else {\n      $newButtons.show(0);\n    }\n\n    if ($oldSlideout.length) {\n      $oldSlideout.slideUp(() => $newSlideout.slideDown(() => {\n        this._bindSlideoutEvents();\n        $newSlideout.focus();\n      }));\n    } else {\n      $newSlideout.slideDown(() => {\n        this._bindSlideoutEvents();\n        $newSlideout.focus();\n      });\n    }\n\n    return true;\n  }\n\n  _bindEvents() {\n    for (const button of this.currentState.buttons) {\n      $(button.selector, this.$el).on('click.menu', () => button.callback());\n    }\n  }\n\n  _unbindEvents() {\n    for (const button of this.currentState.buttons) {\n      $(button.selector, this.$el).off('click.menu');\n    }\n  }\n\n  _bindSlideoutEvents() {\n    if (!this.$currentStateSlideout.length) {\n      return;\n    }\n\n    $(window).on('focusin.menu', (event) => {\n      const $target = $(event.target);\n\n      if (!this.$currentStateSlideout.length) {\n        return;\n      }\n\n      if (\n        !$.contains(this.$el[0], $target[0]) &&\n        !$.contains(this.$currentStateSlideout[0], $target[0])\n      ) {\n        const dismiss = this.currentState.dismiss;\n\n        if (dismiss) {\n          dismiss(this.currentState);\n        }\n      }\n    });\n\n    $(window).on('touchstart.menu', () => this._minimizeSlideout());\n\n    $(window).on('touchend.menu touchcancel.menu', () => {\n      this._maximizeSlideout();\n    });\n\n    this.$el.on('touchstart.menu', (event) => {\n      event.stopPropagation();\n    });\n\n    this.$el.on('touchend.menu, ', (event) => {\n      event.stopPropagation();\n    });\n  }\n\n  _unbindSlideoutEvents() {\n    if (!this.$currentStateSlideout.length) {\n      return;\n    }\n\n    $(window).off('focusin.menu');\n    $(window).off('touchstart.menu');\n    $(window).off('touchend.menu touchcancel.menu');\n    this.$el.off('touchstart.menu');\n    this.$el.off('touchend.menu');\n  }\n\n  _minimizeSlideout() {\n    if (!this.$currentStateSlideout.length) {\n      return;\n    }\n\n    const height = this.$currentStateSlideout[0].getBoundingClientRect().height;\n    this.$currentStateSlideout.animate({ height: height / 2, opacity: 0.2 }, { queue: false, duration: 500 });\n  }\n\n  _maximizeSlideout() {\n    if (!this.$currentStateSlideout.length) {\n      return;\n    }\n\n    const oldHeight = this.$currentStateSlideout[0].getBoundingClientRect().height;\n    this.$currentStateSlideout.css('height', '');\n\n    const height = this.$currentStateSlideout[0].getBoundingClientRect().height;\n    this.$currentStateSlideout.css('height', oldHeight);\n\n    this.$currentStateSlideout.animate({ height: height, opacity: 1 }, { queue: false, duration: 500 });\n  }\n\n  unload() {\n    this._unbindEvents();\n    this._unbindSlideoutEvents();\n  }\n}\n","export default class Quantity {\n  constructor(el) {\n    this.$el = $(el);\n    this.$input = this.$el.find('[data-quantity-input]');\n    this.$decrement = this.$el.find('[data-quantity-decrement]');\n    this.$increment = this.$el.find('[data-quantity-increment]');\n\n    this.events = [\n      this.$input.on('change.quantity', event => this.change(this.value)),\n      this.$decrement.on('click.quantity', event => this.change(this.value - 1)),\n      this.$increment.on('click.quantity', event => this.change(this.value + 1)),\n    ];\n\n    this._updateButtonState();\n  }\n\n  unload() {\n    this.events.forEach($el => $el.off('.quantity'));\n  }\n\n  get input() {\n    return this.$input.get(0);\n  }\n\n  get value() {\n    return parseInt(this.$input.val(), 10) || 0;\n  }\n\n  get range() {\n    const min = parseInt(this.$input.attr('min'), 10) || 1;\n    const max = parseInt(this.$input.attr('max'), 10) || Infinity;\n    return { min, max };\n  }\n\n  change(value, trigger = true) {\n    const range = this.range;\n    const currentValue = this.value;\n\n    if (value > range.max) {\n      value = range.max;\n    }\n\n    if (value < range.min) {\n      value = range.min;\n    }\n\n    if (value !== currentValue) {\n      this.$input.val(value);\n    }\n\n    if (trigger && value !== currentValue) {\n      this.$input.trigger('change');\n    }\n\n    this._updateButtonState();\n  }\n\n  _updateButtonState() {\n    const value = this.value;\n    const range = this.range;\n\n    this.$decrement.prop('disabled', value <= range.min);\n    this.$increment.prop('disabled', value >= range.max);\n  }\n}\n","import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport Quantity from '../snippets/Quantity';\nimport VariantHelper from '../VariantHelper';\n\nexport default class ProductForm {\n  /**\n   *\n   * @param {Element} el\n   * @param {Object} options\n   * @param {Object} options.container\n   * @param {Object} options.product\n   * @param {String} options.moneyFormat\n   * @param {Function} options.onAddToCart\n   * @param {Function} options.onSuccess\n   * @param {Function} options.onError\n   * @param {Function} options.onVariantChange\n   * @param {Function} options.onQuantityChange\n   * @param {Function} options.postMessage\n   */\n  constructor(el, options = {}) {\n    this.$el = $(options.container || el);\n    this.$form = $(el);\n    this.options = options;\n    this.postMessage = this.options.postMessage;\n\n    // History\n    this.isThemeEditor = window.Shopify && window.Shopify.designMode;\n    this.useHistory = options.useHistory && !this.isThemeEditor && window.history && history.replaceState;\n\n    // Options\n    this.$atc = this.$el.find('[data-product-atc]');\n    this.$options = this.$el.find('[data-product-option]');\n    this.$variants = this.$el.find('[data-variants]');\n    this.variantHelper = new VariantHelper(this.options.product, this.$variants, this.$options);\n\n    // Quantity\n    this.quantity = new Quantity(this.$el.find('[data-quantity]'));\n\n    // Events\n    this.events = [\n      // ATC\n      this.$atc.on('click.product-form', event => {\n        event.preventDefault();\n        this._addToCart();\n      }),\n\n      // Switch variant\n      $(window).on('product-variant-switch.product-form', (event, data) => {\n        this._changeVariant(data);\n      }),\n\n      // Change quantity\n      $(this.quantity.input).on('change.product-form', event => {\n        if (this.options.onQuantityChange) {\n          this.options.onQuantityChange(\n            this.variantHelper.getSelectedVariant(),\n            this.quantity.value\n          );\n        }\n      }),\n    ];\n  }\n\n  unload() {\n    this.events.forEach($el => $el.off('.product-form'));\n    this.quantity.unload();\n    this.variantHelper.unload();\n  }\n\n  _changeVariant(data) {\n    if (data.firstLoad) {\n      return;\n    }\n\n    const variant = data.variant;\n    const format = this.options.moneyFormat;\n\n    // Update URL\n    this._changeUrl(variant);\n\n    // Compare at price\n    this.$el.find('[data-variant-compare-at-price]')\n      .toggleClass('money-compare-at-hidden', !variant.compare_at_price)\n      .text(Shopify.formatMoney(variant.compare_at_price, format))\n      .each((index, el) => CurrencyConverter.update(el));\n\n    // Price\n    this.$el.find('[data-variant-price]')\n      .text(Shopify.formatMoney(variant.price, format))\n      .each((index, el) => CurrencyConverter.update(el));\n\n    // Form-specific updates\n    if (this.options.onVariantChange) {\n      this.options.onVariantChange(variant);\n    }\n\n    // Notify sections\n    this.postMessage('product:change-variant', { variant });\n  }\n\n  _changeUrl(variant) {\n    if (!this.useHistory) {\n      return;\n    }\n\n    const params = $.param({ variant: variant.id });\n    const url = `${ this.options.product.handle }?${params}`;\n    history.replaceState({}, 'variant', url);\n  }\n\n  _changeVariantInline(variant) {\n    this.$el.find('.product-form-inline-atc-button')\n      .prop('disabled', !variant.available)\n      .text(variant.available\n        ? this.section.data.text.product_available\n        : this.section.data.text.product_unavailable\n      );\n  }\n\n  _addToCart() {\n    if (this.options.onAddToCart) {\n      this.options.onAddToCart();\n    }\n\n    $.ajax({\n      type: 'POST',\n      url: '/cart/add.js',\n      data: this.$form.serialize(),\n      dataType: 'json',\n    })\n\n    // On success\n    .done(response => {\n      this._updateCart();\n\n      if (this.options.onSuccess) {\n        this.options.onSuccess(response, this.quantity.value);\n      }\n    })\n\n    // On failure\n    .fail(response => {\n      if (this.options.onError) {\n        const responseText = JSON.parse(response.responseText);\n        const error = responseText.description;\n\n        this.options.onError(response, error);\n      }\n    });\n  }\n\n  _updateCart() {\n    $.ajax({\n      type: 'GET',\n      url: '/cart.js',\n      dataType: 'json',\n    })\n    .done(response => {\n      this.postMessage('product:add-to-cart', { response });\n    });\n  }\n}\n","import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport VariantHelper from '../VariantHelper';\nimport Menu from '../Menu';\nimport ProductForm from './ProductForm';\n\nexport default class ProductMenu {\n  constructor($el, data, postMessage, inQuickshop) {\n    this.$el = $el;\n    this.data = data;\n\n    // Form\n    this.form = new ProductForm(this.$el.find('[data-product-menu-form]'), {\n      product: this.data.product,\n      moneyFormat: this.data.money_format,\n      postMessage: postMessage,\n      useHistory: !inQuickshop,\n      onSuccess: (response, quantity) => this._onAtcSuccess(response, quantity),\n      onError: (response, error) => this._onAtcError(response, error),\n      onVariantChange: (variant) => this._onVariantChange(variant),\n      onQuantityChange: (variant, quantity) => this._onQuantityChange(variant, quantity),\n    });\n\n    // Select options button\n    this.$productMenuButtonSelectOptionsVariantPrice =\n      $('[data-product-menu-button-selectoptions-variant-price]', this.$el);\n\n    // atc button\n    this.$productMenuButtonAtcVariantPrice =\n      $('[data-product-menu-button-atc-variant-price]', this.$el);\n\n    // Success and failure elements\n    this.$productAtcFailureMessage =\n      $('[data-product-atc-failure-message]', this.$el);\n    this.$productAtcSuccessMessage =\n      $('[data-product-atc-success-message]', this.$el);\n    this.$productAtcSuccessMessageVariantQuantity =\n      $('[data-product-atc-success-message-variant-quantity]', this.$el);\n    this.$productAtcSuccessMessageProductTitle =\n      $('[data-product-atc-success-message-product-title]', this.$el);\n    this.$productAtcSuccessMessageVariantOptions =\n      $('[data-product-atc-success-message-variant-options]', this.$el);\n\n    // Prime the variant data\n    this._onVariantChange(this.form.variantHelper.getSelectedVariant());\n\n    // Menu system states\n    this.states = {\n      defaultNoVariants: {\n        buttonsSelector: '[data-product-menu-buttons-atc]',\n        buttons: [\n          {\n            selector: '[data-product-menu-button-share]',\n            callback: () => {\n              this._clearFailure();\n              this.menu.changeState(this.states.share);\n            },\n          },\n          {\n            selector: '[data-product-menu-button-atc]',\n            callback: () => {\n              this._clearFailure();\n            },\n          },\n        ],\n      },\n      defaultWithVariants: {\n        buttonsSelector: '[data-product-menu-buttons-selectoptions]',\n        buttons: [\n          {\n            selector: '[data-product-menu-button-share]',\n            callback: () => this.menu.changeState(this.states.share),\n          },\n          {\n            selector: '[data-product-menu-button-selectoptions]',\n            callback: () => this.menu.changeState(this.states.atc),\n          },\n        ],\n      },\n      share: {\n        slideoutSelector: '[data-product-slideout-share]',\n        buttonsSelector: '[data-product-menu-buttons-share]',\n        buttons: [\n          {\n            selector: '[data-product-menu-button-cancel]',\n            callback: () => this.menu.changeState(\n              this.form.variantHelper.isDefault()\n                ? this.states.defaultNoVariants\n                : this.states.defaultWithVariants\n            ),\n          },\n          {\n            selector: '[data-product-menu-slideout-button-dismiss]',\n            callback: () => this.menu.changeState(\n              this.form.variantHelper.isDefault()\n                ? this.states.defaultNoVariants\n                : this.states.defaultWithVariants\n            ),\n          },\n        ],\n        dismiss: () => this.menu.changeState(\n          this.form.variantHelper.isDefault()\n            ? this.states.defaultNoVariants\n            : this.states.defaultWithVariants\n        ),\n      },\n      atc: {\n        slideoutSelector: '[data-product-slideout-atc]',\n        buttonsSelector: '[data-product-menu-buttons-atc]',\n        buttons: [\n          {\n            selector: '[data-product-menu-button-share]',\n            callback: () => {\n              this._clearFailure();\n              this.menu.changeState(this.states.share);\n            },\n          },\n          {\n            selector: '[data-product-menu-button-atc]',\n            callback: () => {\n              this._clearFailure();\n            },\n          },\n          {\n            selector: '[data-product-menu-slideout-button-dismiss]',\n            callback: () => {\n              this._clearFailure();\n              this.menu.changeState(this.states.defaultWithVariants);\n            },\n          },\n        ],\n        dismiss: () => {\n          this._clearFailure();\n          this.menu.changeState(this.states.defaultWithVariants);\n        },\n      },\n      atcFailure: {\n        slideoutSelector: '[data-product-slideout-atc-failure]',\n        buttonsSelector: '[data-product-menu-buttons-atc-failure]',\n        buttons: [\n          {\n            selector: '[data-product-menu-button-cancel]',\n            callback: () => this.menu.changeState(this.states.defaultNoVariants),\n          },\n          {\n            selector: '[data-product-menu-slideout-button-dismiss]',\n            callback: () => this.menu.changeState(this.states.defaultNoVariants),\n          },\n        ],\n        dismiss: () => this.menu.changeState(this.states.defaultNoVariants),\n      },\n      atcSuccess: {\n        slideoutSelector: '[data-product-slideout-atc-success]',\n        buttonsSelector: '[data-product-menu-buttons-atc-success]',\n        buttons: [\n          {\n            selector: '[data-product-menu-slideout-button-dismiss]',\n            callback: () => this.menu.changeState(\n              this.form.variantHelper.isDefault()\n                ? this.states.defaultNoVariants\n                : this.states.defaultWithVariants\n            ),\n          },\n        ],\n        dismiss: () => this.menu.changeState(\n          this.form.variantHelper.isDefault()\n            ? this.states.defaultNoVariants\n            : this.states.defaultWithVariants\n        ),\n      },\n    };\n\n    // Product menu state manager\n    const $productMenuContainer = $('[data-product-menu-container]', this.$el);\n    this.menu = new Menu(\n      $productMenuContainer,\n      this.states,\n      this.form.variantHelper.isDefault()\n        ? this.states.defaultNoVariants\n        : this.states.defaultWithVariants\n    );\n  }\n\n  _clearFailure() {\n    clearTimeout(this.errorMessageTimeout);\n    this.$productAtcFailureMessage.hide(0);\n  }\n\n  _onVariantChange(variant) {\n    // ATC\n    this.$el.find('[data-product-menu-button-atc]')\n      .prop('disabled', !variant.available);\n\n    // ATC text\n    this.$el.find('[data-product-menu-button-atc-text]')\n      .text(variant.available\n        ? this.data.text.product_available\n        : this.data.text.product_unavailable\n      );\n\n    // Options\n    this.form.variantHelper.$options\n      .parent()\n      .removeClass('option-soldout')\n      .removeClass('option-selected')\n      .addClass('option-disabled');\n\n    this.form.variantHelper.$options.filter(':not(:disabled)')\n      .parent()\n      .removeClass('option-disabled');\n\n    this.form.variantHelper.$options.filter('[data-soldout=\"true\"]')\n      .parent()\n      .addClass('option-soldout');\n\n    this.form.variantHelper.$options.filter(':checked')\n      .parent()\n      .addClass('option-selected');\n\n    this._onQuantityChange(variant, this.form.quantity.value);\n  }\n\n  _onQuantityChange(variant, quantity) {\n    const price = Shopify.formatMoney(variant.price * quantity, this.data.money_format);\n\n    this.$productMenuButtonSelectOptionsVariantPrice\n      .text(price)\n      .each((index, el) => CurrencyConverter.update(el));\n\n    this.$productMenuButtonAtcVariantPrice\n      .text(price)\n      .each((index, el) => CurrencyConverter.update(el));\n  }\n\n  _onAtcSuccess(response, quantity) {\n    const productTitle = response.product_title;\n    const options = response.variant_options.join(', ');\n\n    this.$productAtcSuccessMessageVariantQuantity.text(quantity);\n    this.$productAtcSuccessMessageProductTitle.text(productTitle);\n\n    if (!this.form.variantHelper.isDefault()) {\n      this.$productAtcSuccessMessageVariantOptions.text(options);\n    }\n\n    this.$productAtcFailureMessage.hide(0);\n    this.menu.changeState(this.states.atcSuccess);\n  }\n\n  _onAtcError(response, error) {\n    this.$productAtcFailureMessage.html(error);\n\n    if (this.form.variantHelper.isDefault()) {\n      this.menu.changeState(this.states.atcFailure);\n      this.$productAtcFailureMessage.show(0);\n    } else {\n      this.$productAtcFailureMessage.fadeIn();\n    }\n\n    this.errorMessageTimeout = setTimeout(() => {\n      if (this.form.variantHelper.isDefault()) {\n        this.menu.changeState(this.states.defaultNoVariants);\n        this.$productAtcFailureMessage.hide();\n      } else {\n        this.$productAtcFailureMessage.fadeOut();\n      }\n    }, 5000);\n  }\n\n  unload() {\n    this.form.unload();\n  }\n}\n","import $ from 'jquery';\nimport fitvids from 'fitvids';\nimport debounce from 'just-debounce';\nimport ProductMenu from '../snippets/ProductMenu';\nimport Layout from '../Layout';\n\nexport default class ProductQuickshop {\n  constructor($parent, $el, postMessage) {\n    this.$parent = $parent;\n    this.$el = $el;\n    this.postMessage = postMessage;\n    this.$featuredImage = $('[data-product-image-featured]', this.$el);\n    this.$imageThumbs = $('[data-product-image-thumb]', this.$el);\n    this.$imageThumbsSlide = $('[data-product-quickshop-image-thumbnails-slide]', this.$el);\n    this.loaded = false;\n\n    try {\n      this.data = JSON.parse($('[data-quickshop-data]', this.$el).text());\n    } catch(error) {\n      console.warn(`Quickshop: invalid quickshop data found. ${error.message}`);\n      return;\n    }\n\n    this._bindEvents();\n  }\n\n  _init() {\n    this.$parent.append(this.$el);\n    this.productMenu = new ProductMenu(this.$el, this.data, this.postMessage, true);\n    fitvids();\n    this.loaded = true;\n  }\n\n  _bindEvents() {\n    $('[data-product-item-image]', this.$parent).on('click.product-quickshop', (event) => {\n      // Minimum height is 500 pixels and must be desktop\n      if (!Layout.isBreakpoint('L') || window.innerHeight < 500) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      this._open();\n    });\n\n    $('[data-quickshop-container]', this.$el).on('click.product-quickshop', (event) => {\n      event.stopPropagation();\n    });\n  }\n\n  _unbindEvents() {\n    $('[data-product-item-image]', this.$parent).off('click.product-quickshop');\n    $('[data-quickshop-container]', this.$el).off('click.product-quickshop');\n  }\n\n  _bindOnOpen() {\n    $('[data-product-quickshop-button-dismiss]', this.$el).on('click.product-quickshop', () => {\n      this._close();\n    });\n\n    this.$el.on('click.product-quickshop', () => {\n      this._close();\n    });\n\n    $(document).on('keyup.product-quickshop', (event) => {\n      if (event.keyCode == 27) {\n        this._close();\n      }\n    });\n\n    $('[data-product-quickshop-image-thumbnails-button-up]', this.$el).on(\n      'click.product-quickshop',\n      () => this._scrollToImage('up')\n    );\n\n    $('[data-product-quickshop-image-thumbnails-button-down]', this.$el).on(\n      'click.product-quickshop',\n      () => this._scrollToImage('down')\n    );\n\n    $(window).on('product-variant-switch.product-quickshop', debounce((event, data) => this._switchVariant(event, data), 250));\n    this.$imageThumbs.on('click.product-quickshop', (event) => {\n      const $image = $(event.currentTarget);\n      this._switchImage($image);\n    });\n\n    $(window).on('resize.product-quickshop', () => this._close());\n  }\n\n  _unbindOnOpen() {\n    $('[data-product-quickshop-button-dismiss]', this.$el).off('click.product-quickshop');\n    this.$el.off('click.product-quickshop');\n    $(document).off('keyup.product-quickshop');\n    $(window).off('product-variant-switch.product-quickshop');\n    this.$imageThumbs.off('click.product-quickshop');\n    $(window).off('resize.product-quickshop');\n  }\n\n  _scrollToImage(direction) {\n    const imageSlideTop = this.$imageThumbsSlide[0].getBoundingClientRect().top;\n    let closest = direction == 'up' ? -Infinity : Infinity;\n    let closestThumb = null;\n\n    for (const imageThumb of this.$imageThumbs) {\n      const top = imageThumb.getBoundingClientRect().top;\n      const bottom = imageThumb.getBoundingClientRect().bottom;\n\n      if (\n        (direction == 'up' && top <= imageSlideTop && top >= closest) ||\n        (direction == 'down' && bottom >= imageSlideTop && bottom <= closest)\n      ) {\n        closest = direction == 'up'\n          ? top\n          : bottom;\n        closestThumb = imageThumb;\n      }\n    }\n\n    const thumbIndex = this.$imageThumbs.index($(closestThumb));\n\n    if (direction == 'up') {\n      closestThumb = this.$imageThumbs.get(Math.max(thumbIndex - 1, 0));\n    } else if (direction == 'down') {\n      closestThumb = this.$imageThumbs.get(Math.min(thumbIndex + 1, this.$imageThumbs.length - 1));\n    }\n\n    if (closestThumb != undefined) {\n      this.$imageThumbsSlide.animate({\n        scrollTop: closestThumb.offsetTop - 15\n      }, { queue: false, duration: 500 });\n    }\n  }\n\n  _open() {\n    if (!this.loaded) {\n      this._init();\n    }\n\n    this._bindOnOpen();\n    this.$el.revealer('show');\n  }\n\n  _close() {\n    this._unbindOnOpen();\n    this.$el.revealer('hide');\n  }\n\n  _switchVariant(event, data) {\n    const variant = data.variant;\n    const firstLoad = data.firstLoad;\n\n    if (firstLoad || !variant.featured_image) {\n      return;\n    }\n\n    const $productImage = $(`[data-product-image-id=\"${variant.featured_image.id}\"]`, this.$imageThumbsSlide);\n\n    if (!$productImage.length) {\n      return;\n    }\n\n    this._switchImage($productImage);\n  }\n\n  _switchImage($image) {\n    const alt = $image.attr('alt');\n    const src = $image.data('src');\n    const srcset = $image.data('srcset');\n\n    this.$featuredImage.attr('alt', alt);\n    this.$featuredImage.attr('src', src);\n    this.$featuredImage.attr('srcset', srcset);\n\n    this.$imageThumbs.each((index, el) => {\n      $(el).parent().removeClass('product-quickshop-image-thumbnail-selected');\n    });\n\n    $image.parent().addClass('product-quickshop-image-thumbnail-selected');\n  }\n\n  unload() {\n    if (this.productMenu) {\n      this.productMenu.unload();\n    }\n\n    this._unbindOnOpen();\n    this._unbindEvents();\n  }\n}\n","import $ from 'jquery';\nimport ProductQuickshop from '../snippets/ProductQuickshop';\n\nexport default class ProductItem {\n  constructor($el, postMessage) {\n    this.$el = $el;\n    this.postMessage = postMessage;\n\n    if (this.$el.is('[data-use-quickshop]')) {\n      const productQuickshopMarkup = $('[data-quickshop-markup]', this.$el).text();\n\n      try {\n        this.productQuickshop = new ProductQuickshop(\n          this.$el,\n          $(JSON.parse(productQuickshopMarkup)),\n          this.postMessage\n        );\n      } catch(error) {\n        console.warn(`Product item: invalid quickshop data found. ${error.message}`);\n        return;\n      }\n    }\n\n    this._objectFitPolyfill();\n  }\n\n  _isObjectFitAvailable() {\n    return 'objectFit' in document.documentElement.style;\n  }\n\n  _objectFitPolyfill() {\n    if (this._isObjectFitAvailable()) {\n      return;\n    }\n\n    const $image = $('[data-product-item-image]', this.$el);\n    const src = $('img', $image).attr('src');\n\n    $image.addClass('product-item-image-no-objectfit');\n    $image.css('background-image', `url(\"${ src }\")`);\n  }\n\n  unload() {\n    if (this.productQuickshop) {\n      this.productQuickshop.unload();\n    }\n  }\n}\n","import $ from 'jquery';\nimport Flickity from 'flickity';\nimport 'flickity-imagesloaded';\nimport layout from '../Layout';\nimport ProductItem from '../snippets/ProductItem';\n\nexport default class ProductHighlights {\n  constructor($el, postMessage) {\n    this.$el = $el;\n    this.postMessage = postMessage;\n    this.$productHighlightsNormal = $('[data-product-highlights-normal]', this.$el);\n    this.callback = this._init.bind(this);\n\n    if (!this.$productHighlightsNormal.length) {\n      return;\n    }\n\n    // Product items\n    this.productItems = [];\n    const $productItems = $('[data-product-item]', this.$el);\n\n    for (const productItem of $productItems) {\n      this.productItems.push(\n        new ProductItem($(productItem), this.postMessage)\n      );\n    }\n\n    this._bindEvents();\n    this._init();\n  }\n\n  _bindEvents() {\n    layout.onBreakpointChange(this.callback);\n  }\n\n  _unbindEvents() {\n    layout.offBreakpointChange(this.callback);\n  }\n\n  _init() {\n    if (layout.isBreakpoint('M') || layout.isBreakpoint('S')) {\n      this._initFlickity();\n    } else {\n      this._destroyFlickity();\n    }\n  }\n\n  _initFlickity() {\n    if (!this.flickity) {\n      this.flickity = new Flickity(this.$productHighlightsNormal[0], {\n        cellSelector: '[data-product-item]',\n        contain: true,\n        prevNextButtons: false,\n        pageDots: false,\n        selectedAttraction: 0.02,\n        imagesLoaded: true,\n      });\n    }\n  }\n\n  _destroyFlickity() {\n    if (this.flickity) {\n      this.flickity.destroy();\n      this.flickity = null;\n      $('[data-product-item]', this.$el).attr('style', '');\n    }\n  }\n\n  unload() {\n    this._unbindEvents();\n\n    for (const productItem of this.productItems) {\n      productItem.unload();\n    }\n  }\n}\n","import $ from 'jquery';\nimport ProductHighlights from '../snippets/ProductHighlights';\n\nexport default class DynamicFeaturedProducts {\n  constructor(section) {\n    this.section = section;\n    this.$el = $(section.el);\n    this.productHighlights = new ProductHighlights(this.$el, this.section.postMessage);\n  }\n\n  onSectionUnload() {\n    this.productHighlights.unload();\n  }\n}\n","/**\n * Get URLs to square versions of an Instagram photo.\n *\n * @param {*} photo The instagram photo object, as returned by their API.\n * @return Object An object with `small` and `large` URLs.\n */\nfunction instagramSquared(photo) {\n  var response = { small:'', large:'', thumbnail:'' };\n\n  // At a bare minimum we need the following:\n  if (!photo || !photo.images || !photo.images.standard_resolution) {\n    console.error('Instagram: can not parse photo data.');\n    return response;\n  }\n\n  // Set fallbacks in case we can't resize\n  response.large = photo.images.standard_resolution.url;\n  response.small = photo.images.low_resolution\n    ? photo.images.low_resolution.url\n    : photo.images.standard_resolution.url;\n  response.thumbnail = photo.images.thumbnail\n    ? photo.images.thumbnail.url\n    : photo.images.standard_resolution.url;\n\n  // We need the cropping information from the thumbnail URL\n  if (!photo.images.thumbnail) return response;\n\n  // Crop each size\n  response.large = getSquareUrl(response.large, photo.images.thumbnail.url);\n  response.small = getSquareUrl(response.small, photo.images.thumbnail.url);\n\n  return response;\n}\n\n/**\n * Resize the template URL based off another URL's sizes.\n *\n * This pulls the size information from one URL (in a format like `s320x320`)\n * and and moves it to another URL.\n *\n * This lets us use the cropping information from one URL, and the sizing\n * information from another. Currently, only the thumbnail size has the crop\n * info, so the templateU\n *\n * @param url\n *        An Instagram photo URL to pull the sizing information from.\n *\n * @param templateUrl\n *        An Instagram photo URL that has cropping information.\n */\nfunction getSquareUrl(url, templateUrl) {\n  var sizes = url.match(/\\/[ps]([0-9]+)x([0-9]+)\\//);\n  if (!sizes || sizes.length < 3) return templateUrl;\n\n  var size = Math.round(Math.max(\n    parseInt(sizes[1], 10),\n    parseInt(sizes[2], 10)\n  ));\n\n  return templateUrl.replace(\n    /\\/[ps][0-9]+x[0-9]+\\//,\n    \"/s\" + size + \"x\" + size + \"/\"\n  );\n}\n\n// If copying to a Coffeescript file, skip this line:\nmodule.exports = instagramSquared;\n","import $ from 'jquery';\nimport instagramSquared from 'pxu-instagram-squared';\n\nexport default class DynamicInstagram {\n  constructor(section) {\n    this.settings = section.data;\n    this.onboarding = this.settings.onboarding;\n    this.photoCount = this.settings.photoCount;\n    this.accessToken = this.settings.accessToken;\n\n    this.$el = $(section.el);\n    this.$photoTemplate = $('[data-instagram-photo-template]', this.$el);\n    this.$photoContainer = $('[data-instagram-photos]', this.$el);\n    this.$contentPlaceholder = $('[data-instagram-content-placeholder]', this.$el);\n\n    this.$photoTemplate.removeAttr('data-instagram-photo-template');\n    this.$photoTemplate.remove();\n\n    if (this.onboarding || !this.accessToken) {\n      return;\n    }\n\n    this._getPhotos()\n      .done((photos) => this._renderPhotos(photos))\n      .fail(function(error) {\n        console.warn(`Instagram: ${ error }`);\n      });\n  }\n\n  _getPhotos() {\n    const url = `https://api.instagram.com/v1/users/self/media/recent?access_token=${ this.accessToken }&count=${ this.photoCount }&callback=`;\n    const photoPromise = $.ajax(url, {\n      dataType: 'jsonp',\n    });\n\n    return photoPromise.then(function(response) {\n      if (response.meta.code != 200) {\n        const error = `${ response.meta.error_message } (${ response.meta.error_type })`;\n        return $.Deferred().reject(error).promise();\n      }\n\n      return response.data;\n    });\n  }\n\n  _renderPhotos(photos) {\n    const photoArray = [];\n\n    // If we have more than 4 images, we want the nearest even number\n    if (photos.length > 4 && photos.length % 2 == 1) {\n      photos.pop();\n    }\n\n    this.$photoContainer.addClass(`instagram-photo-count-${ photos.length }`);\n\n    for (let photo of photos) {\n      const $template = this.$photoTemplate.clone();\n      // Convert UNIX seconds to milliseconds and create Date object\n      const date = new Date(photo.created_time * 1000);\n      const dateOptions = {\n        day: '2-digit',\n        month: 'short',\n        year: 'numeric',\n      };\n      const likes = photo.likes.count;\n      const timestamp = date.toLocaleDateString(this.settings.locale, dateOptions);\n      const caption = photo.caption && photo.caption.text ? photo.caption.text : '';\n\n      const sizes = instagramSquared(photo);\n      const $link = $(`<a target=\"_blank\" href=\"${ photo.link }\"></a>`);\n      const $photo = $(`<img src=\"${ sizes.small }\" srcset=\"${ sizes.large } 2x\" />`).wrap($link);\n\n      $template\n        .find('[data-instagram-photo-template-likes]')\n        .append(likes)\n        .removeAttr('data-instagram-photo-template-likes');\n\n      if (caption !== '') {\n        $template\n          .find('[data-instagram-photo-template-caption]')\n          .append(caption)\n          .removeAttr('data-instagram-photo-template-caption');\n      }\n\n      $template\n        .find('[data-instagram-photo-template-timestamp]')\n        .append(timestamp)\n        .removeAttr('data-instagram-photo-template-timestamp');\n      $template.append($link);\n      $template.append($photo);\n\n      photoArray.push($template);\n    }\n\n    this.$contentPlaceholder.fadeOut().promise().then(() => {\n      this.$photoContainer.append(photoArray);\n      this.$contentPlaceholder.remove();\n    });\n  }\n}\n","import $ from 'jquery';\nimport Flickity from 'flickity';\nimport 'flickity-imagesloaded';\n\nexport default class DynamicSlideshow {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.data = section.data;\n    this.$slideshow = $('[data-slideshow]', this.$el);\n    this.$slides = $('[data-slideshow-slide]', this.$el);\n    this.autoplay = this.data.should_autoplay\n      && this.data.autoplay\n      ? this.data.autoplay * 1000\n      : false;\n\n    if (this.data.slide_count > 1) {\n      this._initFlickity();\n      this._bindEvents();\n    }\n  }\n\n  _initFlickity() {\n    // Reintroduce Flickity adaptive height (featured in v2.0.0 but not v1.2.1)\n    Flickity.prototype.setGallerySize = function setGallerySize() {\n      if (this.options.setGallerySize) {\n        const height = this.options.adaptiveHeight && this.selectedCell ?\n          this.selectedCell.size.outerHeight : this.maxCellHeight;\n        this.viewport.style.height = `${height}px`;\n      }\n    };\n\n    const originalSelect = Flickity.prototype.select;\n    Flickity.prototype.select = function select() {\n      originalSelect.apply(this, arguments);\n      if (this.options.adaptiveHeight) {\n        this.setGallerySize();\n      }\n    };\n\n    this.flickity = new Flickity(this.$slideshow[0], {\n      accessibility: true,\n      adaptiveHeight: true,\n      autoPlay: this.autoplay,\n      cellAlign: 'left',\n      cellSelector: '[data-slideshow-slide]',\n      friction: 0.8,\n      imagesLoaded: true,\n      pageDots: false,\n      pauseAutoPlayOnHover: true,\n      prevNextButtons: true,\n      selectedAttraction: 0.2,\n      wrapAround: true,\n    });\n  }\n\n  _bindEvents() {\n    this.$slides.on('focusin.slideshow', (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      const slideIndex = this.$slides.index($(event.currentTarget));\n      this.flickity.select(slideIndex, false, true);\n      this.flickity.reloadCells();\n    });\n  }\n\n  _unbindEvents() {\n    this.$slides.off('focusin.slideshow');\n  }\n\n  onSectionBlockSelect(block) {\n    const $slides = $('[data-slideshow-slide]');\n    const slideIndex = $slides.index($(block.el));\n\n    this.flickity.select(slideIndex, false, false);\n\n    if (this.autoplay) {\n      this.flickity.stopPlayer();\n    }\n  }\n\n  onSectionBlockDeselect() {\n    if (this.autoplay) {\n      this.flickity.playPlayer();\n    }\n  }\n\n  onSectionUnload() {\n    this.flickity.destroy();\n    this._unbindEvents();\n  }\n}\n","/*********************************************************************\n*  #### Twitter Post Fetcher v17.0.2 ####\n*  Coded by Jason Mayes 2015. A present to all the developers out there.\n*  www.jasonmayes.com\n*  Please keep this disclaimer with my code if you use it. Thanks. :-)\n*  Got feedback or questions, ask here:\n*  http://www.jasonmayes.com/projects/twitterApi/\n*  Github: https://github.com/jasonmayes/Twitter-Post-Fetcher\n*  Updates will be posted to this site.\n*********************************************************************/\n(function(root,factory){if(typeof define==='function'&&define.amd){define([],factory);}else if(typeof exports==='object'){module.exports=factory();}else{factory();}}(this,function(){var domNode='';var maxTweets=20;var parseLinks=true;var queue=[];var inProgress=false;var printTime=true;var printUser=true;var formatterFunction=null;var supportsClassName=true;var showRts=true;var customCallbackFunction=null;var showInteractionLinks=true;var showImages=false;var useEmoji=false;var targetBlank=true;var lang='en';var permalinks=true;var dataOnly=false;var script=null;var scriptAdded=false;function handleTweets(tweets){if(customCallbackFunction===null){var x=tweets.length;var n=0;var element=document.getElementById(domNode);var html='<ul>';while(n<x){html+='<li>'+tweets[n]+'</li>';n++;}\nhtml+='</ul>';element.innerHTML=html;}else{customCallbackFunction(tweets);}}\nfunction strip(data){return data.replace(/<b[^>]*>(.*?)<\\/b>/gi,function(a,s){return s;}).replace(/class=\"(?!(tco-hidden|tco-display|tco-ellipsis))+.*?\"|data-query-source=\".*?\"|dir=\".*?\"|rel=\".*?\"/gi,'');}\nfunction targetLinksToNewWindow(el){var links=el.getElementsByTagName('a');for(var i=links.length-1;i>=0;i--){links[i].setAttribute('target','_blank');}}\nfunction getElementsByClassName(node,classname){var a=[];var regex=new RegExp('(^| )'+classname+'( |$)');var elems=node.getElementsByTagName('*');for(var i=0,j=elems.length;i<j;i++){if(regex.test(elems[i].className)){a.push(elems[i]);}}\nreturn a;}\nfunction extractImageUrl(image_data){if(image_data!==undefined&&image_data.innerHTML.indexOf('data-srcset')>=0){var data_src=image_data.innerHTML.match(/data-srcset=\"([A-z0-9%_\\.-]+)/i)[0];return decodeURIComponent(data_src).split('\"')[1];}}\nvar twitterFetcher={fetch:function(config){if(config.maxTweets===undefined){config.maxTweets=20;}\nif(config.enableLinks===undefined){config.enableLinks=true;}\nif(config.showUser===undefined){config.showUser=true;}\nif(config.showTime===undefined){config.showTime=true;}\nif(config.dateFunction===undefined){config.dateFunction='default';}\nif(config.showRetweet===undefined){config.showRetweet=true;}\nif(config.customCallback===undefined){config.customCallback=null;}\nif(config.showInteraction===undefined){config.showInteraction=true;}\nif(config.showImages===undefined){config.showImages=false;}\nif(config.useEmoji===undefined){config.useEmoji=false;}\nif(config.linksInNewWindow===undefined){config.linksInNewWindow=true;}\nif(config.showPermalinks===undefined){config.showPermalinks=true;}\nif(config.dataOnly===undefined){config.dataOnly=false;}\nif(inProgress){queue.push(config);}else{inProgress=true;domNode=config.domId;maxTweets=config.maxTweets;parseLinks=config.enableLinks;printUser=config.showUser;printTime=config.showTime;showRts=config.showRetweet;formatterFunction=config.dateFunction;customCallbackFunction=config.customCallback;showInteractionLinks=config.showInteraction;showImages=config.showImages;useEmoji=config.useEmoji;targetBlank=config.linksInNewWindow;permalinks=config.showPermalinks;dataOnly=config.dataOnly;var head=document.getElementsByTagName('head')[0];if(script!==null){head.removeChild(script);}\nscript=document.createElement('script');script.type='text/javascript';if(config.list!==undefined){script.src='https://syndication.twitter.com/timeline/list?'+'callback=__twttrf.callback&dnt=false&list_slug='+\nconfig.list.listSlug+'&screen_name='+config.list.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.profile!==undefined){script.src='https://syndication.twitter.com/timeline/profile?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.profile.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else if(config.likes!==undefined){script.src='https://syndication.twitter.com/timeline/likes?'+'callback=__twttrf.callback&dnt=false'+'&screen_name='+config.likes.screenName+'&suppress_response_codes=true&lang='+(config.lang||lang)+'&rnd='+Math.random();}else{script.src='https://cdn.syndication.twimg.com/widgets/timelines/'+\nconfig.id+'?&lang='+(config.lang||lang)+'&callback=__twttrf.callback&'+'suppress_response_codes=true&rnd='+Math.random();}\nhead.appendChild(script);}},callback:function(data){if(data===undefined||data.body===undefined){inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}\nreturn;}\nif(!useEmoji){data.body=data.body.replace(/(<img[^c]*class=\"Emoji[^>]*>)|(<img[^c]*class=\"u-block[^>]*>)/g,'');}\nif(!showImages){data.body=data.body.replace(/(<img[^c]*class=\"NaturalImage-image[^>]*>|(<img[^c]*class=\"CroppedImage-image[^>]*>))/g,'');}\nif(!printUser){data.body=data.body.replace(/(<img[^c]*class=\"Avatar\"[^>]*>)/g,'');}\nvar div=document.createElement('div');div.innerHTML=data.body;if(typeof(div.getElementsByClassName)==='undefined'){supportsClassName=false;}\nfunction swapDataSrc(element){var avatarImg=element.getElementsByTagName('img')[0];avatarImg.src=avatarImg.getAttribute('data-src-2x');return element;}\nvar tweets=[];var authors=[];var times=[];var images=[];var rts=[];var tids=[];var permalinksURL=[];var x=0;if(supportsClassName){var tmp=div.getElementsByClassName('timeline-Tweet');while(x<tmp.length){if(tmp[x].getElementsByClassName('timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}\nif(!rts[x]||rts[x]&&showRts){tweets.push(tmp[x].getElementsByClassName('timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(tmp[x].getElementsByClassName('timeline-Tweet-author')[0]));}\ntimes.push(tmp[x].getElementsByClassName('dt-updated')[0]);permalinksURL.push(tmp[x].getElementsByClassName('timeline-Tweet-timestamp')[0]);if(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]!==undefined){images.push(tmp[x].getElementsByClassName('timeline-Tweet-media')[0]);}else{images.push(undefined);}}\nx++;}}else{var tmp=getElementsByClassName(div,'timeline-Tweet');while(x<tmp.length){if(getElementsByClassName(tmp[x],'timeline-Tweet-retweetCredit').length>0){rts.push(true);}else{rts.push(false);}\nif(!rts[x]||rts[x]&&showRts){tweets.push(getElementsByClassName(tmp[x],'timeline-Tweet-text')[0]);tids.push(tmp[x].getAttribute('data-tweet-id'));if(printUser){authors.push(swapDataSrc(getElementsByClassName(tmp[x],'timeline-Tweet-author')[0]));}\ntimes.push(getElementsByClassName(tmp[x],'dt-updated')[0]);permalinksURL.push(getElementsByClassName(tmp[x],'timeline-Tweet-timestamp')[0]);if(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]!==undefined){images.push(getElementsByClassName(tmp[x],'timeline-Tweet-media')[0]);}else{images.push(undefined);}}\nx++;}}\nif(tweets.length>maxTweets){tweets.splice(maxTweets,(tweets.length-maxTweets));authors.splice(maxTweets,(authors.length-maxTweets));times.splice(maxTweets,(times.length-maxTweets));rts.splice(maxTweets,(rts.length-maxTweets));images.splice(maxTweets,(images.length-maxTweets));permalinksURL.splice(maxTweets,(permalinksURL.length-maxTweets));}\nvar arrayTweets=[];var x=tweets.length;var n=0;if(dataOnly){while(n<x){arrayTweets.push({tweet:tweets[n].innerHTML,author:authors[n]?authors[n].innerHTML:'Unknown Author',author_data:{profile_url:authors[n]?authors[n].querySelector('[data-scribe=\"element:user_link\"]').href:null,profile_image:authors[n]?authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-1x'):null,profile_image_2x:authors[n]?authors[n].querySelector('[data-scribe=\"element:avatar\"]').getAttribute('data-src-2x'):null,screen_name:authors[n]?authors[n].querySelector('[data-scribe=\"element:screen_name\"]').title:null,name:authors[n]?authors[n].querySelector('[data-scribe=\"element:name\"]').title:null},time:times[n].textContent,timestamp:times[n].getAttribute('datetime').replace('+0000','Z').replace(/([\\+\\-])(\\d\\d)(\\d\\d)/,'$1$2:$3'),image:extractImageUrl(images[n]),rt:rts[n],tid:tids[n],permalinkURL:(permalinksURL[n]===undefined)?'':permalinksURL[n].href});n++;}}else{while(n<x){if(typeof(formatterFunction)!=='string'){var datetimeText=times[n].getAttribute('datetime');var newDate=new Date(times[n].getAttribute('datetime').replace(/-/g,'/').replace('T',' ').split('+')[0]);var dateString=formatterFunction(newDate,datetimeText);times[n].setAttribute('aria-label',dateString);if(tweets[n].textContent){if(supportsClassName){times[n].textContent=dateString;}else{var h=document.createElement('p');var t=document.createTextNode(dateString);h.appendChild(t);h.setAttribute('aria-label',dateString);times[n]=h;}}else{times[n].textContent=dateString;}}\nvar op='';if(parseLinks){if(targetBlank){targetLinksToNewWindow(tweets[n]);if(printUser){targetLinksToNewWindow(authors[n]);}}\nif(printUser){op+='<div class=\"user\">'+strip(authors[n].innerHTML)+'</div>';}\nop+='<p class=\"tweet\">'+strip(tweets[n].innerHTML)+'</p>';if(printTime){if(permalinks){op+='<p class=\"timePosted\"><a href=\"'+permalinksURL[n]+'\">'+times[n].getAttribute('aria-label')+'</a></p>';}else{op+='<p class=\"timePosted\">'+\ntimes[n].getAttribute('aria-label')+'</p>';}}}else{if(tweets[n].textContent){if(printUser){op+='<p class=\"user\">'+authors[n].textContent+'</p>';}\nop+='<p class=\"tweet\">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class=\"timePosted\">'+times[n].textContent+'</p>';}}else{if(printUser){op+='<p class=\"user\">'+authors[n].textContent+'</p>';}\nop+='<p class=\"tweet\">'+tweets[n].textContent+'</p>';if(printTime){op+='<p class=\"timePosted\">'+times[n].textContent+'</p>';}}}\nif(showInteractionLinks){op+='<p class=\"interact\"><a href=\"https://twitter.com/intent/'+'tweet?in_reply_to='+tids[n]+'\" class=\"twitter_reply_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Reply</a><a href=\"https://twitter.com/intent/retweet?'+'tweet_id='+tids[n]+'\" class=\"twitter_retweet_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Retweet</a>'+'<a href=\"https://twitter.com/intent/favorite?tweet_id='+\ntids[n]+'\" class=\"twitter_fav_icon\"'+\n(targetBlank?' target=\"_blank\">':'>')+'Favorite</a></p>';}\nif(showImages&&images[n]!==undefined&&extractImageUrl(images[n])!==undefined){op+='<div class=\"media\">'+'<img src=\"'+extractImageUrl(images[n])+'\" alt=\"Image from tweet\" />'+'</div>';}\nif(showImages){arrayTweets.push(op);}else if(!showImages&&tweets[n].textContent.length){arrayTweets.push(op);}\nn++;}}\nhandleTweets(arrayTweets);inProgress=false;if(queue.length>0){twitterFetcher.fetch(queue[0]);queue.splice(0,1);}}};window.__twttrf=twitterFetcher;window.twitterFetcher=twitterFetcher;return twitterFetcher;}));\n","import $ from 'jquery';\nimport twitterFetcher from 'twitter-fetcher';\n\nexport default class DynamicTwitter {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.$tweetContainer = $('[data-tweet-content]', this.$el);\n    this.$tweetDate = $('[data-tweet-date]', this.$el);\n    this.$contentPlaceholder = $('[data-tweet-content-placeholder]', this.$el);\n\n    this.settings = section.data;\n    const onboarding = this.settings.onboarding;\n    const username = this.settings.username;\n\n    if (onboarding || !username) {\n      return;\n    }\n\n    twitterFetcher.fetch({\n      profile: { screenName: username },\n      maxTweets: 1,\n      enableLinks: true,\n      showUser: true,\n      showTime: true,\n      showRetweet: false,\n      dataOnly: true,\n      customCallback: tweets => this._renderTweet(tweets),\n      showInteraction: false,\n      useEmoji: true,\n    });\n  }\n\n  _renderTweet(tweets) {\n    if (!tweets || !tweets.length) {\n      return;\n    }\n\n    const tweet = tweets[0];\n    const time = tweet.time;\n    const content = tweet.tweet;\n\n    if (this.$tweetContainer.length) {\n      this.$contentPlaceholder.fadeOut(() => {\n        this.$tweetContainer.html(content);\n        this.$contentPlaceholder.remove();\n      });\n    }\n\n    if (this.$tweetDate.length) this.$tweetDate.html(time);\n  }\n}\n","import $ from 'jquery';\n\nexport default class GiftCardStaticSection {\n  constructor(section) {\n    this.$el = $(section.el);\n\n    this.$qrcode = this.$el.find('[data-qrcode]');\n    this._addQRCode();\n  }\n\n  onSectionUnload() {\n    this.qrcode = null;\n  }\n\n  _addQRCode() {\n    if (!window.QRCode) return;\n\n    this.qrcode = new QRCode(this.$qrcode[0], {\n      text: this.$qrcode.data('qrcode'),\n      width: 120,\n      height: 120,\n    });\n  }\n}\n","import $ from 'jquery';\n\nexport default class MobileNav {\n  constructor(el) {\n    this.$html = $('html');\n\n    // Component elements\n    this.$el = $(el);\n    this.$panel = this.$el.find('.mobilenav-panel');\n    this.$overlay = this.$el.find('.mobilenav-overlay');\n    this.$content = this.$el.find('.mobilenav-panel-content');\n    this.$animators = this.$el.find('[data-mobilenav-animator]');\n\n    // Search elements\n    this.$searchInput = this.$el.find('.mobilenav-search-input');\n    this.$searchCancel = this.$el.find('.mobilenav-search-cancel');\n\n    // Contact bar elements\n    this.$contact = this.$el.find('.mobilenav-contactbar');\n\n    this.$el.on('click.navmenu', '.navmenu-link-parent', event => {\n      event.preventDefault();\n      this.toggleItem(event.currentTarget);\n    });\n\n    this.events = [];\n  }\n\n  unload() {\n    this.close();\n    this.$el.off('.navmenu');\n  }\n\n  open() {\n    this.$html.addClass('scroll-lock');\n\n    // Animate in elements\n    this.$animators\n      .revealer('show')\n      .one('revealer-show', () => this.$panel.css('display', ''));\n    this.$panel.css('display', 'block');\n    this.$searchInput.focus();\n\n    // Event handlers\n    this.events = [\n      // Close menu when clicking on the overlay\n      this.$overlay.on('click.mobilenav', event => this.close()),\n\n      // Disable scrolling on overlay and contactbar\n      this.$overlay.on('touchmove.mobilenav', event => event.preventDefault()),\n      this.$contact.on('touchmove.mobilenav', event => event.preventDefault()),\n\n      // Close keyboard when scrolling through the menu\n      this.$content.on('touchmove.mobilenav', event => this.$searchInput.blur()),\n\n      // Button to blur search input button\n      this.$searchCancel.on('click.mobilenav', event => this.$searchInput.blur()),\n    ];\n  }\n\n  close() {\n    this.$html.removeClass('scroll-lock');\n\n    // Unbind events\n    this.events.forEach($el => $el.off('.mobilenav'));\n    this.events = [];\n\n    // Animate out items\n    this.$animators.revealer('hide');\n  }\n\n  toggleItem(el) {\n    const $el = $(el);\n    $el.toggleClass('navmenu-selected');\n\n    const $menu = $el.siblings('.navmenu');\n    $menu.slideToggle();\n  }\n}\n","import $ from 'jquery';\n\nexport default class NavDesktop {\n  constructor(el, postMessage) {\n    this.$el = $(el);\n    this.$overlay = $('.site-navigation-overlay');\n    this.postMessage = postMessage;\n\n    this.events = [\n      // Open item on hover\n      this.$el.on('mouseenter.navmenu', '.navmenu-item-parent:not([data-navmenu-ignore])', event => {\n        this.openItem(event.currentTarget);\n      }),\n\n      // Close item on hover\n      this.$el.on('mouseleave.navmenu', '.navmenu-item-parent:not([data-navmenu-ignore])', event => {\n        this.closeItem(event.currentTarget);\n      }),\n\n      // Toggle item on touch\n      this.$el.on('touchend.navmenu', '.navmenu-item-parent:not([data-navmenu-ignore]) > .navmenu-link-parent', event => {\n        event.preventDefault();\n        event.stopPropagation();\n        this.toggleItem(event.currentTarget.parentNode);\n      }),\n\n      // Keyboard navigation -- toggle submenus\n      this.$el.on('focus.navmenu', '.navmenu-item-parent:not([data-navmenu-ignore]) > .navmenu-link-parent', event => {\n        this.toggleItem(event.currentTarget.parentNode);\n      }),\n\n      // Keyboard navigation -- close submenus when moving to a new nav item\n      this.$el.on('focus.navmenu', '.navmenu-depth-1 > .navmenu-item:not([data-navmenu-ignore]) .navmenu-link', event => {\n        this.closeAll(event.currentTarget);\n      }),\n\n      this.$overlay.on('click.navmenu', event => {\n        this.postMessage('nav:close-triggers', { source: el });\n        this.closeAll();\n        this.hideOverlay();\n      }),\n    ];\n  }\n\n  unload() {\n    this.events.forEach($el => $el.off('.navmenu'));\n  }\n\n  showOverlay() {\n    this.$overlay.show();\n  }\n\n  hideOverlay() {\n    this.$overlay.hide();\n  }\n\n  openItem(el) {\n    const $el = $(el);\n\n    // Check if menu is already open\n    const $menu = $el.children('.navmenu');\n    if ($menu.revealer('isVisible')) return;\n\n    // Close previously opened items\n    this.closeAll(el);\n    this.postMessage('nav:close-triggers', { source: el });\n\n    // Show menu\n    $menu.revealer('show');\n\n    // Show overlay\n    this.showOverlay();\n  }\n\n  closeAll(target) {\n    this.$el.find('.navmenu-depth-1 > .navmenu-item-parent').each((i, el) => {\n\n      // Close any submenus in this tree\n      $(el)\n        .find('.navmenu-item-parent')\n        .each((i, submenu) => {\n          if ($.contains(submenu, target)) return true;\n\n          this.closeItem(submenu);\n        });\n\n      if ($.contains(el, target)) return true;\n\n      // Close root-level menu item\n      this.closeItem(el);\n    });\n\n    this.hideOverlay();\n  }\n\n  closeItem(el) {\n    const $menu = $(el).children('.navmenu');\n    if (!$menu.revealer('isVisible')) return;\n\n    // Hide menu\n    $menu.revealer('hide');\n\n    // Hide overlay\n    if (this.isFirstLevel(el)) {\n      this.hideOverlay();\n    }\n  }\n\n  toggleItem(el) {\n    const $el = $(el);\n    const $menu = $el.children('.navmenu');\n\n    if ($menu.revealer('isVisible')) {\n      this.closeItem(el);\n    } else {\n      this.openItem(el);\n    }\n  }\n\n  isFirstLevel(el) {\n    const $el = $(el);\n    return (\n      $el.is('.navmenu-item') && $el.parent().is('.navmenu-depth-1') ||\n      $el.is('.navmenu-link') && $el.parent().parent().is('.navmenu-depth-1')\n    );\n  }\n\n  isSingleLine() {\n    const $menuItems = $('.navmenu-depth-1 > .navmenu-item', this.$el);\n    let isSingleLine = true;\n    let prevTop = Infinity;\n\n    for (const menuItem of $menuItems) {\n      const top = menuItem.getBoundingClientRect().top;\n\n      if (prevTop == Infinity || prevTop == top) {\n        prevTop = top;\n      } else {\n        isSingleLine = false;\n        break;\n      }\n    }\n\n    return isSingleLine;\n  }\n}\n","import $ from 'jquery';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport $script from 'scriptjs';\nimport MobileNav from '../snippets/NavMobile';\nimport DesktopNav from '../snippets/NavDesktop';\nimport Layout from '../Layout';\nimport debounce from 'just-debounce';\n\nexport default class HeaderStaticSection {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.$mobileNavToggle = this.$el.find('[data-mobilenav-toggle]');\n    this.currency = section.data.currency;\n    this.$switcher = $('[data-currency-converter]');\n\n    // Sub-components\n    this.mobileNav = new MobileNav(this.$el.find('.mobilenav'));\n    this.nav = new DesktopNav(this.$el.find('.site-navigation'), section.postMessage);\n\n    // Event handlers\n    this.events = [\n      // Open mobile nav button\n      // Mobile safari will only allow us to focus the actual search input\n      // programaticaly if we trigger it from an input field.\n      this.$mobileNavToggle.on('click.header', event => {\n        event.preventDefault();\n        this.mobileNav.open();\n      }),\n      $(window).on('resize.header', debounce(() => this._repositionNav(), 16, true, true)),\n    ];\n\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    Layout.onBreakpointChange(this.layoutHandler);\n\n    if (this.currency.enable) {\n      const $scripts = $('[data-scripts]');\n\n      $script($scripts.data('shopify-currencies'), () => {\n        $script($scripts.data('shopify-jquery-currencies'), () => {\n          this._converter();\n        });\n      });\n    }\n\n    this._repositionNav();\n  }\n\n  _repositionNav() {\n    this.$el.removeClass('site-navigation-flex');\n\n    if (Layout.isBreakpoint('S')) {\n      return;\n    }\n\n    this.$el.toggleClass('site-navigation-flex', !this.nav.isSingleLine());\n  }\n\n  _converter() {\n    CurrencyConverter.init({\n      switcherSelector: '[data-currency-converter]',\n      priceSelector: '.money',\n      shopCurrency: this.currency.shopCurrency,\n      defaultCurrency: this.currency.defaultCurrency,\n      displayFormat: this.currency.displayFormat,\n      moneyFormat: this.currency.moneyFormat,\n      moneyFormatNoCurrency: this.currency.moneyFormatNoCurrency,\n      moneyFormatCurrency: this.currency.moneyFormatCurrency,\n    });\n\n    this.$switcher.on('change.converter', event => {\n      CurrencyConverter.setCurrency(event.currentTarget.value);\n    });\n  }\n\n  onSectionUnload() {\n    this.nav.unload();\n    this.mobileNav.unload();\n    this.events.forEach($el => $el.off('.header'));\n\n    Layout.offBreakpointChange(this.layoutHandler);\n\n    if (this.currency.enable) {\n      this.$switcher.off('change.converter');\n    }\n  }\n\n  onSectionMessage(name, data) {\n    if (name === 'mobilenav:open') this.mobileNav.open();\n    if (name === 'mobilenav:close') this.mobileNav.close();\n    if (name === 'product:add-to-cart') {\n      $('[data-cart-item-count]', this.$el).text(data.response.item_count);\n    }\n\n    if (name === 'nav:close-all') this.nav.closeAll();\n  }\n\n  onBreakpointChange() {\n    if (Layout.isBreakpoint('M') || Layout.isBreakpoint('L')) {\n      this.mobileNav.close();\n    }\n  }\n}\n","import $ from 'jquery';\n\nexport default class MeganavMenu {\n  constructor(el) {\n    this.$el = $(el);\n\n    this.$el.on('click.meganav-menu', '.meganav-menu-header', event => {\n      const $header = $(event.currentTarget);\n\n      if (!$header.hasClass('meganav-menu-empty')) {\n        event.preventDefault();\n        this.toggleList($header);\n      }\n    });\n  }\n\n  unload() {\n    this.$el.off('.meganav-menu');\n  }\n\n  toggleList($header, state) {\n    const $group = $header.parents('.meganav-menu-group');\n    const $list = $group.find('.meganav-menu-items');\n\n    $group.toggleClass('meganav-menu-active', state);\n    $list.slideToggle(state);\n  }\n}\n","/**\n * Add classes to an scrollable element to represent its scroll state.\n */\nexport default class FadePanel {\n  constructor(el) {\n    this.el = (el instanceof Element)\n      ? el\n      : document.querySelector(el);\n\n    this.container = this.el\n      ? this.el.parentNode\n      : null;\n\n    this.classnames = {\n      top: 'fadepanel-top',\n      bottom: 'fadepanel-bottom',\n      left: 'fadepanel-left',\n      right: 'fadepanel-right',\n    };\n\n    this.onScroll = this.update.bind(this);\n\n    if (this.container) {\n      this.el.addEventListener('scroll', this.onScroll);\n      this.onScroll();\n    }\n  }\n\n  unload() {\n    this.el.removeEventListener('scroll', this.onScroll);\n  }\n\n  update() {\n    const classes = this.container.className.split(' ');\n\n    const isLeft = this.el.scrollLeft > 0;\n    const leftIndex = classes.indexOf(this.classnames.left);\n    if (isLeft && leftIndex === -1) classes.push(this.classnames.left);\n    if (!isLeft && leftIndex !== -1) classes.splice(leftIndex, 1);\n\n    const isRight = this.el.scrollLeft < this.el.scrollWidth - this.el.clientWidth;\n    const rightIndex = classes.indexOf(this.classnames.right);\n    if (isRight && rightIndex === -1) classes.push(this.classnames.right);\n    if (!isRight && rightIndex !== -1) classes.splice(rightIndex, 1);\n\n    const isTop = this.el.scrollTop > 0;\n    const topIndex = classes.indexOf(this.classnames.top);\n    if (isTop && topIndex === -1) classes.push(this.classnames.top);\n    if (!isTop && topIndex !== -1) classes.splice(topIndex, 1);\n\n    const bottomIndex = classes.indexOf(this.classnames.bottom);\n    const isBottom = this.el.scrollTop < this.el.scrollHeight - this.el.clientHeight;\n    if (isBottom && bottomIndex === -1) classes.push(this.classnames.bottom);\n    if (!isBottom && bottomIndex !== -1) classes.splice(bottomIndex, 1);\n\n    this.container.className = classes.join(' ');\n  }\n}\n","import $ from 'jquery';\nimport imagesLoaded from 'imagesloaded';\nimport NavTrigger from '../snippets/NavTrigger';\nimport MeganavMenu from '../snippets/MeganavMenu';\nimport FadePanel from '../snippets/FadePanel';\nimport layout from '../Layout.js';\n\nexport default class MeganavStaticSection {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.$window = $(window);\n\n    // Editor check\n    this.isThemeEditor = window.Shopify && window.Shopify.designMode;\n\n    this.trigger = section.data.trigger;\n    this.postMessage = section.postMessage;\n    this.clones = [];\n\n    if (this.isThemeEditor || this.trigger) {\n      this.clone();\n    }\n\n    this.navTrigger = new NavTrigger({\n      el: section.el,\n      namespace: 'meganav',\n      trigger: this.trigger,\n      onShow: () => {\n        this.update();\n        this.postMessage('nav:close-all', {});\n        this.postMessage('nav:close-triggers', { source: this.$el });\n        this.postMessage('nav:show-overlay', { source: this.$el });\n      },\n    });\n\n    // Ensure images have the same height\n    this.$window.on('resize.meganav', event => this.update());\n\n    // Fade out edges when scrolling horizontally\n    this.fadePanel = new FadePanel('[data-meganav-clone-source] .meganav-menu-panel-contents');\n\n    // Handle breakpoint changes while editing\n    this.layoutHandler = this.onBreakpointChange.bind(this);\n    layout.onBreakpointChange(this.layoutHandler);\n\n    // Re-layout items as images load\n    this.onImageLoad = this.update.bind(this);\n    this.imagesLoaded = new imagesLoaded(this.$el[0]);\n    this.imagesLoaded.on('progress', this.onImageLoad);\n  }\n\n  onSectionUnload() {\n    this.clones.forEach(clone => {\n      clone.$el.empty();\n      clone.menu.unload();\n    });\n\n    this.$window.off('.meganav');\n\n    this.navTrigger.unload();\n    layout.offBreakpointChange(this.layoutHandler);\n\n    this.imagesLoaded.off('progress', this.onImageLoad);\n  }\n\n  onSectionSelect() {\n    this.isEditing = true;\n\n    if (layout.isBreakpoint('M') || layout.isBreakpoint('L')) {\n      this.navTrigger.lock();\n    } else {\n      this.postMessage('mobilenav:open');\n    }\n  }\n\n  onSectionDeselect() {\n    this.isEditing = false;\n\n    if (layout.isBreakpoint('M') || layout.isBreakpoint('L')) {\n      this.navTrigger.unlock();\n    } else {\n      this.postMessage('mobilenav:close');\n    }\n  }\n\n  onSectionBlockSelect(block) {\n    const $el = $(block.el);\n    const $container = $el.parent();\n\n    $container.scrollLeft(\n      $el.offset().left - ($el.width() / 2) - ($container.width() / 2)\n    );\n  }\n\n  onSectionMessage(name, data) {\n    if (name === 'nav:close-triggers' && data.source !== this.$el) {\n      this.navTrigger.hide();\n    }\n    if (name === 'nav:show-overlay') {\n      this.navTrigger.showOverlay();\n    }\n  }\n\n  onBreakpointChange() {\n    if (!this.isEditing) return;\n\n    if (layout.isBreakpoint('M') || layout.isBreakpoint('L')) {\n      this.navTrigger.lock();\n      this.postMessage('mobilenav:close');\n    } else {\n      this.navTrigger.unlock();\n      this.postMessage('mobilenav:open');\n    }\n  }\n\n  /**\n   * Copy the mega nav to other parts of the theme.\n   */\n  clone() {\n    const $source = this.$el.find('[data-meganav-clone-source]').first();\n    if (!$source.length) return;\n\n    const $clone = $source.clone().removeAttr('data-meganav-clone-source');\n\n    // Add meganav to mobilenav panel\n    const $mobileTarget = $('[data-meganav-mobile-target]');\n\n    if ($mobileTarget.length) {\n      // Remove Theme Editor block data attributes so the Theme Editor\n      // doesn't get confused about multiple elements having the\n      // `block.shopify_attributes` attributes.\n      $clone.find('.meganav-menu-group').each((index, el) => this._removeDataAttributes(el));\n\n      $mobileTarget.append($clone);\n\n      this.clones.push({\n        $el: $mobileTarget,\n        menu: new MeganavMenu($mobileTarget),\n      });\n    }\n  }\n\n  update() {\n    this.fadePanel.update();\n    this._updateImageHeights();\n  }\n\n  /**\n   * Set meganav collection image heights to match the tallest.\n   *\n   * This is purely visual, to make all the collection titles line up nicely.\n   */\n  _updateImageHeights() {\n    const $images = this.$el.find('.meganav-menu-image');\n    if (!$images.length) return;\n\n    // Find maximum image height\n    let height = 0;\n    $images.each((index, el) => {\n      const $img = $(el).find('img, svg').first();\n      if (!$img.length) return;\n\n      height = Math.max(height, $img[0].clientHeight);\n    });\n\n    // Set all images height to maximum\n    if (height) {\n      $images.each((index, el) => $(el).height(height));\n    }\n  }\n\n  /**\n   * Remove all data attributes from an element.\n   *\n   * @param {Element} el\n   */\n  _removeDataAttributes(el) {\n    if (!el || !el.attributes) return;\n\n    const attributesToRemove = [];\n\n    for (let i = el.attributes.length - 1; i >= 0; i--) {\n      const name = el.attributes[i].name;\n\n      if (name.substring(0, 5) === 'data-') {\n        attributesToRemove.push(name);\n      }\n    }\n\n    attributesToRemove.forEach(name => el.removeAttribute(name));\n  }\n}\n","import $ from 'jquery';\nimport MeganavMenu from '../snippets/MeganavMenu';\n\nexport default class MobileCollectionsDynamicSection {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.menu = new MeganavMenu(this.$el);\n  }\n\n  onSectionUnload() {\n    this.menu.unload();\n  }\n}\n","import $ from 'jquery';\nimport BlogLayout from '../snippets/BlogLayout';\nimport ProductItem from '../snippets/ProductItem';\n\nexport default class SearchStaticSection {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.section = section;\n\n    // Tabs\n    this.$tabs = $('.search-results-tab', section.el);\n    this.$groups = $('.search-results-group', section.el);\n\n    // Article results\n    this.$articles = $('[data-article-excerpts]', section.el);\n    this.blogLayout = new BlogLayout(this.$articles);\n\n    // Events\n    this.events = [\n      this.$tabs.on('click.search', event => {\n        event.preventDefault();\n        this._selectTab(event.currentTarget);\n      }),\n    ];\n\n    // Product items\n    this.productItems = [];\n    const $productItems = $('[data-product-item]', this.$el);\n\n    for (const productItem of $productItems) {\n      this.productItems.push(\n        new ProductItem($(productItem), this.section.postMessage)\n      );\n    }\n\n    // Init state\n    this.$tabs.first().click();\n  }\n\n  onSectionUnload() {\n    this.blogLayout.unload();\n    this.events.forEach($el => $el.off('.search'));\n  }\n\n  _selectTab(el) {\n    const $el = $(el);\n\n    // Select tab\n    this.$tabs.removeClass('search-results-tab-selected');\n    $el.addClass('search-results-tab-selected');\n\n    // Select group\n    this.$groups.removeClass('search-results-group-selected');\n    const selector = $el.attr('href');\n    $(selector).addClass('search-results-group-selected');\n\n    // Re-layout blog posts\n    this.blogLayout.update();\n  }\n}\n","import $ from 'jquery';\nimport BlogLayout from '../snippets/BlogLayout';\n\nexport default class StaticBlog {\n  constructor(section) {\n    this.$articles = $('[data-article-excerpts]', section.el);\n    this.blogLayout = new BlogLayout(this.$articles);\n  }\n\n  onSectionUnload() {\n    this.blogLayout.unload();\n  }\n}\n","import $ from 'jquery';\nimport debounce from 'just-debounce';\nimport CurrencyConverter from 'shopify-currency-converter';\nimport Menu from '../Menu';\nimport Quantity from '../snippets/Quantity';\n\nexport default class StaticCart {\n  constructor(section) {\n    this.$el = $(section.el);\n    this.data = section.data;\n    this.$cartItemButtonDismiss = $('[data-cart-item-button-dismiss]', this.$el);\n    this.postMessage = section.postMessage;\n\n    // Initialize cart items\n    this.items = [];\n\n    this.$el.find('[data-quantity]').each((index, el) => {\n      const $el = $(el).closest('[data-cart-item]');\n      const variantID = $el.data('cart-item-variant-id');\n      const quantity = new Quantity(el);\n\n      $(quantity.input).on('change.cart', debounce(event => {\n        this._changeQuantity(variantID, quantity.value);\n      }, 500));\n\n      this.items.push({ $el, quantity, variantID });\n    });\n\n    this._bindEvents();\n\n    Shopify.Cart.ShippingCalculator.show({\n      submitButton: this.data.button_update_shipping_title,\n      submitButtonDisabled: this.data.button_update_shipping_disabled_title,\n      customerIsLoggedIn: this.data.customer_logged_in,\n      moneyFormat: this.data.money_format,\n    });\n\n    // Menu system\n    this.states = {\n      default: {\n        buttonsSelector: '[data-cart-menu-buttons-default]',\n        buttons: [\n          {\n            selector: '[data-cart-menu-button-calculate-shipping]',\n            callback: () => { this.menu.changeState(this.states.shippingCalculator); },\n          },\n        ],\n      },\n      shippingCalculator: {\n        slideoutSelector: '[data-cart-menu-slideout]',\n        buttonsSelector: '[data-cart-menu-buttons-shipping-calculator]',\n        buttons: [\n          {\n            selector: '[data-cart-menu-slideout-button-dismiss]',\n            callback: () => { this.menu.changeState(this.states.default); },\n          },\n          {\n            selector: '[data-cart-menu-button-cancel-shipping]',\n            callback: () => { this.menu.changeState(this.states.default); },\n          },\n          {\n            selector: '[data-cart-menu-button-update-shipping]',\n            // None needed, Shopify.Cart.ShippingCalculator takes care of this\n            callback: () => {},\n          },\n        ],\n        dismiss: () => { this.menu.changeState(this.states.default); },\n      },\n    };\n\n    this.$cartMenuContainer = $('[data-cart-menu-container]', this.$el);\n    this.menu = new Menu(this.$cartMenuContainer, this.states, this.states.default);\n  }\n\n  _bindEvents() {\n    this.$cartItemButtonDismiss.on('click.cart', (event) => {\n      const $cartItem = $(event.currentTarget).closest('[data-cart-item]');\n      const variantID = $cartItem.data('cart-item-variant-id');\n\n      this._removeFromCart($cartItem, variantID);\n    });\n  }\n\n  _unbindEvents() {\n    this.$cartItemButtonDismiss.off('click.cart');\n  }\n\n  _removeFromCart($cartItem, variantID) {\n    this._updateCart(variantID, 0)\n      .done((response) => {\n\n        if (response.item_count == 0) {\n          this.$cartMenuContainer.slideUp();\n          $('[data-cart-form]').slideUp(() => {\n            $('[data-cart-empty-message]', this.$el).show();\n          });\n        } else {\n          $cartItem.slideUp(() => {\n            $cartItem.remove();\n          });\n        }\n\n        this.postMessage('product:add-to-cart', { response });\n\n        $('[data-cart-subtotal]', this.$el)\n          .text(Shopify.formatMoney(response.original_total_price, this.data.money_format))\n          .each((index, el) => CurrencyConverter.update(el));\n      });\n  }\n\n  _changeQuantity(variantID, quantity) {\n    this._updateCart(variantID, quantity)\n      .done((response) => {\n        // Update item counts\n        if (response && response.items) {\n          response.items.forEach(responseItem => {\n            this.items.forEach(item => {\n              if (item.variantID === responseItem.variant_id) {\n                item.quantity.change(responseItem.quantity, false);\n              }\n            });\n          });\n        }\n\n        this.postMessage('product:add-to-cart', { response });\n\n        // Update price\n        $('[data-cart-subtotal]', this.$el)\n          .text(Shopify.formatMoney(response.original_total_price, this.data.money_format))\n          .each((index, el) => CurrencyConverter.update(el));\n      });\n  }\n\n  _updateCart(variantID, quantity) {\n    let updateJson = {\n      id: variantID,\n      quantity: quantity,\n    };\n\n    return $.ajax({\n      type: 'POST',\n      url: '/cart/change.js',\n      data: updateJson,\n      dataType: 'json',\n    });\n  }\n\n  _toggleSlideout() {\n    this.$slideout.slideToggle();\n  }\n\n  onSectionUnload() {\n    this._unbindEvents();\n\n    // Unload cart items\n    this.items.forEach(item => {\n      item.quantity.unload();\n    });\n  }\n}\n","import $ from 'jquery';\nimport imagesLoaded from 'imagesloaded';\nimport ProductItem from '../snippets/ProductItem';\nimport Menu from '../Menu';\n\nexport default class StaticSection {\n  constructor(section) {\n    this.section = section;\n    this.$el = $(section.el);\n    this.data = section.data;\n\n    // Menu system\n    this.states = {\n      default: {\n        buttonsSelector: '[data-collection-menu-buttons-default]',\n        buttons: [\n          {\n            selector: '[data-collection-menu-button-sortby]',\n            callback: () => { this.menu.changeState(this.states.sortBy); },\n          },\n          {\n            selector: '[data-collection-menu-button-refine]',\n            callback: () => { this.menu.changeState(this.states.refine); },\n          },\n        ],\n      },\n      sortBy: {\n        slideoutSelector: '[data-collection-slideout-sortby]',\n        buttonsSelector: '[data-collection-menu-buttons-sortby]',\n        buttons: [\n          {\n            selector: '[data-collection-menu-slideout-button-dismiss]',\n            callback: () => { this.menu.changeState(this.states.default); },\n          },\n          {\n            selector: '[data-collection-menu-button-cancel]',\n            callback: () => { this.menu.changeState(this.states.default); },\n          },\n          {\n            selector: '[data-collection-menu-button-apply]',\n            callback: () => { this._applySortByAndRefine(); },\n          },\n        ],\n        dismiss: () => { this.menu.changeState(this.states.default); },\n      },\n      refine: {\n        slideoutSelector: '[data-collection-slideout-refine]',\n        buttonsSelector: '[data-collection-menu-buttons-refine]',\n        buttons: [\n          {\n            selector: '[data-collection-menu-slideout-button-dismiss]',\n            callback: () => { this.menu.changeState(this.states.default); },\n          },\n          {\n            selector: '[data-collection-menu-button-cancel]',\n            callback: () => { this.menu.changeState(this.states.default); },\n          },\n          {\n            selector: '[data-collection-menu-button-apply]',\n            callback: () => { this._applySortByAndRefine(); },\n          },\n        ],\n        dismiss: () => { this.menu.changeState(this.states.default); },\n      },\n    };\n\n    this.$collectionMenuContainer = $('[data-collection-menu-container]', this.$el);\n    this.menu = new Menu(this.$collectionMenuContainer, this.states, this.states.default);\n\n    // History\n    this.isThemeEditor = window.Shopify && window.Shopify.designMode;\n    this.useHistory = !this.isThemeEditor && history.pushState;\n    this.$collectionTags = $('[data-collection-tag]', this.$el);\n    this.selectedCollectionTags = [];\n    this.$sortByOptions = $('[data-sortby-option]', this.$el);\n\n    if (this.useHistory) {\n      this._initTags();\n    }\n\n    // Product items\n    this.productItems = [];\n    const $productItems = $('[data-product-item]', this.$el);\n\n    for (const productItem of $productItems) {\n      this.productItems.push(\n        new ProductItem($(productItem), this.section.postMessage)\n      );\n    }\n\n    this._setSortByQueryParameters();\n    this._updateSortByButtons();\n    this._bindEvents();\n\n    this.imagesLoaded = new imagesLoaded(this.$el[0], null);\n    this.imagesLoaded.on('progress', () => {\n      const $collectionGrid = $('[data-collection-grid]', this.$el);\n\n      $collectionGrid.removeClass('collection-grid-uninit');\n      this._positionItems();\n    });\n  }\n\n  _bindEvents() {\n    $(window).on('resize.collection', () => this._positionItems());\n\n    if (this.useHistory) {\n      // Handles collection tag click event\n      this.$collectionTags.on('click.collection-menu', (event) => {\n        const $selectedTag = $(event.currentTarget);\n        const tag = $selectedTag.data('collection-tag');\n        const index = this.selectedCollectionTags.indexOf(tag);\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (index > -1) {\n          $selectedTag.removeAttr('data-collection-tag-selected');\n          this.selectedCollectionTags.splice(index, 1);\n        } else {\n          $selectedTag.attr('data-collection-tag-selected', '');\n          this.selectedCollectionTags.push(tag);\n        }\n      });\n    }\n\n    this.$sortByOptions.on('click.collection-menu', (event) => {\n      const $selectedSortByOption = $(event.currentTarget);\n\n      Shopify.queryParams.sort_by = $selectedSortByOption.val();\n      this.$sortByOptions\n        .parent()\n        .removeClass('collection-sortby-option-selected');\n      $selectedSortByOption\n        .parent()\n        .addClass('collection-sortby-option-selected');\n    });\n  }\n\n  _unbindEvents() {\n    $(window).off('resize.collection');\n    this.$collectionTags.off('click.collection-menu');\n    this.$sortByOptions.off('click.collection-menu');\n  }\n\n  _positionItems() {\n    const $header = $('[data-collection-header]', this.$el);\n    const $gridItems = $('[data-collection-grid-item]', this.$el);\n    const headerBottom = $header[0].getBoundingClientRect().bottom;\n\n    let foundFirstClear = false;\n    let lastGridItemTop = Infinity;\n    let currentRowGridItems = [];\n    let tallestRowGridItemHeight = -Infinity;\n\n    $gridItems.css({\n      clear: '',\n      height: '',\n    });\n\n    for (const gridItem of $gridItems) {\n      const $gridItem = $(gridItem);\n\n      const gridItemRect = gridItem.getBoundingClientRect();\n      const gridItemPercentageExceeding = gridItemRect.bottom < headerBottom\n        ? 0\n        : (gridItemRect.bottom - headerBottom) / gridItemRect.height;\n\n      if (lastGridItemTop != Infinity && gridItemRect.top != lastGridItemTop) {\n        currentRowGridItems.forEach(($el) => $el.css('height', tallestRowGridItemHeight));\n        tallestRowGridItemHeight = -Infinity;\n        currentRowGridItems = [];\n      }\n\n      tallestRowGridItemHeight = Math.max(tallestRowGridItemHeight, gridItemRect.height);\n      currentRowGridItems.push($gridItem);\n\n      if (!foundFirstClear && (gridItemPercentageExceeding > 0.60 || gridItemRect.top > headerBottom)) {\n        $(currentRowGridItems[0]).css('clear', 'left');\n        foundFirstClear = true;\n      }\n\n      lastGridItemTop = gridItem.getBoundingClientRect().top;\n    }\n  }\n\n  _initTags() {\n    const $selectedTags = this.$collectionTags.filter('[data-collection-tag-selected]');\n\n    for (const selectedTag of $selectedTags) {\n      const $selectedTag = $(selectedTag);\n      const tag = $selectedTag.data('collection-tag');\n      this.selectedCollectionTags.push(tag);\n    }\n  }\n\n  _setSortByQueryParameters() {\n    Shopify.queryParams = {};\n    if (location.search.length) {\n      for (var aKeyValue, i = 0, aCouples = location.search.substr(1).split('&'); i < aCouples.length; i++) {\n        aKeyValue = aCouples[i].split('=');\n        // Reset the page number when we apply (i.e. don't add it to params)\n        if (aKeyValue.length > 1 && aKeyValue[0] != 'page') {\n          Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);\n        }\n      }\n    }\n  }\n\n  _updateSortByButtons() {\n    this.$sortByOptions\n      .filter(`[value=\"${ this.data.sort_by }\"]`)\n      .prop('checked', true)\n      .parent()\n      .addClass('collection-sortby-option-selected');\n  }\n\n  _applySortByAndRefine() {\n    const isVendor = Shopify.queryParams.q;\n    let url = `${this.data.shop_url}/collections/${this.data.collection_handle}/${this.selectedCollectionTags.join('+')}?${$.param(Shopify.queryParams)}`;\n\n    if (isVendor) {\n      url = `${this.data.shop_url}/collections/all/${this.selectedCollectionTags.join('+')}?${$.param(Shopify.queryParams)}`;\n    }\n\n    window.location = url;\n  }\n\n  onSectionUnload() {\n    this._unbindEvents();\n    this.menu.unload();\n\n    for (const productItem of this.productItems) {\n      productItem.unload();\n    }\n  }\n}\n","import $ from 'jquery';\nimport Flickity from 'flickity';\nimport 'flickity-imagesloaded';\nimport imagesLoaded from 'imagesloaded';\nimport layout from '../Layout';\nimport ProductForm from './ProductForm';\n\nexport default class ProductDetails {\n  constructor($el, section) {\n    this.data = section.data;\n\n    this.$el = $el;\n    this.$window = $(window);\n    this.$productImages = $('[data-product-images]', $el);\n    this.$productImageItems = $('[data-product-image]', $el);\n    this.productImagesCount = this.$productImageItems.length;\n    this.$productDetails = $('[data-product-details]', $el);\n    this.$menu = $('[data-product-menu-container]', $el);\n\n    this.positionDetails = this._positionDetails.bind(this);\n\n    // Alert\n    this.$alert = $('.product-alert');\n\n    // Form\n    if (this.data.form_is_inline) {\n      this.form = new ProductForm(this.$el.find('[data-product-form-inline]'), {\n        container: '[data-product-details]',\n        product: this.data.product,\n        moneyFormat: this.data.money_format,\n        postMessage: section.postMessage,\n        useHistory: true,\n        onAddToCart: () => this._hideAlert(),\n        onSuccess: (response, quantity) => this._onAtcSuccess(response, quantity),\n        onError: (response, error) => this._onAtcError(response, error),\n        onVariantChange: (variant) => this._onVariantChange(variant),\n      });\n\n      this._onVariantChange(this.form.variantHelper.getSelectedVariant());\n    }\n\n    // Handle image loads\n    if (this.productImagesCount > 0) {\n      this.imagesLoaded = new imagesLoaded(this.$productImages[0]);\n      this.imagesLoaded.on('progress', this.positionDetails);\n    }\n\n    // Handle layout changes\n    this.onLayoutChange = event => this._layout();\n    layout.onBreakpointChange(this.onLayoutChange);\n\n    // Initial positioning\n    this._layout();\n\n    // Events\n    this.events = [\n      // Dismiss alert\n      this.$alert.find('.product-alert-dismiss').on('click.product', event => this._hideAlert()),\n    ];\n\n    this.selectVariantImage(this.data.selected_variant);\n  }\n\n  unload() {\n    this._destroyFlickity();\n    this.$window.off('.product-details');\n    layout.offBreakpointChange(this.onLayoutChange);\n    this.hideAlert();\n\n    if (this.form) this.form.unload();\n    if (this.imagesLoaded) this.imagesLoaded.off(this.positionDetails);\n  }\n\n  _layout() {\n    if (layout.isBreakpoint('L')) {\n      this._destroyFlickity();\n      this.$window.on('resize.product-details', this.positionDetails);\n    } else {\n      this._initFlickity();\n      this.$window.off('resize.product-details');\n    }\n\n    this._positionDetails();\n  }\n\n  _positionDetails() {\n    if (layout.isBreakpoint('L')) {\n      const imagesHeight = this.$productImages.outerHeight();\n      const detailsHeight = this.$productDetails.outerHeight();\n      const windowHeight = window.innerHeight;\n      const menuHeight = this.$menu.outerHeight() || 0;\n      const availableHeight = windowHeight - menuHeight;\n\n      this.isSticky =\n        imagesHeight > availableHeight &&\n        detailsHeight < availableHeight;\n    } else {\n      this.isSticky = false;\n    }\n\n    this.$productDetails.toggleClass('product-details-sticky', this.isSticky);\n  }\n\n  // Show correct image for the selected variant\n  selectVariantImage(variant) {\n    if (!variant || !variant.featured_image) return;\n\n    // Grab selected image element\n    const $productImage = $(`[data-product-image-id=\"${variant.featured_image.id}\"]`, this.$el);\n    if (!$productImage) return;\n\n    // Change slideshow slide if we are in mobile\n    if (this.flickity) {\n      const index = $productImage.data('product-image-index');\n      this.flickity.select(index, false, false);\n      return;\n    }\n\n    // Move image to top if we are not in sticky mode\n    if (!this.isSticky) {\n      $productImage.prependTo(this.$productImages);\n    }\n\n    // Fade out non-selected images\n    this.$productImageItems\n      .not($productImage)\n      .addClass('product-image-fade');\n\n    // Scroll to selected image\n    const scrollTop = this._getVariantScrollPosition(variant, $productImage);\n\n    $('html,body').animate({ scrollTop }, 'slow', 'swing', () => {\n      // Fade back in all the images\n      setTimeout(() => {\n        this.$productImageItems.removeClass('product-image-fade');\n      }, 333);\n    });\n  }\n\n  _getVariantScrollPosition(variant, $image) {\n    // If we are not in sticky mode, just scroll to the top of the page\n    if (!this.isSticky) return 0;\n\n    // Otherwise, scroll to the selected image\n    const menuHeight = this.$menu.height() || 0;\n\n    // Bottom of the image list\n    const max = this.$productImages.outerHeight()\n      + this.$productImages.offset().top\n      + menuHeight\n      - window.innerHeight;\n\n    // Image mid-point\n    const imageOffset = $image.offset().top\n      - ((window.innerHeight - menuHeight) / 2)\n      + ($image.height() / 2)\n\n    // Don't scroll past the bottom image\n    return Math.min(max, imageOffset);\n  }\n\n  _initFlickity() {\n    if (this.productImagesCount < 2) {\n      return;\n    }\n\n    // Reintroduce Flickity adaptive height (featured in v2.0.0 but not v1.2.1)\n    Flickity.prototype.setGallerySize = function() {\n      if ( this.options.setGallerySize ) {\n        const height = this.options.adaptiveHeight && this.selectedCell ?\n          this.selectedCell.size.outerHeight : this.maxCellHeight;\n        this.viewport.style.height = height + 'px';\n      }\n    };\n\n    const select = Flickity.prototype.select;\n    Flickity.prototype.select = function() {\n      select.apply( this, arguments );\n      if ( this.options.adaptiveHeight ) {\n        this.setGallerySize();\n      }\n    };\n\n    if (!this.flickity) {\n      this.flickity = new Flickity(this.$productImages[0], {\n        accessibility: true,\n        adaptiveHeight: true,\n        cellAlign: 'left',\n        cellSelector: '[data-product-image]',\n        friction: 0.8,\n        imagesLoaded: true,\n        pageDots: false,\n        prevNextButtons: false,\n        selectedAttraction: 0.2,\n        wrapAround: true,\n      });\n    }\n  }\n\n  _destroyFlickity() {\n    if (this.flickity) {\n      this.flickity.destroy();\n      this.flickity = null;\n      $('[data-product-image]', this.$el).attr('style', '');\n    }\n  }\n\n  _onAtcSuccess(response, quantity) {\n    this._showAlert(this.data.text.added_to_cart_link);\n  }\n\n  _onAtcError(response, error) {\n    this._showAlert(error, 'error');\n  }\n\n  _onVariantChange(variant) {\n    this.$el.find('.product-form-inline-atc-button')\n      .prop('disabled', !variant.available)\n      .text(variant.available\n        ? this.data.text.product_available\n        : this.data.text.product_unavailable\n      );\n  }\n\n  _showAlert(message, type = null) {\n    this._hideAlert();\n\n    // Add class name\n    if (type) {\n      this.alertClassName = `product-alert-${type}`;\n      this.$alert.addClass(this.alertClassName);\n    }\n\n    // Set text\n    const $message = this.$alert.find('.product-alert-message');\n    $message.html(message);\n    this.$alert.one('revealer-hide', event => $message.text(''));\n\n    // Show\n    this.$alert.revealer('show');\n\n    // Positioning\n    this._positionAlert();\n    $(window).on('scroll.product-alert', event => this._positionAlert());\n  }\n\n  _hideAlert() {\n    // Remove custom class names\n    this.$alert.removeClass(this.alertClassName);\n    this.alertClassName = null;\n\n    // Stop positioning\n    $(window).off('scroll.product-alert');\n\n    // Hide\n    this.$alert.revealer('hide');\n  }\n\n  _positionAlert() {\n    const top = this.$el.offset().top;\n    const scroll = document.body.scrollTop;\n    this.$alert.toggleClass('product-alert-fixed', scroll >= top);\n  }\n}\n","import $ from 'jquery';\nimport debounce from 'just-debounce';\nimport layout from '../Layout';\n\nexport default class ProductItem {\n  constructor($el) {\n    this.$el = $el;\n    this.$img = $(this.$el.children('img'));\n    this.framerate = 60;\n    this.scale = this.$img[0].naturalWidth / this.$el[0].getBoundingClientRect().width;\n    this.zoomable = this.scale >= 1.25;\n    this.zoomed = false;\n    this.layoutHandler = this._layoutHandler.bind(this);\n\n    if (this.zoomable) {\n      this._bindLayoutEvent();\n      this._layoutHandler();\n    }\n  }\n\n  _bindEvents() {\n    this.$el.on('click.product-zoom', (event) => {\n      this._toggleZoom(event.clientX, event.clientY);\n    });\n    $(window).on('resize.product-zoom', () => {\n      this._resetZoom();\n    });\n  }\n\n  _unbindEvents() {\n    this.$el.off('click.product-zoom');\n    $(window).off('resize.product-zoom');\n  }\n\n  _bindLayoutEvent() {\n    layout.onBreakpointChange(this.layoutHandler);\n  }\n\n  _unbindLayoutEvent() {\n    layout.offBreakpointChange(this.layoutHandler);\n  }\n\n  _layoutHandler() {\n    if (layout.isBreakpoint('L')) {\n      this.$el.addClass('product-image-zoomable');\n      this._bindEvents();\n    } else {\n      this.$el.removeClass('product-image-zoomable');\n      this._unbindEvents();\n      this._resetZoom();\n    }\n  }\n\n  _toggleZoom(clientX, clientY) {\n    if (!this.zoomed) {\n      this.$el.on('mousemove.product-zoom', debounce((event) => {\n        this._positionZoom(event.clientX, event.clientY);\n      }, 1000 / this.framerate, true, true));\n      this.$el.on('mouseout.product-zoom', () => this._resetZoom());\n      this.$el.addClass('product-image-zoomed');\n      this.$img.css('transform', `scale(${this.scale})`);\n      this._positionZoom(clientX, clientY);\n      this.zoomed = true;\n    } else {\n      this._resetZoom();\n    }\n  }\n\n  _resetZoom() {\n    this.$el.off('mousemove.product-zoom');\n    this.$el.off('mouseout.product-zoom');\n    this.$el.removeClass('product-image-zoomed');\n    this.$img.css('transform', '');\n    this.zoomed = false;\n  }\n\n  _positionZoom(clientX, clientY) {\n    const figRect = this.$el[0].getBoundingClientRect();\n    const imgRect = this.$img[0].getBoundingClientRect();\n    const figHalfWidth = figRect.width / 2;\n    const figHalfHeight = figRect.height / 2;\n    const centerX = figRect.left + figHalfWidth;\n    const centerY = figRect.top + figHalfHeight;\n    const widthDiff = imgRect.width / 2 - figHalfWidth;\n    const heightDiff = imgRect.height / 2 - figHalfHeight;\n    const translateX = (centerX - clientX) / figHalfWidth * widthDiff / this.scale;\n    const translateY = (centerY - clientY) / figHalfHeight * heightDiff / this.scale;\n\n    this.$img.css(\n      'transform',\n      `scale(${this.scale}) translate(${translateX}px, ${translateY}px)`\n    );\n  }\n\n  unload() {\n    this._unbindLayoutEvent();\n    this._unbindEvents();\n    this._resetZoom();\n  }\n}\n","import $ from 'jquery';\nimport ProductDetails from '../snippets/ProductDetails';\nimport ProductHighlights from '../snippets/ProductHighlights';\nimport ProductZoom from '../snippets/ProductZoom';\nimport ProductMenu from '../snippets/ProductMenu';\n\nexport default class StaticProduct {\n  constructor(section) {\n    this.section = section;\n    this.$el = $(section.el);\n\n    // Init product zooms\n    this.productZooms = [];\n    this.$el.find('[data-product-image]').each((index, el) => {\n      this.productZooms.push(new ProductZoom($(el)));\n    });\n\n    // Product details\n    this.productDetails = new ProductDetails(this.$el, section);\n\n    // Product menu\n    if (!this.section.data.form_is_inline) {\n      this.productMenu = new ProductMenu(this.$el, this.section.data, this.section.postMessage);\n    }\n\n    // Related products\n    const $related = $('[data-product-highlights]', this.$el);\n    if ($related.length) {\n      this.related = new ProductHighlights($related, this.section.postMessage);\n    }\n  }\n\n  onSectionMessage(name, data) {\n    if (name === 'product:change-variant') {\n      this.productDetails.selectVariantImage(data.variant);\n    }\n  }\n\n  onSectionUnload() {\n    if (this.related) this.related.unload();\n    if (this.productMenu) this.productMenu.unload();\n    this.productDetails.unload();\n    this.productZooms.forEach(zoom => zoom.unload());\n  }\n}\n","// Polyfills\nimport 'core-js/es6/symbol';\nimport 'core-js/fn/object/assign';\nimport 'core-js/fn/array/iterator';\n\n// jQuery plugins\nimport './globals/jquery';\nimport 'jquery-trend';\nimport 'jquery-revealer';\n\nimport $ from 'jquery';\nimport $script from 'scriptjs';\n\nimport './globals/flickity-ios-fix';\nimport fitvids from 'fitvids';\n\n// RTE\nimport RTE from './globals/RTE';\n\n// Google maps\nimport './globals/google-maps';\n\n// Template imports\nimport Account from './templates/Account';\nimport Index from './templates/Index';\n\n// Section imports\nimport Sections from './Sections';\nimport ContactbarStaticSection from './sections/ContactbarStaticSection';\nimport DynamicBlogPosts from './sections/DynamicBlogPosts';\nimport DynamicFeaturedProducts from './sections/DynamicFeaturedProducts';\nimport DynamicInstagram from './sections/DynamicInstagram';\nimport DynamicSlideshow from './sections/DynamicSlideshow';\nimport DynamicTwitter from './sections/DynamicTwitter';\nimport GiftCardStaticSection from './sections/GiftCardStaticSection';\nimport HeaderStaticSection from './sections/HeaderStaticSection';\nimport MeganavStaticSection from './sections/MeganavStaticSection';\nimport MobileCollectionsDynamicSection from './sections/MobileCollectionsDynamicSection';\nimport SearchStaticSection from './sections/SearchStaticSection';\nimport StaticBlog from './sections/StaticBlog';\nimport StaticCart from './sections/StaticCart';\nimport StaticCollection from './sections/StaticCollection';\nimport StaticProduct from './sections/StaticProduct';\n\nconst sections = new Sections();\n\nsections.register('dynamic-blog-posts', section => new DynamicBlogPosts(section));\nsections.register('dynamic-instagram', section => new DynamicInstagram(section));\nsections.register('dynamic-mobile-collections', section => new MobileCollectionsDynamicSection(section));\nsections.register('dynamic-slideshow', section => new DynamicSlideshow(section));\nsections.register('dynamic-twitter', section => new DynamicTwitter(section));\nsections.register('static-blog', section => new StaticBlog(section));\nsections.register('static-collection', section => new StaticCollection(section));\nsections.register('static-contactbar', section => new ContactbarStaticSection(section));\nsections.register('static-header', section => new HeaderStaticSection(section));\nsections.register('static-meganav', section => new MeganavStaticSection(section));\nsections.register('static-search-results', section => new SearchStaticSection(section));\n\n// Load sections that require the Shopify API\n$script($('[data-scripts]').data('shopify-api-url'), () => {\n  sections.register('dynamic-featured-products', section => new DynamicFeaturedProducts(section));\n  sections.register('static-product', section => new StaticProduct(section));\n});\n\n// Cart\n$script($('[data-scripts]').data('shopify-cart-url'), () => {\n  sections.register('static-cart', section => new StaticCart(section));\n});\n\n// Giftcard\n$script($('[data-scripts]').data('shopify-qrcode'), () => {\n  sections.register('static-giftcard', section => new GiftCardStaticSection(section));\n});\n\nfitvids();\nnew Account();\nnew Index();\nnew RTE();\n"],"names":["require$$0","isObject","require$$1","document","require$$2","anObject","require$$3","toPrimitive","dP","createDesc","require$$4","global","redefine","PROTOTYPE","$export","has","core","wksExt","toInteger","min","toIObject","shared","uid","$keys","cof","getKeys","require$$5","enumBugKeys","IE_PROTO","gOPN","toString","pIE","require$$6","IE8_DOM_DEFINE","gOPD","require$$28","require$$27","require$$26","require$$25","require$$24","require$$23","require$$22","require$$21","require$$20","require$$19","require$$18","require$$17","require$$16","require$$15","require$$14","require$$13","require$$12","require$$11","require$$10","require$$9","require$$8","require$$7","TAG","defined","gOPS","IObject","setToStringTag","toObject","ObjectProto","LIBRARY","hide","Iterators","this","window","jQuery","$","getStyleProperty","eventie","docReady","matchesSelector","getSize","utils","classie","EventEmitter","cell","flickity","on","event","$target","target","$flickityEnabledEl","closest","length","Flickity","data","get","removeEventListener","wrap","isArray","RTE","groupedContents","$rteContainers","_init","each","index","rteContainer","push","GroupedContent","layout","intelliparse","gm_authFailure","isThemeEditor","Shopify","designMode","maps","querySelectorAll","javascriptApi","geocodingApi","errorMessage","forEach","map","innerHTML","Account","$formWrapper","toggleClass","find","$customerAddresses","addressPage","$addressEditLinks","itemId","attr","removeClass","addClass","$addressDeleteLinks","CustomerAddress","destroy","id","CountryProvinceSelector","hideElement","eventHandlers","previousBreakpoint","currentBreakpoint","getBreakpoint","eventHandler","getComputedStyle","documentElement","getPropertyValue","replace","isBreakpoint","breakpoint","onBreakpointChange","indexOf","offBreakpointChange","splice","Index","_enumerateSections","addEventListener","indexWrapper","getElementsByClassName","sections","foundForward","foundReverse","i","sectionForward","sectionReverse","classList","remove","offsetHeight","className","Sections","handlers","instances","_onSectionEvent","bind","_triggerInstanceEvent","type","handler","warn","_initSections","dataEls","dataEl","el","parentNode","idEl","querySelector","sectionId","getAttribute","_createInstance","detail","blockId","instance","eventName","args","name","typeEl","console","_loadData","postMessage","_postMessage","JSON","parse","error","message","NavTrigger","options","$el","$document","namespace","trigger","onShow","onHide","$overlay","isHovering","isTouching","isLocked","selector","events","preventDefault","toggle","show","addTrigger","off","removeTriggers","revealer","force","one","addShim","hideOverlay","removeShim","$trigger","removeAttr","removeData","padding","height","offset","top","outerHeight","width","outerWidth","$shim","append","Map","center","container","addressHtml","createElement","address","innerText","zoom","parseInt","isNaN","colors","resize","geolocate","done","results","google","geometry","location","getMapStyles","getCenter","marker","Marker","addDomListener","debounce","fail","status","usageLimits","displayErrorInThemeEditor","deferred","Deferred","geocoder","Geocoder","geocode","GeocoderStatus","OK","reject","resolve","setCenter","clearListeners","elementType","stylers","color","e","visibility","a","featureType","d","c","b","f","ContactbarStaticSection","section","$map","hasMap","apiKey","api_key","clones","clone","undefined","getScript","createMap","navTrigger","source","$mobile","$info","$infoTrigger","$infoClose","layoutHandler","empty","unload","isEditing","lock","unlock","showOverlay","$source","first","$clone","children","$mobileTarget","$pageTarget","item","BlogLayout","update","_destroyMasonry","_destroyFlickity","_initFlickity","_initMasonry","masonry","Masonry","imagesLoaded","DynamicBlogPosts","$articles","blogLayout","Node","variant","optionsCount","neighbors","variants","option","available","ProductOptions","product","productHandle","handle","nodeMap","_generateNodeMap","variant2","addNeighbor","found","j","closestVariant","matchingValues","tempMatchingValues","_getVariant","_getClosestVariant","getValidOptions","VariantHelper","$variants","$options","productOptions","optionsTypes","_bindEvents","is","select","optionsType","radio","_unbindEvents","_switchVariant","firstLoad","availableOptions","value","filter","getVariant","_switchVariantSelect","_switchVariantRadio","val","$select","$optionEls","$option","prop","title","option1","isDefault","Menu","states","initialState","currentState","$currentStateSlideout","slideDown","changeState","newState","$oldSlideout","slideoutSelector","$oldButtons","buttonsSelector","$newSlideout","$newButtons","callback","_unbindSlideoutEvents","slideUp","_bindSlideoutEvents","focus","button","buttons","contains","dismiss","_minimizeSlideout","_maximizeSlideout","stopPropagation","getBoundingClientRect","animate","opacity","queue","duration","oldHeight","css","Quantity","$input","$decrement","$increment","change","_updateButtonState","range","currentValue","max","Infinity","ProductForm","$form","useHistory","history","replaceState","$atc","variantHelper","quantity","_addToCart","_changeVariant","input","onQuantityChange","getSelectedVariant","format","moneyFormat","_changeUrl","compare_at_price","text","formatMoney","CurrencyConverter","price","onVariantChange","params","param","url","product_available","product_unavailable","onAddToCart","ajax","serialize","_updateCart","onSuccess","response","onError","responseText","description","ProductMenu","inQuickshop","form","money_format","_onAtcSuccess","_onAtcError","_onVariantChange","_onQuantityChange","$productMenuButtonSelectOptionsVariantPrice","$productMenuButtonAtcVariantPrice","$productAtcFailureMessage","$productAtcSuccessMessage","$productAtcSuccessMessageVariantQuantity","$productAtcSuccessMessageProductTitle","$productAtcSuccessMessageVariantOptions","_clearFailure","menu","share","atc","defaultNoVariants","defaultWithVariants","$productMenuContainer","errorMessageTimeout","parent","productTitle","product_title","variant_options","join","atcSuccess","html","atcFailure","fadeIn","setTimeout","fadeOut","ProductQuickshop","$parent","$featuredImage","$imageThumbs","$imageThumbsSlide","loaded","productMenu","Layout","innerHeight","_open","_close","keyCode","_scrollToImage","$image","currentTarget","_switchImage","direction","imageSlideTop","closestThumb","imageThumb","bottom","thumbIndex","Math","offsetTop","_bindOnOpen","_unbindOnOpen","featured_image","$productImage","alt","src","srcset","ProductItem","productQuickshopMarkup","productQuickshop","_objectFitPolyfill","style","_isObjectFitAvailable","ProductHighlights","$productHighlightsNormal","productItems","$productItems","productItem","DynamicFeaturedProducts","productHighlights","DynamicInstagram","settings","onboarding","photoCount","accessToken","$photoTemplate","$photoContainer","$contentPlaceholder","_getPhotos","photos","_renderPhotos","photoPromise","then","meta","code","error_message","error_type","promise","photoArray","pop","photo","$template","date","Date","created_time","dateOptions","likes","count","timestamp","toLocaleDateString","locale","caption","sizes","instagramSquared","$link","link","$photo","small","large","DynamicSlideshow","$slideshow","$slides","autoplay","should_autoplay","slide_count","prototype","setGallerySize","adaptiveHeight","selectedCell","size","maxCellHeight","viewport","originalSelect","apply","arguments","slideIndex","reloadCells","block","stopPlayer","playPlayer","DynamicTwitter","$tweetContainer","$tweetDate","username","fetch","screenName","_renderTweet","tweets","tweet","time","content","GiftCardStaticSection","$qrcode","_addQRCode","qrcode","QRCode","MobileNav","$html","$panel","$content","$animators","$searchInput","$searchCancel","$contact","toggleItem","close","blur","$menu","siblings","slideToggle","NavDesktop","openItem","closeItem","closeAll","submenu","isFirstLevel","$menuItems","isSingleLine","prevTop","menuItem","HeaderStaticSection","$mobileNavToggle","currency","$switcher","mobileNav","nav","DesktopNav","open","_repositionNav","enable","$scripts","_converter","init","shopCurrency","defaultCurrency","displayFormat","moneyFormatNoCurrency","moneyFormatCurrency","setCurrency","item_count","MeganavMenu","$header","hasClass","toggleList","state","$group","parents","$list","FadePanel","Element","classnames","onScroll","classes","split","isLeft","scrollLeft","leftIndex","left","isRight","scrollWidth","clientWidth","rightIndex","right","isTop","scrollTop","topIndex","bottomIndex","isBottom","scrollHeight","clientHeight","MeganavStaticSection","$window","fadePanel","onImageLoad","$container","_removeDataAttributes","_updateImageHeights","$images","$img","attributes","attributesToRemove","substring","removeAttribute","MobileCollectionsDynamicSection","SearchStaticSection","$tabs","$groups","_selectTab","click","StaticBlog","StaticCart","$cartItemButtonDismiss","items","variantID","_changeQuantity","Cart","ShippingCalculator","button_update_shipping_title","button_update_shipping_disabled_title","customer_logged_in","shippingCalculator","default","$cartMenuContainer","$cartItem","_removeFromCart","original_total_price","responseItem","variant_id","updateJson","$slideout","StaticSection","sortBy","refine","_applySortByAndRefine","$collectionMenuContainer","pushState","$collectionTags","selectedCollectionTags","$sortByOptions","_initTags","_setSortByQueryParameters","_updateSortByButtons","$collectionGrid","_positionItems","$selectedTag","tag","$selectedSortByOption","queryParams","sort_by","$gridItems","headerBottom","foundFirstClear","lastGridItemTop","currentRowGridItems","tallestRowGridItemHeight","gridItem","$gridItem","gridItemRect","gridItemPercentageExceeding","$selectedTags","selectedTag","search","aKeyValue","aCouples","substr","decodeURIComponent","isVendor","q","shop_url","collection_handle","ProductDetails","$productImages","$productImageItems","productImagesCount","$productDetails","positionDetails","_positionDetails","$alert","form_is_inline","_hideAlert","onLayoutChange","_layout","selectVariantImage","selected_variant","hideAlert","imagesHeight","detailsHeight","windowHeight","menuHeight","availableHeight","isSticky","prependTo","not","_getVariantScrollPosition","imageOffset","_showAlert","added_to_cart_link","alertClassName","$message","_positionAlert","scroll","body","framerate","scale","naturalWidth","zoomable","zoomed","_layoutHandler","_bindLayoutEvent","_toggleZoom","clientX","clientY","_resetZoom","_positionZoom","figRect","imgRect","figHalfWidth","figHalfHeight","centerX","centerY","widthDiff","heightDiff","translateX","translateY","_unbindLayoutEvent","StaticProduct","productZooms","ProductZoom","productDetails","$related","related","register","StaticCollection","$script","fitvids"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}